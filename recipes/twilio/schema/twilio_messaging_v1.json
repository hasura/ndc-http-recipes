{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://messaging.twilio.com",
          "env": "TWILIO_MESSAGING_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "basic",
        "header": "",
        "username": {
          "env": "TWILIO_API_KEY"
        },
        "password": {
          "env": "TWILIO_API_SECRET"
        }
      }
    },
    "security": [
      {
        "accountSid_authToken": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "messagingFetchAlphaSender": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/AlphaSenders/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the AlphaSender resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/Services/{ServiceSid}/AlphaSenders/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1ServiceAlphaSender",
        "type": "named"
      }
    },
    "messagingFetchBrandRegistrations": {
      "request": {
        "url": "/v1/a2p/BrandRegistrations/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Brand Registration resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^BN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/a2p/BrandRegistrations/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1BrandRegistrations",
        "type": "named"
      }
    },
    "messagingFetchBrandVetting": {
      "request": {
        "url": "/v1/a2p/BrandRegistrations/{BrandSid}/Vettings/{BrandVettingSid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "BrandSid": {
          "description": "The SID of the Brand Registration resource of the vettings to read .",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "BrandSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^BN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "BrandVettingSid": {
          "description": "The Twilio SID of the third-party vetting record.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "BrandVettingSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^VT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/a2p/BrandRegistrations/{BrandSid}/Vettings/{BrandVettingSid}",
      "result_type": {
        "name": "MessagingMessagingV1BrandRegistrationsBrandVetting",
        "type": "named"
      }
    },
    "messagingFetchChannelSender": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/ChannelSenders/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the ChannelSender resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/Services/{MessagingServiceSid}/ChannelSenders/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1ServiceChannelSender",
        "type": "named"
      }
    },
    "messagingFetchDomainCertV4": {
      "request": {
        "url": "/v1/LinkShortening/Domains/{DomainSid}/Certificate",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "DomainSid": {
          "description": "Unique string used to identify the domain that this certificate should be associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/LinkShortening/Domains/{DomainSid}/Certificate",
      "result_type": {
        "name": "MessagingMessagingV1DomainCertV4",
        "type": "named"
      }
    },
    "messagingFetchDomainConfig": {
      "request": {
        "url": "/v1/LinkShortening/Domains/{DomainSid}/Config",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "DomainSid": {
          "description": "Unique string used to identify the domain that this config should be associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/LinkShortening/Domains/{DomainSid}/Config",
      "result_type": {
        "name": "MessagingMessagingV1DomainConfig",
        "type": "named"
      }
    },
    "messagingFetchDomainConfigMessagingService": {
      "request": {
        "url": "/v1/LinkShortening/MessagingService/{MessagingServiceSid}/DomainConfig",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "Unique string used to identify the Messaging service that this domain should be associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/LinkShortening/MessagingService/{MessagingServiceSid}/DomainConfig",
      "result_type": {
        "name": "MessagingMessagingV1DomainConfigMessagingService",
        "type": "named"
      }
    },
    "messagingFetchLinkshorteningMessagingServiceDomainAssociation": {
      "request": {
        "url": "/v1/LinkShortening/MessagingServices/{MessagingServiceSid}/Domain",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "Unique string used to identify the Messaging service that this domain should be associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/LinkShortening/MessagingServices/{MessagingServiceSid}/Domain",
      "result_type": {
        "name": "MessagingMessagingV1LinkshorteningMessagingServiceDomainAssociation",
        "type": "named"
      }
    },
    "messagingFetchPhoneNumber": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/PhoneNumbers/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the PhoneNumber resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/Services/{ServiceSid}/PhoneNumbers/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1ServicePhoneNumber",
        "type": "named"
      }
    },
    "messagingFetchService": {
      "request": {
        "url": "/v1/Services/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Service resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Services/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1Service",
        "type": "named"
      }
    },
    "messagingFetchShortCode": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/ShortCodes/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the ShortCode resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/Services/{ServiceSid}/ShortCodes/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1ServiceShortCode",
        "type": "named"
      }
    },
    "messagingFetchTollfreeVerification": {
      "request": {
        "url": "/v1/Tollfree/Verifications/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "A unique string identifying a Tollfree Verification.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^HH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Tollfree/Verifications/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1TollfreeVerification",
        "type": "named"
      }
    },
    "messagingFetchUsAppToPerson": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) to fetch the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the US A2P Compliance resource to fetch `QE2c6890da8086d771620e9b13fadeba0b`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^QE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Services/{MessagingServiceSid}/Compliance/Usa2p/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1ServiceUsAppToPerson",
        "type": "named"
      }
    },
    "messagingFetchUsAppToPersonUsecase": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p/Usecases",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "BrandRegistrationSid": {
          "description": "The unique string to identify the A2P brand.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "BrandRegistrationSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^BN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "MessagingServiceSid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) to fetch the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Services/{MessagingServiceSid}/Compliance/Usa2p/Usecases",
      "result_type": {
        "name": "MessagingMessagingV1ServiceUsAppToPersonUsecase",
        "type": "named"
      }
    },
    "messagingFetchUsecase": {
      "request": {
        "url": "/v1/Services/Usecases",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "GET /v1/Services/Usecases",
      "result_type": {
        "name": "MessagingMessagingV1Usecase",
        "type": "named"
      }
    },
    "messagingListAlphaSender": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/AlphaSenders",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Services/{ServiceSid}/AlphaSenders",
      "result_type": {
        "name": "MessagingListAlphaSenderResult",
        "type": "named"
      }
    },
    "messagingListBrandRegistrations": {
      "request": {
        "url": "/v1/a2p/BrandRegistrations",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/a2p/BrandRegistrations",
      "result_type": {
        "name": "MessagingListBrandRegistrationsResult",
        "type": "named"
      }
    },
    "messagingListBrandVetting": {
      "request": {
        "url": "/v1/a2p/BrandRegistrations/{BrandSid}/Vettings",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "BrandSid": {
          "description": "The SID of the Brand Registration resource of the vettings to read .",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "BrandSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^BN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "VettingProvider": {
          "description": "The third-party provider of the vettings to read",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingBrandVettingEnumVettingProvider",
              "type": "named"
            }
          },
          "http": {
            "name": "VettingProvider",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/a2p/BrandRegistrations/{BrandSid}/Vettings",
      "result_type": {
        "name": "MessagingListBrandVettingResult",
        "type": "named"
      }
    },
    "messagingListChannelSender": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/ChannelSenders",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/Services/{MessagingServiceSid}/ChannelSenders",
      "result_type": {
        "name": "MessagingListChannelSenderResult",
        "type": "named"
      }
    },
    "messagingListPhoneNumber": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/PhoneNumbers",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Services/{ServiceSid}/PhoneNumbers",
      "result_type": {
        "name": "MessagingListPhoneNumberResult",
        "type": "named"
      }
    },
    "messagingListService": {
      "request": {
        "url": "/v1/Services",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/Services",
      "result_type": {
        "name": "MessagingListServiceResult",
        "type": "named"
      }
    },
    "messagingListShortCode": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/ShortCodes",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Services/{ServiceSid}/ShortCodes",
      "result_type": {
        "name": "MessagingListShortCodeResult",
        "type": "named"
      }
    },
    "messagingListTollfreeVerification": {
      "request": {
        "url": "/v1/Tollfree/Verifications",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ExternalReferenceId": {
          "description": "Customer supplied reference id for the Tollfree Verification record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "ExternalReferenceId",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "IncludeSubAccounts": {
          "description": "Whether to include Tollfree Verifications from sub accounts in list response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubAccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Status": {
          "description": "The compliance status of the Tollfree Verification record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingTollfreeVerificationEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TollfreePhoneNumberSid": {
          "description": "The SID of the Phone Number associated with the Tollfree Verification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TollfreePhoneNumberSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Tollfree/Verifications",
      "result_type": {
        "name": "MessagingListTollfreeVerificationResult",
        "type": "named"
      }
    },
    "messagingListUsAppToPerson": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) to fetch the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/Services/{MessagingServiceSid}/Compliance/Usa2p",
      "result_type": {
        "name": "MessagingListUsAppToPersonResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "MessagingCreateAlphaSenderBody": {
      "fields": {
        "AlphaSender": {
          "description": "The Alphanumeric Sender ID string. Can be up to 11 characters long. Valid characters are A-Z, a-z, 0-9, space, hyphen `-`, plus `+`, underscore `_` and ampersand `\u0026`. This value cannot contain only numbers.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MessagingCreateBrandRegistrationsBody": {
      "fields": {
        "A2PProfileBundleSid": {
          "description": "A2P Messaging Profile Bundle Sid.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "BrandType": {
          "description": "Type of brand being created. One of: \"STANDARD\", \"SOLE_PROPRIETOR\". SOLE_PROPRIETOR is for low volume, SOLE_PROPRIETOR use cases. STANDARD is for all other use cases.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CustomerProfileBundleSid": {
          "description": "Customer Profile Bundle Sid.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Mock": {
          "description": "A boolean that specifies whether brand should be a mock or not. If true, brand will be registered as a mock brand. Defaults to false if no value is provided.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SkipAutomaticSecVet": {
          "description": "A flag to disable automatic secondary vetting for brands which it would otherwise be done.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "MessagingCreateBrandVettingBody": {
      "fields": {
        "VettingId": {
          "description": "The unique ID of the vetting",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "VettingProvider": {
          "type": {
            "name": "MessagingBrandVettingEnumVettingProvider",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MessagingCreateChannelSenderBody": {
      "fields": {
        "Sid": {
          "description": "The SID of the Channel Sender being added to the Service.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "MessagingCreateExternalCampaignBody": {
      "fields": {
        "CampaignId": {
          "description": "ID of the preregistered campaign.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CnpMigration": {
          "description": "Customers should use this flag during the ERC registration process to indicate to Twilio that the campaign being registered is undergoing CNP migration. It is important for the user to first trigger the CNP migration process for said campaign in their CSP portal and have Twilio accept the sharing request, before making this api call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "MessagingServiceSid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) that the resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "MessagingCreatePhoneNumberBody": {
      "fields": {
        "PhoneNumberSid": {
          "description": "The SID of the Phone Number being added to the Service.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "MessagingCreateServiceBody": {
      "fields": {
        "AreaCodeGeomatch": {
          "description": "Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/messaging/services#area-code-geomatch) on the Service Instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FallbackMethod": {
          "description": "The HTTP method we should use to call `fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingV1FallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "FallbackToLongCode": {
          "description": "[OBSOLETE] Former feature used to fallback to long code sender after certain short code message failures.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FallbackUrl": {
          "description": "The URL that we call using `fallback_method` if an error occurs while retrieving or executing the TwiML from the Inbound Request URL. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `fallback_url` defined for the Messaging Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "InboundMethod": {
          "description": "The HTTP method we should use to call `inbound_request_url`. Can be `GET` or `POST` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingV1InboundMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "InboundRequestUrl": {
          "description": "The URL we call using `inbound_method` when a message is received by any phone number or short code in the Service. When this property is `null`, receiving inbound messages is disabled. All messages sent to the Twilio phone number or short code will not be logged and received on the Account. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `inbound_request_url` defined for the Messaging Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "MmsConverter": {
          "description": "Whether to enable the [MMS Converter](https://www.twilio.com/docs/messaging/services#mms-converter) for messages sent through the Service instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "ScanMessageContent": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingServiceEnumScanMessageContent",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SmartEncoding": {
          "description": "Whether to enable [Smart Encoding](https://www.twilio.com/docs/messaging/services#smart-encoding) for messages sent through the Service instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "StatusCallback": {
          "description": "The URL we should call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StickySender": {
          "description": "Whether to enable [Sticky Sender](https://www.twilio.com/docs/messaging/services#sticky-sender) on the Service instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SynchronousValidation": {
          "description": "Reserved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "UseInboundWebhookOnNumber": {
          "description": "A boolean value that indicates either the webhook url configured on the phone number will be used or `inbound_request_url`/`fallback_url` url will be called when a message is received from the phone number. If this field is enabled then the webhook url defined on the phone number will override the `inbound_request_url`/`fallback_url` defined for the Messaging Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "Usecase": {
          "description": "A string that describes the scenario in which the Messaging Service will be used. Possible values are `notifications`, `marketing`, `verification`, `discussion`, `poll`, `undeclared`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ValidityPeriod": {
          "description": "How long, in seconds, messages sent from the Service are valid. Can be an integer from `1` to `14,400`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "MessagingCreateShortCodeBody": {
      "fields": {
        "ShortCodeSid": {
          "description": "The SID of the ShortCode resource being added to the Service.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "MessagingCreateTollfreeVerificationBody": {
      "fields": {
        "AdditionalInformation": {
          "description": "Additional information to be provided for verification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessCity": {
          "description": "The city of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessContactEmail": {
          "description": "The email address of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessContactFirstName": {
          "description": "The first name of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessContactLastName": {
          "description": "The last name of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessContactPhone": {
          "description": "The E.164 formatted phone number of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "BusinessCountry": {
          "description": "The country of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessName": {
          "description": "The name of the business or organization using the Tollfree number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessPostalCode": {
          "description": "The postal code of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessStateProvinceRegion": {
          "description": "The state/province/region of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessStreetAddress": {
          "description": "The address of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessStreetAddress2": {
          "description": "The address of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessWebsite": {
          "description": "The website of the business or organization using the Tollfree number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CustomerProfileSid": {
          "description": "Customer's Profile Bundle BundleSid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ExternalReferenceId": {
          "description": "An optional external reference ID supplied by customer and echoed back on status retrieval.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessageVolume": {
          "description": "Estimate monthly volume of messages from the Tollfree Number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "NotificationEmail": {
          "description": "The email address to receive the notification about the verification result. .",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "OptInImageUrls": {
          "description": "Link to an image that shows the opt-in workflow. Multiple images allowed and must be a publicly hosted URL.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "OptInType": {
          "type": {
            "name": "MessagingTollfreeVerificationEnumOptInType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ProductionMessageSample": {
          "description": "An example of message content, i.e. a sample message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TollfreePhoneNumberSid": {
          "description": "The SID of the Phone Number associated with the Tollfree Verification.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "UseCaseCategories": {
          "description": "The category of the use case for the Tollfree Number. List as many are applicable..",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UseCaseSummary": {
          "description": "Use this to further explain how messaging is used by the business or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MessagingCreateUsAppToPersonBody": {
      "fields": {
        "AgeGated": {
          "description": "A boolean that specifies whether campaign is age gated or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "BrandRegistrationSid": {
          "description": "A2P Brand Registration SID",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Description": {
          "description": "A short description of what this SMS campaign does. Min length: 40 characters. Max length: 4096 characters.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DirectLending": {
          "description": "A boolean that specifies whether campaign allows direct lending or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "HasEmbeddedLinks": {
          "description": "Indicates that this SMS campaign will send messages that contain links.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "HasEmbeddedPhone": {
          "description": "Indicates that this SMS campaign will send messages that contain phone numbers.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "HelpKeywords": {
          "description": "End users should be able to text in a keyword to receive help. Those keywords must be provided as part of the campaign registration request. This field is required if managing help keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "HelpMessage": {
          "description": "When customers receive the help keywords from their end users, Twilio customers are expected to send back an auto-generated response; this may include the brand name and additional support contact information. This field is required if managing help keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessageFlow": {
          "description": "Required for all Campaigns. Details around how a consumer opts-in to their campaign, therefore giving consent to receive their messages. If multiple opt-in methods can be used for the same campaign, they must all be listed. 40 character minimum. 2048 character maximum.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessageSamples": {
          "description": "An array of sample message strings, min two and max five. Min length for each sample: 20 chars. Max length for each sample: 1024 chars.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "OptInKeywords": {
          "description": "If end users can text in a keyword to start receiving messages from this campaign, those keywords must be provided. This field is required if end users can text in a keyword to start receiving messages from this campaign. Values must be alphanumeric. 255 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "OptInMessage": {
          "description": "If end users can text in a keyword to start receiving messages from this campaign, the auto-reply messages sent to the end users must be provided. The opt-in response should include the Brand name, confirmation of opt-in enrollment to a recurring message campaign, how to get help, and clear description of how to opt-out. This field is required if end users can text in a keyword to start receiving messages from this campaign. 20 character minimum. 320 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "OptOutKeywords": {
          "description": "End users should be able to text in a keyword to stop receiving messages from this campaign. Those keywords must be provided. This field is required if managing opt out keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "OptOutMessage": {
          "description": "Upon receiving the opt-out keywords from the end users, Twilio customers are expected to send back an auto-generated response, which must provide acknowledgment of the opt-out request and confirmation that no further messages will be sent. It is also recommended that these opt-out messages include the brand name. This field is required if managing opt out keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SubscriberOptIn": {
          "description": "A boolean that specifies whether campaign has Subscriber Optin or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "UsAppToPersonUsecase": {
          "description": "A2P Campaign Use Case. Examples: [ 2FA, EMERGENCY, MARKETING..]",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MessagingListAlphaSenderResult": {
      "fields": {
        "alpha_senders": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingMessagingV1ServiceAlphaSender",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingListAlphaSenderResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "MessagingListAlphaSenderResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingListBrandRegistrationsResult": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingMessagingV1BrandRegistrations",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingListBrandRegistrationsResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "MessagingListBrandRegistrationsResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingListBrandVettingResult": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingMessagingV1BrandRegistrationsBrandVetting",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingListBrandVettingResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "MessagingListBrandVettingResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingListChannelSenderResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingListChannelSenderResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "senders": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingMessagingV1ServiceChannelSender",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "MessagingListChannelSenderResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingListPhoneNumberResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingListPhoneNumberResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingMessagingV1ServicePhoneNumber",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "MessagingListPhoneNumberResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingListServiceResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingListServiceResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "services": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingMessagingV1Service",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "MessagingListServiceResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingListShortCodeResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingListShortCodeResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "short_codes": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingMessagingV1ServiceShortCode",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "MessagingListShortCodeResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingListTollfreeVerificationResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingListTollfreeVerificationResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "verifications": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingMessagingV1TollfreeVerification",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "MessagingListTollfreeVerificationResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingListUsAppToPersonResult": {
      "fields": {
        "compliance": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingMessagingV1ServiceUsAppToPerson",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingListUsAppToPersonResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "MessagingListUsAppToPersonResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1BrandRegistrations": {
      "fields": {
        "a2p_profile_bundle_sid": {
          "description": "A2P Messaging Profile Bundle BundleSid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Brand Registration resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "brand_feedback": {
          "description": "DEPRECATED. Feedback on how to improve brand score",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MessagingBrandRegistrationsEnumBrandFeedback",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "brand_score": {
          "description": "The secondary vetting score if it was done. Otherwise, it will be the brand score if it's returned from TCR. It may be null if no score is available.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "brand_type": {
          "description": "Type of brand. One of: \"STANDARD\", \"SOLE_PROPRIETOR\". SOLE_PROPRIETOR is for the low volume, SOLE_PROPRIETOR campaign use case. There can only be one SOLE_PROPRIETOR campaign created per SOLE_PROPRIETOR brand. STANDARD is for all other campaign use cases. Multiple campaign use cases can be created per STANDARD brand.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "customer_profile_bundle_sid": {
          "description": "A2P Messaging Profile Bundle BundleSid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "errors": {
          "description": "A list of errors that occurred during the brand registration process.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "failure_reason": {
          "description": "DEPRECATED. A reason why brand registration has failed. Only applicable when status is FAILED.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "government_entity": {
          "description": "Identified as a government entity",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "identity_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingBrandRegistrationsEnumIdentityStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "mock": {
          "description": "A boolean that specifies whether brand should be a mock or not. If true, brand will be registered as a mock brand. Defaults to false if no value is provided.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "russell_3000": {
          "description": "Publicly traded company identified in the Russell 3000 Index",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sid": {
          "description": "The unique string to identify Brand Registration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "skip_automatic_sec_vet": {
          "description": "A flag to disable automatic secondary vetting for brands which it would otherwise be done.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingBrandRegistrationsEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "tax_exempt_status": {
          "description": "Nonprofit organization tax-exempt status per section 501 of the U.S. tax code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "tcr_id": {
          "description": "Campaign Registry (TCR) Brand ID. Assigned only after successful brand registration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Brand Registration resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1BrandRegistrationsBrandRegistrationOtp": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Brand Registration resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "brand_registration_sid": {
          "description": "The unique string to identify Brand Registration of Sole Proprietor Brand",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "MessagingMessagingV1BrandRegistrationsBrandVetting": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the vetting record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "brand_sid": {
          "description": "The unique string to identify Brand Registration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "brand_vetting_sid": {
          "description": "The Twilio SID of the third-party vetting record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^VT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "url": {
          "description": "The absolute URL of the Brand Vetting resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "vetting_class": {
          "description": "The type of vetting that has been conducted. One of STANDARD (Aegis) or POLITICAL (Campaign Verify).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "vetting_id": {
          "description": "The unique identifier of the vetting from the third-party provider.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "vetting_provider": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingBrandVettingEnumVettingProvider",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "vetting_status": {
          "description": "The status of the import vetting attempt. One of PENDING, SUCCESS, or FAILED.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MessagingMessagingV1DomainCertV4": {
      "fields": {
        "cert_in_validation": {
          "description": "Optional JSON field describing the status and upload date of a new certificate in the process of validation",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "certificate_sid": {
          "description": "The unique string that we created to identify this Certificate resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "Date that this Domain was registered to the Twilio platform to create a new Domain object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_expires": {
          "description": "Date that the private certificate associated with this domain expires. You will need to update the certificate before that date to ensure your shortened links will continue to work.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "Date that this Domain was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "domain_name": {
          "description": "Full url path for this domain.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "domain_sid": {
          "description": "The unique string that we created to identify the Domain resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1DomainConfig": {
      "fields": {
        "callback_url": {
          "description": "URL to receive click events to your webhook whenever the recipients click on the shortened links.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "config_sid": {
          "description": "The unique string that we created to identify the Domain config (prefix ZK).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^ZK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "continue_on_failure": {
          "description": "Boolean field to set customer delivery preference when there is a failure in linkShortening service",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "date_created": {
          "description": "Date this Domain Config was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "Date that this Domain Config was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "disable_https": {
          "description": "Customer's choice to send links with/without \"https://\" attached to shortened url. If true, messages will not be sent with https:// at the beginning of the url. If false, messages will be sent with https:// at the beginning of the url. False is the default behavior if it is not specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "domain_sid": {
          "description": "The unique string that we created to identify the Domain resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "fallback_url": {
          "description": "Any requests we receive to this domain that do not match an existing shortened message will be redirected to the fallback url. These will likely be either expired messages, random misdirected traffic, or intentional scraping.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1DomainConfigMessagingService": {
      "fields": {
        "callback_url": {
          "description": "URL to receive click events to your webhook whenever the recipients click on the shortened links.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "config_sid": {
          "description": "The unique string that we created to identify the Domain config (prefix ZK).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^ZK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "continue_on_failure": {
          "description": "Boolean field to set customer delivery preference when there is a failure in linkShortening service",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "date_created": {
          "description": "Date this Domain Config was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "Date that this Domain Config was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "domain_sid": {
          "description": "The unique string that we created to identify the Domain resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "fallback_url": {
          "description": "Any requests we receive to this domain that do not match an existing shortened message will be redirected to the fallback url. These will likely be either expired messages, random misdirected traffic, or intentional scraping.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "messaging_service_sid": {
          "description": "The unique string that identifies the messaging service",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1ExternalCampaign": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the Campaign belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "campaign_id": {
          "description": "ID of the preregistered campaign.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "messaging_service_sid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) that the resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that identifies a US A2P Compliance resource `QE2c6890da8086d771620e9b13fadeba0b`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^QE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "MessagingMessagingV1LinkshorteningMessagingService": {
      "fields": {
        "domain_sid": {
          "description": "The unique string identifies the domain resource",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "messaging_service_sid": {
          "description": "The unique string that identifies the messaging service",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1LinkshorteningMessagingServiceDomainAssociation": {
      "fields": {
        "domain_sid": {
          "description": "The unique string that we created to identify the Domain resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "messaging_service_sid": {
          "description": "The unique string that identifies the messaging service",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1RequestManagedCert": {
      "fields": {
        "certificate_sid": {
          "description": "The unique string that we created to identify this Certificate resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "Date that this Domain was registered to the Twilio platform to create a new Domain object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_expires": {
          "description": "Date that the private certificate associated with this domain expires. This is the expiration date of your existing cert.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "Date that this Domain was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "domain_name": {
          "description": "Full url path for this domain.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "domain_sid": {
          "description": "The unique string that we created to identify the Domain resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "managed": {
          "description": "A boolean flag indicating if the certificate is managed by Twilio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "requesting": {
          "description": "A boolean flag indicating if a managed certificate needs to be fulfilled by Twilio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1Service": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "area_code_geomatch": {
          "description": "Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/messaging/services#area-code-geomatch) on the Service Instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "fallback_method": {
          "description": "The HTTP method we use to call `fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingMessagingV1ServiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "fallback_to_long_code": {
          "description": "[OBSOLETE] Former feature used to fallback to long code sender after certain short code message failures.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "fallback_url": {
          "description": "The URL that we call using `fallback_method` if an error occurs while retrieving or executing the TwiML from the Inbound Request URL. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `fallback_url` defined for the Messaging Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "inbound_method": {
          "description": "The HTTP method we use to call `inbound_request_url`. Can be `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingMessagingV1ServiceInboundMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "inbound_request_url": {
          "description": "The URL we call using `inbound_method` when a message is received by any phone number or short code in the Service. When this property is `null`, receiving inbound messages is disabled. All messages sent to the Twilio phone number or short code will not be logged and received on the Account. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `inbound_request_url` defined for the Messaging Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "links": {
          "description": "The absolute URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "mms_converter": {
          "description": "Whether to enable the [MMS Converter](https://www.twilio.com/docs/messaging/services#mms-converter) for messages sent through the Service instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "scan_message_content": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingServiceEnumScanMessageContent",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Service resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "smart_encoding": {
          "description": "Whether to enable [Smart Encoding](https://www.twilio.com/docs/messaging/services#smart-encoding) for messages sent through the Service instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "status_callback": {
          "description": "The URL we call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sticky_sender": {
          "description": "Whether to enable [Sticky Sender](https://www.twilio.com/docs/messaging/services#sticky-sender) on the Service instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "synchronous_validation": {
          "description": "Reserved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Service resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "us_app_to_person_registered": {
          "description": "Whether US A2P campaign is registered for this Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "use_inbound_webhook_on_number": {
          "description": "A boolean value that indicates either the webhook url configured on the phone number will be used or `inbound_request_url`/`fallback_url` url will be called when a message is received from the phone number. If this field is enabled then the webhook url defined on the phone number will override the `inbound_request_url`/`fallback_url` defined for the Messaging Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "usecase": {
          "description": "A string that describes the scenario in which the Messaging Service will be used. Possible values are `notifications`, `marketing`, `verification`, `discussion`, `poll`, `undeclared`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "validity_period": {
          "description": "How long, in seconds, messages sent from the Service are valid. Can be an integer from `1` to `14,400`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "MessagingMessagingV1ServiceAlphaSender": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AlphaSender resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "alpha_sender": {
          "description": "The Alphanumeric Sender ID string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "capabilities": {
          "description": "An array of values that describe whether the number can receive calls or messages. Can be: `SMS`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "service_sid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) the resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the AlphaSender resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the AlphaSender resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1ServiceChannelSender": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ChannelSender resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "country_code": {
          "description": "The 2-character [ISO Country Code](https://www.iso.org/iso-3166-country-codes.html) of the number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "messaging_service_sid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/messaging/services) the resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sender": {
          "description": "The unique string that identifies the sender e.g whatsapp:+123456XXXX.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sender_type": {
          "description": "A string value that identifies the sender type e.g WhatsApp, Messenger.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the ChannelSender resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the ChannelSender resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1ServicePhoneNumber": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the PhoneNumber resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "capabilities": {
          "description": "An array of values that describe whether the number can receive calls or messages. Can be: `Voice`, `SMS`, and `MMS`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "country_code": {
          "description": "The 2-character [ISO Country Code](https://www.iso.org/iso-3166-country-codes.html) of the number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "service_sid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) the resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the PhoneNumber resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the PhoneNumber resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1ServiceShortCode": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "capabilities": {
          "description": "An array of values that describe whether the number can receive calls or messages. Can be: `SMS` and `MMS`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "country_code": {
          "description": "The 2-character [ISO Country Code](https://www.iso.org/iso-3166-country-codes.html) of the number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "service_sid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) the resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "short_code": {
          "description": "The [E.164](https://www.twilio.com/docs/glossary/what-e164) format of the short code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the ShortCode resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the ShortCode resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingMessagingV1ServiceUsAppToPerson": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the Campaign belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "age_gated": {
          "description": "A boolean that specifies whether campaign is age gated or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "brand_registration_sid": {
          "description": "The unique string to identify the A2P brand.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "campaign_id": {
          "description": "The Campaign Registry (TCR) Campaign ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "campaign_status": {
          "description": "Campaign status. Examples: IN_PROGRESS, VERIFIED, FAILED.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "description": {
          "description": "A short description of what this SMS campaign does. Min length: 40 characters. Max length: 4096 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "direct_lending": {
          "description": "A boolean that specifies whether campaign allows direct lending or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "errors": {
          "description": "Details indicating why a campaign registration failed. These errors can indicate one or more fields that were incorrect or did not meet review requirements.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "has_embedded_links": {
          "description": "Indicate that this SMS campaign will send messages that contain links.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "has_embedded_phone": {
          "description": "Indicates that this SMS campaign will send messages that contain phone numbers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "help_keywords": {
          "description": "End users should be able to text in a keyword to receive help. Those keywords must be provided as part of the campaign registration request. This field is required if managing help keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "help_message": {
          "description": "When customers receive the help keywords from their end users, Twilio customers are expected to send back an auto-generated response; this may include the brand name and additional support contact information. This field is required if managing help keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_externally_registered": {
          "description": "Indicates whether the campaign was registered externally or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "message_flow": {
          "description": "Details around how a consumer opts-in to their campaign, therefore giving consent to receive their messages. If multiple opt-in methods can be used for the same campaign, they must all be listed. 40 character minimum. 2048 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "message_samples": {
          "description": "An array of sample message strings, min two and max five. Min length for each sample: 20 chars. Max length for each sample: 1024 chars.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "messaging_service_sid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) that the resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "mock": {
          "description": "A boolean that specifies whether campaign is a mock or not. Mock campaigns will be automatically created if using a mock brand. Mock campaigns should only be used for testing purposes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "opt_in_keywords": {
          "description": "If end users can text in a keyword to start receiving messages from this campaign, those keywords must be provided. This field is required if end users can text in a keyword to start receiving messages from this campaign. Values must be alphanumeric. 255 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_in_message": {
          "description": "If end users can text in a keyword to start receiving messages from this campaign, the auto-reply messages sent to the end users must be provided. The opt-in response should include the Brand name, confirmation of opt-in enrollment to a recurring message campaign, how to get help, and clear description of how to opt-out. This field is required if end users can text in a keyword to start receiving messages from this campaign. 20 character minimum. 320 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "opt_out_keywords": {
          "description": "End users should be able to text in a keyword to stop receiving messages from this campaign. Those keywords must be provided. This field is required if managing opt out keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_out_message": {
          "description": "Upon receiving the opt-out keywords from the end users, Twilio customers are expected to send back an auto-generated response, which must provide acknowledgment of the opt-out request and confirmation that no further messages will be sent. It is also recommended that these opt-out messages include the brand name. This field is required if managing opt out keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rate_limits": {
          "description": "Rate limit and/or classification set by each carrier, Ex. AT\u0026T or T-Mobile.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "sid": {
          "description": "The unique string that identifies a US A2P Compliance resource `QE2c6890da8086d771620e9b13fadeba0b`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^QE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "subscriber_opt_in": {
          "description": "A boolean that specifies whether campaign has Subscriber Optin or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the US App to Person resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "us_app_to_person_usecase": {
          "description": "A2P Campaign Use Case. Examples: [ 2FA, EMERGENCY, MARKETING, SOLE_PROPRIETOR...]. SOLE_PROPRIETOR campaign use cases can only be created by SOLE_PROPRIETOR Brands, and there can only be one SOLE_PROPRIETOR campaign created per SOLE_PROPRIETOR Brand.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MessagingMessagingV1ServiceUsAppToPersonUsecase": {
      "fields": {
        "us_app_to_person_usecases": {
          "description": "Human readable name, code, description and post_approval_required (indicates whether or not post approval is required for this Use Case) of A2P Campaign Use Cases.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        }
      }
    },
    "MessagingMessagingV1TollfreeVerification": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Tollfree Verification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "additional_information": {
          "description": "Additional information to be provided for verification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_city": {
          "description": "The city of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_contact_email": {
          "description": "The email address of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_contact_first_name": {
          "description": "The first name of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_contact_last_name": {
          "description": "The last name of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_contact_phone": {
          "description": "The E.164 formatted phone number of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "business_country": {
          "description": "The country of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_name": {
          "description": "The name of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_postal_code": {
          "description": "The postal code of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_state_province_region": {
          "description": "The state/province/region of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_street_address": {
          "description": "The address of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_street_address2": {
          "description": "The address of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "business_website": {
          "description": "The website of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "customer_profile_sid": {
          "description": "Customer's Profile Bundle BundleSid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "edit_allowed": {
          "description": "If a rejected verification is allowed to be edited/resubmitted. Some rejection reasons allow editing and some do not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "edit_expiration": {
          "description": "The date and time when the ability to edit a rejected verification expires.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "error_code": {
          "description": "The error code given when a Tollfree Verification has been rejected.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "external_reference_id": {
          "description": "An optional external reference ID supplied by customer and echoed back on status retrieval.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "message_volume": {
          "description": "Estimate monthly volume of messages from the Tollfree Number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notification_email": {
          "description": "The email address to receive the notification about the verification result. .",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "opt_in_image_urls": {
          "description": "Link to an image that shows the opt-in workflow. Multiple images allowed and must be a publicly hosted URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_in_type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingTollfreeVerificationEnumOptInType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "production_message_sample": {
          "description": "An example of message content, i.e. a sample message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "regulated_item_sid": {
          "description": "The SID of the Regulated Item.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "rejection_reason": {
          "description": "The rejection reason given when a Tollfree Verification has been rejected.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rejection_reasons": {
          "description": "A list of rejection reasons and codes describing why a Tollfree Verification has been rejected.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "resource_links": {
          "description": "The URLs of the documents associated with the Tollfree Verification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "sid": {
          "description": "The unique string to identify Tollfree Verification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^HH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingTollfreeVerificationEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "tollfree_phone_number_sid": {
          "description": "The SID of the Phone Number associated with the Tollfree Verification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "trust_product_sid": {
          "description": "Tollfree TrustProduct Bundle BundleSid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the Tollfree Verification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "use_case_categories": {
          "description": "The category of the use case for the Tollfree Number. List as many are applicable..",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "use_case_summary": {
          "description": "Use this to further explain how messaging is used by the business or organization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MessagingMessagingV1Usecase": {
      "fields": {
        "usecases": {
          "description": "Human readable use case details (usecase, description and purpose) of Messaging Service Use Cases.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        }
      }
    },
    "MessagingUpdateDomainCertV4Body": {
      "fields": {
        "TlsCert": {
          "description": "Contains the full TLS certificate and private for this domain in PEM format: https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail. Twilio uses this information to process HTTPS traffic sent to your domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MessagingUpdateDomainConfigBody": {
      "fields": {
        "CallbackUrl": {
          "description": "URL to receive click events to your webhook whenever the recipients click on the shortened links",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ContinueOnFailure": {
          "description": "Boolean field to set customer delivery preference when there is a failure in linkShortening service",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "DisableHttps": {
          "description": "Customer's choice to send links with/without \"https://\" attached to shortened url. If true, messages will not be sent with https:// at the beginning of the url. If false, messages will be sent with https:// at the beginning of the url. False is the default behavior if it is not specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FallbackUrl": {
          "description": "Any requests we receive to this domain that do not match an existing shortened message will be redirected to the fallback url. These will likely be either expired messages, random misdirected traffic, or intentional scraping.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "MessagingUpdateServiceBody": {
      "fields": {
        "AreaCodeGeomatch": {
          "description": "Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/messaging/services#area-code-geomatch) on the Service Instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FallbackMethod": {
          "description": "The HTTP method we should use to call `fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingV1FallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "FallbackToLongCode": {
          "description": "[OBSOLETE] Former feature used to fallback to long code sender after certain short code message failures.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FallbackUrl": {
          "description": "The URL that we call using `fallback_method` if an error occurs while retrieving or executing the TwiML from the Inbound Request URL. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `fallback_url` defined for the Messaging Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "InboundMethod": {
          "description": "The HTTP method we should use to call `inbound_request_url`. Can be `GET` or `POST` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingV1InboundMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "InboundRequestUrl": {
          "description": "The URL we call using `inbound_method` when a message is received by any phone number or short code in the Service. When this property is `null`, receiving inbound messages is disabled. All messages sent to the Twilio phone number or short code will not be logged and received on the Account. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `inbound_request_url` defined for the Messaging Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "MmsConverter": {
          "description": "Whether to enable the [MMS Converter](https://www.twilio.com/docs/messaging/services#mms-converter) for messages sent through the Service instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "ScanMessageContent": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingServiceEnumScanMessageContent",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SmartEncoding": {
          "description": "Whether to enable [Smart Encoding](https://www.twilio.com/docs/messaging/services#smart-encoding) for messages sent through the Service instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "StatusCallback": {
          "description": "The URL we should call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StickySender": {
          "description": "Whether to enable [Sticky Sender](https://www.twilio.com/docs/messaging/services#sticky-sender) on the Service instance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SynchronousValidation": {
          "description": "Reserved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "UseInboundWebhookOnNumber": {
          "description": "A boolean value that indicates either the webhook url configured on the phone number will be used or `inbound_request_url`/`fallback_url` url will be called when a message is received from the phone number. If this field is enabled then the webhook url defined on the phone number will override the `inbound_request_url`/`fallback_url` defined for the Messaging Service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "Usecase": {
          "description": "A string that describes the scenario in which the Messaging Service will be used. Possible values are `notifications`, `marketing`, `verification`, `discussion`, `poll`, `undeclared`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ValidityPeriod": {
          "description": "How long, in seconds, messages sent from the Service are valid. Can be an integer from `1` to `14,400`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "MessagingUpdateTollfreeVerificationBody": {
      "fields": {
        "AdditionalInformation": {
          "description": "Additional information to be provided for verification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessCity": {
          "description": "The city of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessContactEmail": {
          "description": "The email address of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessContactFirstName": {
          "description": "The first name of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessContactLastName": {
          "description": "The last name of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessContactPhone": {
          "description": "The E.164 formatted phone number of the contact for the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "BusinessCountry": {
          "description": "The country of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessName": {
          "description": "The name of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessPostalCode": {
          "description": "The postal code of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessStateProvinceRegion": {
          "description": "The state/province/region of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessStreetAddress": {
          "description": "The address of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessStreetAddress2": {
          "description": "The address of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BusinessWebsite": {
          "description": "The website of the business or organization using the Tollfree number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "EditReason": {
          "description": "Describe why the verification is being edited. If the verification was rejected because of a technical issue, such as the website being down, and the issue has been resolved this parameter should be set to something similar to 'Website fixed'.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessageVolume": {
          "description": "Estimate monthly volume of messages from the Tollfree Number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "NotificationEmail": {
          "description": "The email address to receive the notification about the verification result. .",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "OptInImageUrls": {
          "description": "Link to an image that shows the opt-in workflow. Multiple images allowed and must be a publicly hosted URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "OptInType": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingTollfreeVerificationEnumOptInType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ProductionMessageSample": {
          "description": "An example of message content, i.e. a sample message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UseCaseCategories": {
          "description": "The category of the use case for the Tollfree Number. List as many are applicable..",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UseCaseSummary": {
          "description": "Use this to further explain how messaging is used by the business or organization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MessagingUpdateUsAppToPersonBody": {
      "fields": {
        "AgeGated": {
          "description": "A boolean that specifies whether campaign requires age gate for federally legal content.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "Description": {
          "description": "A short description of what this SMS campaign does. Min length: 40 characters. Max length: 4096 characters.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DirectLending": {
          "description": "A boolean that specifies whether campaign allows direct lending or not.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "HasEmbeddedLinks": {
          "description": "Indicates that this SMS campaign will send messages that contain links.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "HasEmbeddedPhone": {
          "description": "Indicates that this SMS campaign will send messages that contain phone numbers.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "MessageFlow": {
          "description": "Required for all Campaigns. Details around how a consumer opts-in to their campaign, therefore giving consent to receive their messages. If multiple opt-in methods can be used for the same campaign, they must all be listed. 40 character minimum. 2048 character maximum.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessageSamples": {
          "description": "An array of sample message strings, min two and max five. Min length for each sample: 20 chars. Max length for each sample: 1024 chars.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    }
  },
  "procedures": {
    "messagingCreateAlphaSender": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/AlphaSenders",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ServiceSid}/AlphaSenders",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreateAlphaSenderBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Services/{ServiceSid}/AlphaSenders",
      "result_type": {
        "name": "MessagingMessagingV1ServiceAlphaSender",
        "type": "named"
      }
    },
    "messagingCreateBrandRegistrationOtp": {
      "request": {
        "url": "/v1/a2p/BrandRegistrations/{BrandRegistrationSid}/SmsOtp",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "BrandRegistrationSid": {
          "description": "Brand Registration Sid of Sole Proprietor Brand.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "BrandRegistrationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^BN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "POST /v1/a2p/BrandRegistrations/{BrandRegistrationSid}/SmsOtp",
      "result_type": {
        "name": "MessagingMessagingV1BrandRegistrationsBrandRegistrationOtp",
        "type": "named"
      }
    },
    "messagingCreateBrandRegistrations": {
      "request": {
        "url": "/v1/a2p/BrandRegistrations",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/a2p/BrandRegistrations",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreateBrandRegistrationsBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/a2p/BrandRegistrations",
      "result_type": {
        "name": "MessagingMessagingV1BrandRegistrations",
        "type": "named"
      }
    },
    "messagingCreateBrandVetting": {
      "request": {
        "url": "/v1/a2p/BrandRegistrations/{BrandSid}/Vettings",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "BrandSid": {
          "description": "The SID of the Brand Registration resource of the vettings to create .",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "BrandSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^BN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/a2p/BrandRegistrations/{BrandSid}/Vettings",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreateBrandVettingBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/a2p/BrandRegistrations/{BrandSid}/Vettings",
      "result_type": {
        "name": "MessagingMessagingV1BrandRegistrationsBrandVetting",
        "type": "named"
      }
    },
    "messagingCreateChannelSender": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/ChannelSenders",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{MessagingServiceSid}/ChannelSenders",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreateChannelSenderBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Services/{MessagingServiceSid}/ChannelSenders",
      "result_type": {
        "name": "MessagingMessagingV1ServiceChannelSender",
        "type": "named"
      }
    },
    "messagingCreateExternalCampaign": {
      "request": {
        "url": "/v1/Services/PreregisteredUsa2p",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Services/PreregisteredUsa2p",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreateExternalCampaignBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Services/PreregisteredUsa2p",
      "result_type": {
        "name": "MessagingMessagingV1ExternalCampaign",
        "type": "named"
      }
    },
    "messagingCreateLinkshorteningMessagingService": {
      "request": {
        "url": "/v1/LinkShortening/Domains/{DomainSid}/MessagingServices/{MessagingServiceSid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "DomainSid": {
          "description": "The domain SID to associate with a messaging service. With URL shortening enabled, links in messages sent with the associated messaging service will be shortened to the provided domain",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "MessagingServiceSid": {
          "description": "A messaging service SID to associate with a domain. With URL shortening enabled, links in messages sent with the provided messaging service will be shortened to the associated domain",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "POST /v1/LinkShortening/Domains/{DomainSid}/MessagingServices/{MessagingServiceSid}",
      "result_type": {
        "name": "MessagingMessagingV1LinkshorteningMessagingService",
        "type": "named"
      }
    },
    "messagingCreatePhoneNumber": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/PhoneNumbers",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ServiceSid}/PhoneNumbers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreatePhoneNumberBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Services/{ServiceSid}/PhoneNumbers",
      "result_type": {
        "name": "MessagingMessagingV1ServicePhoneNumber",
        "type": "named"
      }
    },
    "messagingCreateService": {
      "request": {
        "url": "/v1/Services",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Services",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreateServiceBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Services",
      "result_type": {
        "name": "MessagingMessagingV1Service",
        "type": "named"
      }
    },
    "messagingCreateShortCode": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/ShortCodes",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ServiceSid}/ShortCodes",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreateShortCodeBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Services/{ServiceSid}/ShortCodes",
      "result_type": {
        "name": "MessagingMessagingV1ServiceShortCode",
        "type": "named"
      }
    },
    "messagingCreateTollfreeVerification": {
      "request": {
        "url": "/v1/Tollfree/Verifications",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Tollfree/Verifications",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreateTollfreeVerificationBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Tollfree/Verifications",
      "result_type": {
        "name": "MessagingMessagingV1TollfreeVerification",
        "type": "named"
      }
    },
    "messagingCreateUsAppToPerson": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) to create the resources from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{MessagingServiceSid}/Compliance/Usa2p",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingCreateUsAppToPersonBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Services/{MessagingServiceSid}/Compliance/Usa2p",
      "result_type": {
        "name": "MessagingMessagingV1ServiceUsAppToPerson",
        "type": "named"
      }
    },
    "messagingDeleteAlphaSender": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/AlphaSenders/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the AlphaSender resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "DELETE /v1/Services/{ServiceSid}/AlphaSenders/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "messagingDeleteChannelSender": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/ChannelSenders/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Channel Sender resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "DELETE /v1/Services/{MessagingServiceSid}/ChannelSenders/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "messagingDeleteDomainCertV4": {
      "request": {
        "url": "/v1/LinkShortening/Domains/{DomainSid}/Certificate",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "DomainSid": {
          "description": "Unique string used to identify the domain that this certificate should be associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/LinkShortening/Domains/{DomainSid}/Certificate",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "messagingDeleteLinkshorteningMessagingService": {
      "request": {
        "url": "/v1/LinkShortening/Domains/{DomainSid}/MessagingServices/{MessagingServiceSid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "DomainSid": {
          "description": "The domain SID to dissociate from a messaging service. With URL shortening enabled, links in messages sent with the associated messaging service will be shortened to the provided domain",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "MessagingServiceSid": {
          "description": "A messaging service SID to dissociate from a domain. With URL shortening enabled, links in messages sent with the provided messaging service will be shortened to the associated domain",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/LinkShortening/Domains/{DomainSid}/MessagingServices/{MessagingServiceSid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "messagingDeletePhoneNumber": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/PhoneNumbers/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the PhoneNumber resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "DELETE /v1/Services/{ServiceSid}/PhoneNumbers/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "messagingDeleteService": {
      "request": {
        "url": "/v1/Services/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Service resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Services/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "messagingDeleteShortCode": {
      "request": {
        "url": "/v1/Services/{ServiceSid}/ShortCodes/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ServiceSid": {
          "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the ShortCode resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "DELETE /v1/Services/{ServiceSid}/ShortCodes/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "messagingDeleteTollfreeVerification": {
      "request": {
        "url": "/v1/Tollfree/Verifications/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The unique string to identify Tollfree Verification.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^HH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Tollfree/Verifications/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "messagingDeleteUsAppToPerson": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) to delete the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the US A2P Compliance resource to delete `QE2c6890da8086d771620e9b13fadeba0b`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^QE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Services/{MessagingServiceSid}/Compliance/Usa2p/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "messagingUpdateBrandRegistrations": {
      "request": {
        "url": "/v1/a2p/BrandRegistrations/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Brand Registration resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^BN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "POST /v1/a2p/BrandRegistrations/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1BrandRegistrations",
        "type": "named"
      }
    },
    "messagingUpdateDomainCertV4": {
      "request": {
        "url": "/v1/LinkShortening/Domains/{DomainSid}/Certificate",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "DomainSid": {
          "description": "Unique string used to identify the domain that this certificate should be associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/LinkShortening/Domains/{DomainSid}/Certificate",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingUpdateDomainCertV4Body",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/LinkShortening/Domains/{DomainSid}/Certificate",
      "result_type": {
        "name": "MessagingMessagingV1DomainCertV4",
        "type": "named"
      }
    },
    "messagingUpdateDomainConfig": {
      "request": {
        "url": "/v1/LinkShortening/Domains/{DomainSid}/Config",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "DomainSid": {
          "description": "Unique string used to identify the domain that this config should be associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/LinkShortening/Domains/{DomainSid}/Config",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingUpdateDomainConfigBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/LinkShortening/Domains/{DomainSid}/Config",
      "result_type": {
        "name": "MessagingMessagingV1DomainConfig",
        "type": "named"
      }
    },
    "messagingUpdateRequestManagedCert": {
      "request": {
        "url": "/v1/LinkShortening/Domains/{DomainSid}/RequestManagedCert",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "DomainSid": {
          "description": "Unique string used to identify the domain that this certificate should be associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "POST /v1/LinkShortening/Domains/{DomainSid}/RequestManagedCert",
      "result_type": {
        "name": "MessagingMessagingV1RequestManagedCert",
        "type": "named"
      }
    },
    "messagingUpdateService": {
      "request": {
        "url": "/v1/Services/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Service resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingUpdateServiceBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Services/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1Service",
        "type": "named"
      }
    },
    "messagingUpdateTollfreeVerification": {
      "request": {
        "url": "/v1/Tollfree/Verifications/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The unique string to identify Tollfree Verification.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^HH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Tollfree/Verifications/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingUpdateTollfreeVerificationBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Tollfree/Verifications/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1TollfreeVerification",
        "type": "named"
      }
    },
    "messagingUpdateUsAppToPerson": {
      "request": {
        "url": "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "MessagingServiceSid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services/api) to update the resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessagingServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the US A2P Compliance resource to update `QE2c6890da8086d771620e9b13fadeba0b`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^QE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{MessagingServiceSid}/Compliance/Usa2p/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagingUpdateUsAppToPersonBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Services/{MessagingServiceSid}/Compliance/Usa2p/{Sid}",
      "result_type": {
        "name": "MessagingMessagingV1ServiceUsAppToPerson",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "MessagingBrandRegistrationsEnumBrandFeedback": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "TAX_ID",
          "STOCK_SYMBOL",
          "NONPROFIT",
          "GOVERNMENT_ENTITY",
          "OTHERS"
        ],
        "type": "enum"
      }
    },
    "MessagingBrandRegistrationsEnumIdentityStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SELF_DECLARED",
          "UNVERIFIED",
          "VERIFIED",
          "VETTED_VERIFIED"
        ],
        "type": "enum"
      }
    },
    "MessagingBrandRegistrationsEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PENDING",
          "APPROVED",
          "FAILED",
          "IN_REVIEW",
          "DELETED"
        ],
        "type": "enum"
      }
    },
    "MessagingBrandVettingEnumVettingProvider": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "campaign-verify"
        ],
        "type": "enum"
      }
    },
    "MessagingMessagingV1ServiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "MessagingMessagingV1ServiceInboundMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "MessagingServiceEnumScanMessageContent": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inherit",
          "enable",
          "disable"
        ],
        "type": "enum"
      }
    },
    "MessagingTollfreeVerificationEnumOptInType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "VERBAL",
          "WEB_FORM",
          "PAPER_FORM",
          "VIA_TEXT",
          "MOBILE_QR_CODE",
          "IMPORT"
        ],
        "type": "enum"
      }
    },
    "MessagingTollfreeVerificationEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PENDING_REVIEW",
          "IN_REVIEW",
          "TWILIO_APPROVED",
          "TWILIO_REJECTED"
        ],
        "type": "enum"
      }
    },
    "MessagingV1FallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "MessagingV1InboundMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
