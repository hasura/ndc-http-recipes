{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://taskrouter.twilio.com",
          "env": "TWILIO_TASKROUTER_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "basic",
        "header": "",
        "username": {
          "env": "TWILIO_API_KEY"
        },
        "password": {
          "env": "TWILIO_API_SECRET"
        }
      }
    },
    "security": [
      {
        "accountSid_authToken": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "taskrouterFetchActivity": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Activities/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Activity resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Activity resources to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Activities/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceActivity",
        "type": "named"
      }
    },
    "taskrouterFetchEvent": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Events/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Event resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^EV[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Event to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Events/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceEvent",
        "type": "named"
      }
    },
    "taskrouterFetchTask": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Tasks/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Task resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Task to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Tasks/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTask",
        "type": "named"
      }
    },
    "taskrouterFetchTaskChannel": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskChannels/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Task Channel resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Task Channel to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/TaskChannels/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskChannel",
        "type": "named"
      }
    },
    "taskrouterFetchTaskQueue": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the TaskQueue resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskQueue to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/TaskQueues/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskQueue",
        "type": "named"
      }
    },
    "taskrouterFetchTaskQueueCumulativeStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/CumulativeStatistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only calculate statistics from this date and time and earlier, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default is 15 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "SplitByWaitTime": {
          "description": "A comma separated list of values that describes the thresholds, in seconds, to calculate statistics on. For each threshold specified, the number of Tasks canceled and reservations accepted above and below the specified thresholds in seconds are computed. TaskRouter will calculate statistics on up to 10,000 Tasks/Reservations for any given threshold.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "SplitByWaitTime",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate cumulative statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueSid": {
          "description": "The SID of the TaskQueue for which to fetch statistics.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "TaskQueueSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskQueue to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/CumulativeStatistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchTaskQueueRealTimeStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/RealTimeStatistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "TaskChannel": {
          "description": "The TaskChannel for which to fetch statistics. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueSid": {
          "description": "The SID of the TaskQueue for which to fetch statistics.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "TaskQueueSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskQueue to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/RealTimeStatistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchTaskQueueStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/Statistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only calculate statistics from this date and time and earlier, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default is 15 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "SplitByWaitTime": {
          "description": "A comma separated list of values that describes the thresholds, in seconds, to calculate statistics on. For each threshold specified, the number of Tasks canceled and reservations accepted above and below the specified thresholds in seconds are computed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "SplitByWaitTime",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate real-time and cumulative statistics for the specified TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueSid": {
          "description": "The SID of the TaskQueue for which to fetch statistics.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "TaskQueueSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskQueue to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/TaskQueues/{TaskQueueSid}/Statistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueueStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchTaskReservation": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the TaskReservation resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "TaskSid": {
          "description": "The SID of the reserved Task resource with the TaskReservation resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "TaskSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskReservation resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskTaskReservation",
        "type": "named"
      }
    },
    "taskrouterFetchWorker": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Worker resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Worker to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorker",
        "type": "named"
      }
    },
    "taskrouterFetchWorkerChannel": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the WorkerChannel to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the Worker with the WorkerChannel to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkerSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the WorkerChannel to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkerChannel",
        "type": "named"
      }
    },
    "taskrouterFetchWorkerInstanceStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Statistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only include usage that occurred on or before this date, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default 15 minutes. This is helpful for displaying statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the Worker with the WorkerChannel to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkerSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the WorkerChannel to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Statistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkerInstanceStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchWorkerReservation": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the WorkerReservation resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the reserved Worker resource with the WorkerReservation resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkerSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the WorkerReservation resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkerReservation",
        "type": "named"
      }
    },
    "taskrouterFetchWorkerStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/Statistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only calculate statistics from this date and time and earlier, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "FriendlyName": {
          "description": "Only include Workers with `friendly_name` values that match this parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default 15 minutes. This is helpful for displaying statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueName": {
          "description": "The `friendly_name` of the TaskQueue for which to fetch Worker statistics.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskQueueName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueSid": {
          "description": "The SID of the TaskQueue for which to fetch Worker statistics.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskQueueSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Worker to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers/Statistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkerStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchWorkersCumulativeStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/CumulativeStatistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only calculate statistics from this date and time and earlier, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default 15 minutes. This is helpful for displaying statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate cumulative statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers/CumulativeStatistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchWorkersRealTimeStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/RealTimeStatistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "TaskChannel": {
          "description": "Only calculate real-time statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers/RealTimeStatistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchWorkflow": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workflows/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Workflow resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Workflow to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workflows/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkflow",
        "type": "named"
      }
    },
    "taskrouterFetchWorkflowCumulativeStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/CumulativeStatistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only include usage that occurred on or before this date, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default 15 minutes. This is helpful for displaying statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "SplitByWaitTime": {
          "description": "A comma separated list of values that describes the thresholds, in seconds, to calculate statistics on. For each threshold specified, the number of Tasks canceled and reservations accepted above and below the specified thresholds in seconds are computed. For example, `5,30` would show splits of Tasks that were canceled or accepted before and after 5 seconds and before and after 30 seconds. This can be used to show short abandoned Tasks or Tasks that failed to meet an SLA. TaskRouter will calculate statistics on up to 10,000 Tasks for any given threshold.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "SplitByWaitTime",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate cumulative statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkflowSid": {
          "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified Sid value.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkflowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/CumulativeStatistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkflowWorkflowCumulativeStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchWorkflowRealTimeStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/RealTimeStatistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "TaskChannel": {
          "description": "Only calculate real-time statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkflowSid": {
          "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified SID value.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkflowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Workflow to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/RealTimeStatistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchWorkflowStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/Statistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only calculate statistics from this date and time and earlier, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default 15 minutes. This is helpful for displaying statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "SplitByWaitTime": {
          "description": "A comma separated list of values that describes the thresholds, in seconds, to calculate statistics on. For each threshold specified, the number of Tasks canceled and reservations accepted above and below the specified thresholds in seconds are computed. For example, `5,30` would show splits of Tasks that were canceled or accepted before and after 5 seconds and before and after 30 seconds. This can be used to show short abandoned Tasks or Tasks that failed to meet an SLA.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "SplitByWaitTime",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate real-time statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkflowSid": {
          "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified SID value.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkflowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Workflow to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workflows/{WorkflowSid}/Statistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkflowWorkflowStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchWorkspace": {
      "request": {
        "url": "/v1/Workspaces/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Workspace resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1Workspace",
        "type": "named"
      }
    },
    "taskrouterFetchWorkspaceCumulativeStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/CumulativeStatistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only include usage that occurred on or before this date, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default 15 minutes. This is helpful for displaying statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "SplitByWaitTime": {
          "description": "A comma separated list of values that describes the thresholds, in seconds, to calculate statistics on. For each threshold specified, the number of Tasks canceled and reservations accepted above and below the specified thresholds in seconds are computed. For example, `5,30` would show splits of Tasks that were canceled or accepted before and after 5 seconds and before and after 30 seconds. This can be used to show short abandoned Tasks or Tasks that failed to meet an SLA. TaskRouter will calculate statistics on up to 10,000 Tasks for any given threshold.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "SplitByWaitTime",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate cumulative statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/CumulativeStatistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkspaceCumulativeStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchWorkspaceRealTimeStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/RealTimeStatistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "TaskChannel": {
          "description": "Only calculate real-time statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/RealTimeStatistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkspaceRealTimeStatistics",
        "type": "named"
      }
    },
    "taskrouterFetchWorkspaceStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Statistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only calculate statistics from this date and time and earlier, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default 15 minutes. This is helpful for displaying statistics for the last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "SplitByWaitTime": {
          "description": "A comma separated list of values that describes the thresholds, in seconds, to calculate statistics on. For each threshold specified, the number of Tasks canceled and reservations accepted above and below the specified thresholds in seconds are computed. For example, `5,30` would show splits of Tasks that were canceled or accepted before and after 5 seconds and before and after 30 seconds. This can be used to show short abandoned Tasks or Tasks that failed to meet an SLA.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "SplitByWaitTime",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Statistics",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkspaceStatistics",
        "type": "named"
      }
    },
    "taskrouterListActivity": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Activities",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Available": {
          "description": "Whether return only Activity resources that are available or unavailable. A value of `true` returns only available activities. Values of '1' or `yes` also indicate `true`. All other values represent `false` and return activities that are unavailable.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Available",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "FriendlyName": {
          "description": "The `friendly_name` of the Activity resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Activity resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Activities",
      "result_type": {
        "name": "TaskrouterListActivityResult",
        "type": "named"
      }
    },
    "taskrouterListEvent": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Events",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only include Events that occurred on or before this date, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "EventType": {
          "description": "The type of Events to read. Returns only Events of the type specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "EventType",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Minutes": {
          "description": "The period of events to read in minutes. Returns only Events that occurred since this many minutes in the past. The default is `15` minutes. Task Attributes for Events occuring more 43,200 minutes ago will be redacted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ReservationSid": {
          "description": "The SID of the Reservation with the Events to read. Returns only Events that pertain to the specified Reservation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "ReservationSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Event resource to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Sid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^EV[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "StartDate": {
          "description": "Only include Events from on or after this date and time, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Task Attributes for Events older than 30 days will be redacted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "The TaskChannel with the Events to read. Returns only the Events that pertain to the specified TaskChannel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueSid": {
          "description": "The SID of the TaskQueue with the Events to read. Returns only the Events that pertain to the specified TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskQueueSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "TaskSid": {
          "description": "The SID of the Task with the Events to read. Returns only the Events that pertain to the specified Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the Worker with the Events to read. Returns only the Events that pertain to the specified Worker.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "WorkerSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkflowSid": {
          "description": "The SID of the Workflow with the Events to read. Returns only the Events that pertain to the specified Workflow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "WorkflowSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Events to read. Returns only the Events that pertain to the specified Workspace.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Events",
      "result_type": {
        "name": "TaskrouterListEventResult",
        "type": "named"
      }
    },
    "taskrouterListTask": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Tasks",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AssignmentStatus": {
          "description": "The `assignment_status` of the Tasks you want to read. Can be: `pending`, `reserved`, `assigned`, `canceled`, `wrapping`, or `completed`. Returns all Tasks in the Workspace with the specified `assignment_status`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "name": "AssignmentStatus",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "EvaluateTaskAttributes": {
          "description": "The attributes of the Tasks to read. Returns the Tasks that match the attributes specified in this parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "EvaluateTaskAttributes",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "HasAddons": {
          "description": "Whether to read Tasks with Add-ons. If `true`, returns only Tasks with Add-ons. If `false`, returns only Tasks without Add-ons.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "HasAddons",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Ordering": {
          "description": "How to order the returned Task resources. By default, Tasks are sorted by ascending DateCreated. This value is specified as: `Attribute:Order`, where `Attribute` can be either `DateCreated`, `Priority`, or `VirtualStartTime` and `Order` can be either `asc` or `desc`. For example, `Priority:desc` returns Tasks ordered in descending order of their Priority. Pairings of sort orders can be specified in a comma-separated list such as `Priority:desc,DateCreated:asc`, which returns the Tasks in descending Priority order and ascending DateCreated Order. The only ordering pairing not allowed is DateCreated and VirtualStartTime.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Ordering",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Priority": {
          "description": "The priority value of the Tasks to read. Returns the list of all Tasks in the Workspace with the specified priority.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Priority",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "RoutingTarget": {
          "description": "A SID of a Worker, Queue, or Workflow to route a Task to",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "RoutingTarget",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueName": {
          "description": "The `friendly_name` of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this friendly name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskQueueName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueSid": {
          "description": "The SID of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this SID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskQueueSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkflowName": {
          "description": "The friendly name of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this friendly name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "WorkflowName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkflowSid": {
          "description": "The SID of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this SID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "WorkflowSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Tasks to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Tasks",
      "result_type": {
        "name": "TaskrouterListTaskResult",
        "type": "named"
      }
    },
    "taskrouterListTaskChannel": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskChannels",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Task Channel to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/TaskChannels",
      "result_type": {
        "name": "TaskrouterListTaskChannelResult",
        "type": "named"
      }
    },
    "taskrouterListTaskQueue": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EvaluateWorkerAttributes": {
          "description": "The attributes of the Workers to read. Returns the TaskQueues with Workers that match the attributes specified in this parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "EvaluateWorkerAttributes",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "FriendlyName": {
          "description": "The `friendly_name` of the TaskQueue resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Ordering": {
          "description": "Sorting parameter for TaskQueues",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Ordering",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the Worker with the TaskQueue resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "WorkerSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskQueue to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/TaskQueues",
      "result_type": {
        "name": "TaskrouterListTaskQueueResult",
        "type": "named"
      }
    },
    "taskrouterListTaskQueuesStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues/Statistics",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Only calculate statistics from this date and time and earlier, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "FriendlyName": {
          "description": "The `friendly_name` of the TaskQueue statistics to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Minutes": {
          "description": "Only calculate statistics since this many minutes in the past. The default is 15 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SplitByWaitTime": {
          "description": "A comma separated list of values that describes the thresholds, in seconds, to calculate statistics on. For each threshold specified, the number of Tasks canceled and reservations accepted above and below the specified thresholds in seconds are computed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "SplitByWaitTime",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "TaskChannel": {
          "description": "Only calculate statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskChannel",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskQueues to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/TaskQueues/Statistics",
      "result_type": {
        "name": "TaskrouterListTaskQueuesStatisticsResult",
        "type": "named"
      }
    },
    "taskrouterListTaskReservation": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ReservationStatus": {
          "description": "Returns the list of reservations for a task with a specified ReservationStatus.  Can be: `pending`, `accepted`, `rejected`, or `timeout`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterTaskReservationEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "name": "ReservationStatus",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "task_reservation_enum_status"
              }
            }
          }
        },
        "TaskSid": {
          "description": "The SID of the reserved Task resource with the TaskReservation resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "TaskSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the reserved Worker resource to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "WorkerSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskReservation resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations",
      "result_type": {
        "name": "TaskrouterListTaskReservationResult",
        "type": "named"
      }
    },
    "taskrouterListWorker": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ActivityName": {
          "description": "The `activity_name` of the Worker resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "ActivityName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ActivitySid": {
          "description": "The `activity_sid` of the Worker resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "ActivitySid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Available": {
          "description": "Whether to return only Worker resources that are available or unavailable. Can be `true`, `1`, or `yes` to return Worker resources that are available, and `false`, or any value returns the Worker resources that are not available.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Available",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "FriendlyName": {
          "description": "The `friendly_name` of the Worker resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Ordering": {
          "description": "Sorting parameter for Workers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Ordering",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TargetWorkersExpression": {
          "description": "Filter by Workers that would match an expression. In addition to fields in the workers' attributes, the expression can include the following worker fields: `sid`, `friendly_name`, `activity_sid`, or `activity_name`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TargetWorkersExpression",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueName": {
          "description": "The `friendly_name` of the TaskQueue that the Workers to read are eligible for.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskQueueName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TaskQueueSid": {
          "description": "The SID of the TaskQueue that the Workers to read are eligible for.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "TaskQueueSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Workers to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers",
      "result_type": {
        "name": "TaskrouterListWorkerResult",
        "type": "named"
      }
    },
    "taskrouterListWorkerChannel": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the Worker with the WorkerChannels to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkerSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the WorkerChannels to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels",
      "result_type": {
        "name": "TaskrouterListWorkerChannelResult",
        "type": "named"
      }
    },
    "taskrouterListWorkerReservation": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ReservationStatus": {
          "description": "Returns the list of reservations for a worker with a specified ReservationStatus. Can be: `pending`, `accepted`, `rejected`, `timeout`, `canceled`, or `rescinded`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterWorkerReservationEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "name": "ReservationStatus",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "worker_reservation_enum_status"
              }
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the reserved Worker resource with the WorkerReservation resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkerSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the WorkerReservation resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations",
      "result_type": {
        "name": "TaskrouterListWorkerReservationResult",
        "type": "named"
      }
    },
    "taskrouterListWorkflow": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workflows",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "FriendlyName": {
          "description": "The `friendly_name` of the Workflow resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Workflow to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /v1/Workspaces/{WorkspaceSid}/Workflows",
      "result_type": {
        "name": "TaskrouterListWorkflowResult",
        "type": "named"
      }
    },
    "taskrouterListWorkspace": {
      "request": {
        "url": "/v1/Workspaces",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "FriendlyName": {
          "description": "The `friendly_name` of the Workspace resources to read. For example `Customer Support` or `2014 Election Campaign`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/Workspaces",
      "result_type": {
        "name": "TaskrouterListWorkspaceResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "TaskrouterCreateActivityBodyInput": {
      "fields": {
        "Available": {
          "description": "Whether the Worker should be eligible to receive a Task when it occupies the Activity. A value of `true`, `1`, or `yes` specifies the Activity is available. All other values specify that it is not. The value cannot be changed after the Activity is created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Activity resource. It can be up to 64 characters long. These names are used to calculate and expose statistics about Workers, and provide visibility into the state of each Worker. Examples of friendly names include: `on-call`, `break`, and `email`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskrouterCreateTaskBodyInput": {
      "fields": {
        "Attributes": {
          "description": "A URL-encoded JSON string with the attributes of the new task. This value is passed to the Workflow's `assignment_callback_url` when the Task is assigned to a Worker. For example: `{ \"task_type\": \"call\", \"twilio_call_sid\": \"CAxxx\", \"customer_ticket_number\": \"12345\" }`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IgnoreCapacity": {
          "description": "A boolean that indicates if the Task should respect a Worker's capacity and availability during assignment. This field can only be used when the `RoutingTarget` field is set to a Worker SID. By setting `IgnoreCapacity` to a value of `true`, `1`, or `yes`, the Task will be routed to the Worker without respecting their capacity and availability. Any other value will enforce the Worker's capacity and availability. The default value of `IgnoreCapacity` is `true` when the `RoutingTarget` is set to a Worker SID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Priority": {
          "description": "The priority to assign the new task and override the default. When supplied, the new Task will have this priority unless it matches a Workflow Target with a Priority set. When not supplied, the new Task will have the priority of the matching Workflow Target. Value can be 0 to 2^31^ (2,147,483,647).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "RoutingTarget": {
          "description": "A SID of a Worker, Queue, or Workflow to route a Task to",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TaskChannel": {
          "description": "When MultiTasking is enabled, specify the TaskChannel by passing either its `unique_name` or `sid`. Default value is `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TaskQueueSid": {
          "description": "The SID of the TaskQueue in which the Task belongs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WQ[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Timeout": {
          "description": "The amount of time in seconds the new task can live before being assigned. Can be up to a maximum of 2 weeks (1,209,600 seconds). The default value is 24 hours (86,400 seconds). On timeout, the `task.canceled` event will fire with description `Task TTL Exceeded`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "VirtualStartTime": {
          "description": "The virtual start time to assign the new task and override the default. When supplied, the new task will have this virtual start time. When not supplied, the new task will have the virtual start time equal to `date_created`. Value can't be in the future or before the year of 1900.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "WorkflowSid": {
          "description": "The SID of the Workflow that you would like to handle routing for the new Task. If there is only one Workflow defined for the Workspace that you are posting the new task to, this parameter is optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterCreateTaskChannelBodyInput": {
      "fields": {
        "ChannelOptimizedRouting": {
          "description": "Whether the Task Channel should prioritize Workers that have been idle. If `true`, Workers that have been idle the longest are prioritized.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Task Channel. It can be up to 64 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the Task Channel, such as `voice` or `sms`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskrouterCreateTaskQueueBodyInput": {
      "fields": {
        "AssignmentActivitySid": {
          "description": "The SID of the Activity to assign Workers when a task is assigned to them.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the TaskQueue. For example `Support-Tier 1`, `Sales`, or `Escalation`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MaxReservedWorkers": {
          "description": "The maximum number of Workers to reserve for the assignment of a Task in the queue. Can be an integer between 1 and 50, inclusive and defaults to 1.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "ReservationActivitySid": {
          "description": "The SID of the Activity to assign Workers when a task is reserved for them.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "TargetWorkers": {
          "description": "A string that describes the Worker selection criteria for any Tasks that enter the TaskQueue. For example, `'\"language\" == \"spanish\"'`. The default value is `1==1`. If this value is empty, Tasks will wait in the TaskQueue until they are deleted or moved to another TaskQueue. For more information about Worker selection, see [Describing Worker selection criteria](https://www.twilio.com/docs/taskrouter/api/taskqueues#target-workers).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TaskOrder": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterTaskQueueEnumTaskOrder",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "task_queue_enum_task_order"
            }
          }
        }
      }
    },
    "TaskrouterCreateWorkerBodyInput": {
      "fields": {
        "ActivitySid": {
          "description": "The SID of a valid Activity that will describe the new Worker's initial state. See [Activities](https://www.twilio.com/docs/taskrouter/api/activity) for more information. If not provided, the new Worker's initial state is the `default_activity_sid` configured on the Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Attributes": {
          "description": "A valid JSON string that describes the new Worker. For example: `{ \"email\": \"Bob@example.com\", \"phone\": \"+5095551234\" }`. This data is passed to the `assignment_callback_url` when TaskRouter assigns a Task to the Worker. Defaults to {}.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the new Worker. It can be up to 64 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskrouterCreateWorkflowBodyInput": {
      "fields": {
        "AssignmentCallbackUrl": {
          "description": "The URL from your application that will process task assignment events. See [Handling Task Assignment Callback](https://www.twilio.com/docs/taskrouter/handle-assignment-callbacks) for more details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Configuration": {
          "description": "A JSON string that contains the rules to apply to the Workflow. See [Configuring Workflows](https://www.twilio.com/docs/taskrouter/workflow-configuration) for more information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FallbackAssignmentCallbackUrl": {
          "description": "The URL that we should call when a call to the `assignment_callback_url` fails.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Workflow resource. For example, `Inbound Call Workflow` or `2014 Outbound Campaign`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TaskReservationTimeout": {
          "description": "How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker. Can be up to `86,400` (24 hours) and the default is `120`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "TaskrouterCreateWorkspaceBodyInput": {
      "fields": {
        "EventCallbackUrl": {
          "description": "The URL we should call when an event occurs. If provided, the Workspace will publish events to this URL, for example, to collect data for reporting. See [Workspace Events](https://www.twilio.com/docs/taskrouter/api/event) for more information. This parameter supports Twilio's [Webhooks (HTTP callbacks) Connection Overrides](https://www.twilio.com/docs/usage/webhooks/webhooks-connection-overrides).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "EventsFilter": {
          "description": "The list of Workspace events for which to call event_callback_url. For example, if `EventsFilter=task.created, task.canceled, worker.activity.update`, then TaskRouter will call event_callback_url only when a task is created, canceled, or a Worker activity is updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Workspace resource. It can be up to 64 characters long. For example: `Customer Support` or `2014 Election Campaign`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MultiTaskEnabled": {
          "description": "Whether to enable multi-tasking. Can be: `true` to enable multi-tasking, or `false` to disable it. However, all workspaces should be created as multi-tasking. The default is `true`. Multi-tasking allows Workers to handle multiple Tasks simultaneously. When enabled (`true`), each Worker can receive parallel reservations up to the per-channel maximums defined in the Workers section. In single-tasking mode (legacy mode), each Worker will only receive a new reservation when the previous task is completed. Learn more at [Multitasking](https://www.twilio.com/docs/taskrouter/multitasking).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "PrioritizeQueueOrder": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterWorkspaceEnumQueueOrder",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "workspace_enum_queue_order"
            }
          }
        },
        "Template": {
          "description": "An available template name. Can be: `NONE` or `FIFO` and the default is `NONE`. Pre-configures the Workspace with the Workflow and Activities specified in the template. `NONE` will create a Workspace with only a set of default activities. `FIFO` will configure TaskRouter with a set of default activities and a single TaskQueue for first-in, first-out distribution, which can be useful when you are getting started with TaskRouter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskrouterListActivityResult": {
      "fields": {
        "activities": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceActivity",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.activity"
              }
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListActivityResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TaskrouterListActivityResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListEventResult": {
      "fields": {
        "events": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceEvent",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.event"
              }
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListEventResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TaskrouterListEventResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListTaskChannelResult": {
      "fields": {
        "channels": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceTaskChannel",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.task_channel"
              }
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListTaskChannelResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TaskrouterListTaskChannelResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListTaskQueueResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListTaskQueueResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "task_queues": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceTaskQueue",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.task_queue"
              }
            }
          }
        }
      }
    },
    "TaskrouterListTaskQueueResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListTaskQueuesStatisticsResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListTaskQueuesStatisticsResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "task_queues_statistics": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueuesStatistics",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.task_queue.task_queues_statistics"
              }
            }
          }
        }
      }
    },
    "TaskrouterListTaskQueuesStatisticsResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListTaskReservationResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListTaskReservationResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "reservations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceTaskTaskReservation",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.task.task_reservation"
              }
            }
          }
        }
      }
    },
    "TaskrouterListTaskReservationResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListTaskResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListTaskResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "tasks": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceTask",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.task"
              }
            }
          }
        }
      }
    },
    "TaskrouterListTaskResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListWorkerChannelResult": {
      "fields": {
        "channels": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkerChannel",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.worker.worker_channel"
              }
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListWorkerChannelResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TaskrouterListWorkerChannelResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListWorkerReservationResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListWorkerReservationResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "reservations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkerReservation",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.worker.worker_reservation"
              }
            }
          }
        }
      }
    },
    "TaskrouterListWorkerReservationResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListWorkerResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListWorkerResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "workers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceWorker",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.worker"
              }
            }
          }
        }
      }
    },
    "TaskrouterListWorkerResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListWorkflowResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListWorkflowResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "workflows": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1WorkspaceWorkflow",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace.workflow"
              }
            }
          }
        }
      }
    },
    "TaskrouterListWorkflowResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterListWorkspaceResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterListWorkspaceResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "workspaces": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskrouterV1Workspace",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "taskrouter.v1.workspace"
              }
            }
          }
        }
      }
    },
    "TaskrouterListWorkspaceResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterTaskrouterV1Workspace": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workspace resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "default_activity_name": {
          "description": "The name of the default activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "default_activity_sid": {
          "description": "The SID of the Activity that will be used when new Workers are created in the Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "event_callback_url": {
          "description": "The URL we call when an event occurs. If provided, the Workspace will publish events to this URL, for example, to collect data for reporting. See [Workspace Events](https://www.twilio.com/docs/taskrouter/api/event) for more information. This parameter supports Twilio's [Webhooks (HTTP callbacks) Connection Overrides](https://www.twilio.com/docs/usage/webhooks/webhooks-connection-overrides).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "events_filter": {
          "description": "The list of Workspace events for which to call `event_callback_url`. For example, if `EventsFilter=task.created, task.canceled, worker.activity.update`, then TaskRouter will call event_callback_url only when a task is created, canceled, or a Worker activity is updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the Workspace resource. For example `Customer Support` or `2014 Election Campaign`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "The URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "multi_task_enabled": {
          "description": "Whether multi-tasking is enabled. The default is `true`, which enables multi-tasking. Multi-tasking allows Workers to handle multiple Tasks simultaneously. When enabled (`true`), each Worker can receive parallel reservations up to the per-channel maximums defined in the Workers section. In single-tasking each Worker would only receive a new reservation when the previous task is completed. Learn more at [Multitasking](https://www.twilio.com/docs/taskrouter/multitasking).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "prioritize_queue_order": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterWorkspaceEnumQueueOrder",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Workspace resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "timeout_activity_name": {
          "description": "The name of the timeout activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "timeout_activity_sid": {
          "description": "The SID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the Workspace resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceActivity": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Activity resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "available": {
          "description": "Whether the Worker is eligible to receive a Task when it occupies the Activity. A value of `true`, `1`, or `yes` indicates the Activity is available. All other values indicate that it is not. The value cannot be changed after the Activity is created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the Activity resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Activity resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the Activity resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceEvent": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Event resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "actor_sid": {
          "description": "The SID of the resource that triggered the event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "actor_type": {
          "description": "The type of resource that triggered the event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "actor_url": {
          "description": "The absolute URL of the resource that triggered the event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "description": {
          "description": "A description of the event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "event_data": {
          "description": "Data about the event. For more information, see [Event types](https://www.twilio.com/docs/taskrouter/api/event#event-types).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "event_date": {
          "description": "The time the event was sent, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "event_date_ms": {
          "description": "The time the event was sent in milliseconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ],
            "format": "int64"
          }
        },
        "event_type": {
          "description": "The identifier for the event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_sid": {
          "description": "The SID of the object the event is most relevant to, such as a TaskSid, ReservationSid, or a  WorkerSid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "resource_type": {
          "description": "The type of object the event is most relevant to, such as a Task, Reservation, or a Worker).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_url": {
          "description": "The URL of the resource the event is most relevant to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Event resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^EV[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "source": {
          "description": "Where the Event originated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "source_ip_address": {
          "description": "The IP from which the Event originated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Event resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceTask": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Task resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "addons": {
          "description": "An object that contains the [Add-on](https://www.twilio.com/docs/add-ons) data for all installed Add-ons.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "age": {
          "description": "The number of seconds since the Task was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "assignment_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterTaskEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "attributes": {
          "description": "The JSON string with custom attributes of the work. **Note** If this property has been assigned a value, it will only be displayed in FETCH action that returns a single resource. Otherwise, it will be null.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "ignore_capacity": {
          "description": "A boolean that indicates if the Task should respect a Worker's capacity and availability during assignment. This field can only be used when the `RoutingTarget` field is set to a Worker SID. By setting `IgnoreCapacity` to a value of `true`, `1`, or `yes`, the Task will be routed to the Worker without respecting their capacity and availability. Any other value will enforce the Worker's capacity and availability. The default value of `IgnoreCapacity` is `true` when the `RoutingTarget` is set to a Worker SID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "links": {
          "description": "The URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "priority": {
          "description": "The current priority score of the Task as assigned to a Worker by the workflow. Tasks with higher priority values will be assigned before Tasks with lower values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reason": {
          "description": "The reason the Task was canceled or completed, if applicable.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "routing_target": {
          "description": "A SID of a Worker, Queue, or Workflow to route a Task to",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Task resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "task_channel_sid": {
          "description": "The SID of the TaskChannel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "task_channel_unique_name": {
          "description": "The unique name of the TaskChannel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "task_queue_entered_date": {
          "description": "The date and time in GMT when the Task entered the TaskQueue, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "task_queue_friendly_name": {
          "description": "The friendly name of the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "task_queue_sid": {
          "description": "The SID of the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WQ[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "timeout": {
          "description": "The amount of time in seconds that the Task can live before being assigned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Task resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "virtual_start_time": {
          "description": "The date and time in GMT indicating the ordering for routing of the Task specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "workflow_friendly_name": {
          "description": "The friendly name of the Workflow that is controlling the Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workflow_sid": {
          "description": "The SID of the Workflow that is controlling the Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceTaskChannel": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Task Channel resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "channel_optimized_routing": {
          "description": "Whether the Task Channel will prioritize Workers that have been idle. When `true`, Workers that have been idle the longest are prioritized.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "The URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Task Channel resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the Task Channel, such as `voice` or `sms`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Task Channel resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Task Channel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceTaskQueue": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "assignment_activity_name": {
          "description": "The name of the Activity to assign Workers when a task is assigned for them.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "assignment_activity_sid": {
          "description": "The SID of the Activity to assign Workers when a task is assigned for them.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "The URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "max_reserved_workers": {
          "description": "The maximum number of Workers to reserve for the assignment of a task in the queue. Can be an integer between 1 and 50, inclusive and defaults to 1.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservation_activity_name": {
          "description": "The name of the Activity to assign Workers once a task is reserved for them.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reservation_activity_sid": {
          "description": "The SID of the Activity to assign Workers once a task is reserved for them.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the TaskQueue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WQ[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "target_workers": {
          "description": "A string describing the Worker selection criteria for any Tasks that enter the TaskQueue. For example `'\"language\" == \"spanish\"'` If no TargetWorkers parameter is provided, Tasks will wait in the TaskQueue until they are either deleted or moved to another TaskQueue. Additional examples on how to describing Worker selection criteria below. Defaults to 1==1.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "task_order": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterTaskQueueEnumTaskOrder",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the TaskQueue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "task_queue_data": {
          "description": "The real-time statistics for each requested TaskQueue SID. `task_queue_data` returns the following attributes:  `task_queue_sid`: The SID of the TaskQueue from which these statistics were calculated.  `total_available_workers`: The total number of Workers available for Tasks in the TaskQueue.  `total_eligible_workers`: The total number of Workers eligible for Tasks in the TaskQueue, regardless of their Activity state.  `total_tasks`: The total number of Tasks.  `longest_task_waiting_age`: The age of the longest waiting Task.  `longest_task_waiting_sid`: The SID of the longest waiting Task.  `tasks_by_status`: The number of Tasks grouped by their current status.  `tasks_by_priority`: The number of Tasks grouped by priority.  `activity_statistics`: The number of current Workers grouped by Activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "task_queue_response_count": {
          "description": "The number of TaskQueue statistics received in task_queue_data.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the TaskQueue statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueueCumulativeStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "avg_task_acceptance_time": {
          "description": "The average time in seconds between Task creation and acceptance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "end_time": {
          "description": "The end of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "reservations_accepted": {
          "description": "The total number of Reservations accepted for Tasks in the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_canceled": {
          "description": "The total number of Reservations canceled for Tasks in the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_created": {
          "description": "The total number of Reservations created for Tasks in the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_rejected": {
          "description": "The total number of Reservations rejected for Tasks in the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_rescinded": {
          "description": "The total number of Reservations rescinded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_timed_out": {
          "description": "The total number of Reservations that timed out for Tasks in the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "split_by_wait_time": {
          "description": "A list of objects that describe the number of Tasks canceled and reservations accepted above and below the thresholds specified in seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "start_time": {
          "description": "The beginning of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "task_queue_sid": {
          "description": "The SID of the TaskQueue from which these statistics were calculated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WQ[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "tasks_canceled": {
          "description": "The total number of Tasks canceled in the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_completed": {
          "description": "The total number of Tasks completed in the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_deleted": {
          "description": "The total number of Tasks deleted in the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_entered": {
          "description": "The total number of Tasks entered into the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_moved": {
          "description": "The total number of Tasks that were moved from one queue to another.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the TaskQueue statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "wait_duration_in_queue_until_accepted": {
          "description": "The relative wait duration statistics (`avg`, `min`, `max`, `total`) for Tasks accepted while in the TaskQueue. Calculation is based on the time when the Tasks entered the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "wait_duration_until_accepted": {
          "description": "The wait duration statistics (`avg`, `min`, `max`, `total`) for Tasks accepted while in the TaskQueue. Calculation is based on the time when the Tasks were created. For transfers, the wait duration is counted from the moment ***the Task was created***, and not from when the transfer was initiated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "wait_duration_until_canceled": {
          "description": "The wait duration statistics (`avg`, `min`, `max`, `total`) for Tasks canceled while in the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "activity_statistics": {
          "description": "The number of current Workers by Activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "longest_relative_task_age_in_queue": {
          "description": "The relative age in the TaskQueue for the longest waiting Task. Calculation is based on the time when the Task entered the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "longest_relative_task_sid_in_queue": {
          "description": "The Task SID of the Task waiting in the TaskQueue the longest. Calculation is based on the time when the Task entered the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "longest_task_waiting_age": {
          "description": "The age of the longest waiting Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "longest_task_waiting_sid": {
          "description": "The SID of the longest waiting Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "task_queue_sid": {
          "description": "The SID of the TaskQueue from which these statistics were calculated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WQ[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "tasks_by_priority": {
          "description": "The number of Tasks by priority. For example: `{\"0\": \"10\", \"99\": \"5\"}` shows 10 Tasks at priority 0 and 5 at priority 99.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "tasks_by_status": {
          "description": "The number of Tasks by their current status. For example: `{\"pending\": \"1\", \"reserved\": \"3\", \"assigned\": \"2\", \"completed\": \"5\"}`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "total_available_workers": {
          "description": "The total number of Workers in the TaskQueue with an `available` status. Workers with an `available` status may already have active interactions or may have none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "total_eligible_workers": {
          "description": "The total number of Workers eligible for Tasks in the TaskQueue, independent of their Activity state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "total_tasks": {
          "description": "The total number of Tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the TaskQueue statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueueStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "cumulative": {
          "description": "An object that contains the cumulative statistics for the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "realtime": {
          "description": "An object that contains the real-time statistics for the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "task_queue_sid": {
          "description": "The SID of the TaskQueue from which these statistics were calculated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WQ[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the TaskQueue statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the TaskQueue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueuesStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "cumulative": {
          "description": "An object that contains the cumulative statistics for the TaskQueues.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "realtime": {
          "description": "An object that contains the real-time statistics for the TaskQueues.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "task_queue_sid": {
          "description": "The SID of the TaskQueue from which these statistics were calculated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WQ[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the TaskQueues.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceTaskTaskReservation": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskReservation resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "links": {
          "description": "The URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "reservation_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterTaskReservationEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the TaskReservation resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "task_sid": {
          "description": "The SID of the reserved Task resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the TaskReservation reservation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "worker_name": {
          "description": "The `friendly_name` of the Worker that is reserved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "worker_sid": {
          "description": "The SID of the reserved Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that this task is contained within.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorker": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "activity_name": {
          "description": "The `friendly_name` of the Worker's current Activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "activity_sid": {
          "description": "The SID of the Worker's current Activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "The JSON string that describes the Worker. For example: `{ \"email\": \"Bob@example.com\", \"phone\": \"+5095551234\" }`. **Note** If this property has been assigned a value, it will only be displayed in FETCH actions that return a single resource. Otherwise, this property will be null, even if it has a value. This data is passed to the `assignment_callback_url` when TaskRouter assigns a Task to the Worker.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "available": {
          "description": "Whether the Worker is available to perform tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_status_changed": {
          "description": "The date and time in GMT of the last change to the Worker's activity specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Used to calculate Workflow statistics.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource. Friendly names are case insensitive, and unique within the TaskRouter Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "The URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Worker.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkerWorkerChannel": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "assigned_tasks": {
          "description": "The total number of Tasks assigned to Worker for the TaskChannel type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "available": {
          "description": "Whether the Worker should receive Tasks of the TaskChannel type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "available_capacity_percentage": {
          "description": "The current percentage of capacity the TaskChannel has available. Can be a number between `0` and `100`. A value of `0` indicates that TaskChannel has no capacity available and a value of `100` means the  Worker is available to receive any Tasks of this TaskChannel type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "configured_capacity": {
          "description": "The current configured capacity for the WorkerChannel. TaskRouter will not create any reservations after the assigned Tasks for the Worker reaches the value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the WorkerChannel resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "task_channel_sid": {
          "description": "The SID of the TaskChannel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "task_channel_unique_name": {
          "description": "The unique name of the TaskChannel, such as `voice` or `sms`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the WorkerChannel resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "worker_sid": {
          "description": "The SID of the Worker that contains the WorkerChannel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the WorkerChannel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkerWorkerInstanceStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "cumulative": {
          "description": "An object that contains the cumulative statistics for the Worker.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "url": {
          "description": "The absolute URL of the WorkerChannel statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "worker_sid": {
          "description": "The SID of the Worker that contains the WorkerChannel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the WorkerChannel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkerWorkerReservation": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the WorkerReservation resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "links": {
          "description": "The URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "reservation_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterWorkerReservationEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the WorkerReservation resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "task_sid": {
          "description": "The SID of the reserved Task resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the WorkerReservation resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "worker_name": {
          "description": "The `friendly_name` of the Worker that is reserved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "worker_sid": {
          "description": "The SID of the reserved Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that this worker is contained within.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkerWorkerStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "cumulative": {
          "description": "An object that contains the cumulative statistics for the Worker.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "realtime": {
          "description": "An object that contains the real-time statistics for the Worker.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "url": {
          "description": "The absolute URL of the Worker statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Worker.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "activity_durations": {
          "description": "The minimum, average, maximum, and total time (in seconds) that Workers spent in each Activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "end_time": {
          "description": "The end of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "reservations_accepted": {
          "description": "The total number of Reservations that were accepted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_canceled": {
          "description": "The total number of Reservations that were canceled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_created": {
          "description": "The total number of Reservations that were created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_rejected": {
          "description": "The total number of Reservations that were rejected.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_rescinded": {
          "description": "The total number of Reservations that were rescinded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_timed_out": {
          "description": "The total number of Reservations that were timed out.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "start_time": {
          "description": "The beginning of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "url": {
          "description": "The absolute URL of the Workers statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Workers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkerWorkersRealTimeStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "activity_statistics": {
          "description": "The number of current Workers by Activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "total_workers": {
          "description": "The total number of Workers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Workers statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Workers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkflow": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "assignment_callback_url": {
          "description": "The URL that we call when a task managed by the Workflow is assigned to a Worker. See Assignment Callback URL for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "configuration": {
          "description": "A JSON string that contains the Workflow's configuration. See [Configuring Workflows](https://www.twilio.com/docs/taskrouter/workflow-configuration) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "document_content_type": {
          "description": "The MIME type of the document.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "fallback_assignment_callback_url": {
          "description": "The URL that we call when a call to the `assignment_callback_url` fails.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the Workflow resource. For example, `Customer Support` or `2014 Election Campaign`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "The URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Workflow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "task_reservation_timeout": {
          "description": "How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker. Can be up to `86,400` (24 hours) and the default is `120`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Workflow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Workflow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkflowWorkflowCumulativeStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "avg_task_acceptance_time": {
          "description": "The average time in seconds between Task creation and acceptance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "end_time": {
          "description": "The end of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "reservations_accepted": {
          "description": "The total number of Reservations accepted by Workers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_canceled": {
          "description": "The total number of Reservations that were canceled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_created": {
          "description": "The total number of Reservations that were created for Workers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_rejected": {
          "description": "The total number of Reservations that were rejected.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_rescinded": {
          "description": "The total number of Reservations that were rescinded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_timed_out": {
          "description": "The total number of Reservations that were timed out.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "split_by_wait_time": {
          "description": "A list of objects that describe the number of Tasks canceled and reservations accepted above and below the thresholds specified in seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "start_time": {
          "description": "The beginning of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "tasks_canceled": {
          "description": "The total number of Tasks that were canceled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_completed": {
          "description": "The total number of Tasks that were completed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_deleted": {
          "description": "The total number of Tasks that were deleted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_entered": {
          "description": "The total number of Tasks that entered the Workflow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_moved": {
          "description": "The total number of Tasks that were moved from one queue to another.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_timed_out_in_workflow": {
          "description": "The total number of Tasks that were timed out of their Workflows (and deleted).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Workflow statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "wait_duration_until_accepted": {
          "description": "The wait duration statistics (`avg`, `min`, `max`, `total`) for Tasks that were accepted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "wait_duration_until_canceled": {
          "description": "The wait duration statistics (`avg`, `min`, `max`, `total`) for Tasks that were canceled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "workflow_sid": {
          "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified Sid value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Workflow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "longest_task_waiting_age": {
          "description": "The age of the longest waiting Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "longest_task_waiting_sid": {
          "description": "The SID of the longest waiting Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "tasks_by_priority": {
          "description": "The number of Tasks by priority. For example: `{\"0\": \"10\", \"99\": \"5\"}` shows 10 Tasks at priority 0 and 5 at priority 99.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "tasks_by_status": {
          "description": "The number of Tasks by their current status. For example: `{\"pending\": \"1\", \"reserved\": \"3\", \"assigned\": \"2\", \"completed\": \"5\"}`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "total_tasks": {
          "description": "The total number of Tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Workflow statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workflow_sid": {
          "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified SID value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Workflow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkflowWorkflowStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "cumulative": {
          "description": "An object that contains the cumulative statistics for the Workflow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "realtime": {
          "description": "An object that contains the real-time statistics for the Workflow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "url": {
          "description": "The absolute URL of the Workflow statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workflow_sid": {
          "description": "Returns the list of Tasks that are being controlled by the Workflow with the specified SID value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace that contains the Workflow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkspaceCumulativeStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workspace resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "avg_task_acceptance_time": {
          "description": "The average time in seconds between Task creation and acceptance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "end_time": {
          "description": "The end of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "reservations_accepted": {
          "description": "The total number of Reservations accepted by Workers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_canceled": {
          "description": "The total number of Reservations that were canceled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_created": {
          "description": "The total number of Reservations that were created for Workers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_rejected": {
          "description": "The total number of Reservations that were rejected.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_rescinded": {
          "description": "The total number of Reservations that were rescinded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "reservations_timed_out": {
          "description": "The total number of Reservations that were timed out.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "split_by_wait_time": {
          "description": "A list of objects that describe the number of Tasks canceled and reservations accepted above and below the thresholds specified in seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "start_time": {
          "description": "The beginning of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "tasks_canceled": {
          "description": "The total number of Tasks that were canceled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_completed": {
          "description": "The total number of Tasks that were completed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_created": {
          "description": "The total number of Tasks created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_deleted": {
          "description": "The total number of Tasks that were deleted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_moved": {
          "description": "The total number of Tasks that were moved from one queue to another.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "tasks_timed_out_in_workflow": {
          "description": "The total number of Tasks that were timed out of their Workflows (and deleted).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Workspace statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "wait_duration_until_accepted": {
          "description": "The wait duration statistics (`avg`, `min`, `max`, `total`) for Tasks that were accepted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "wait_duration_until_canceled": {
          "description": "The wait duration statistics (`avg`, `min`, `max`, `total`) for Tasks that were canceled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkspaceRealTimeStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workspace resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "activity_statistics": {
          "description": "The number of current Workers by Activity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "longest_task_waiting_age": {
          "description": "The age of the longest waiting Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "longest_task_waiting_sid": {
          "description": "The SID of the longest waiting Task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "tasks_by_priority": {
          "description": "The number of Tasks by priority. For example: `{\"0\": \"10\", \"99\": \"5\"}` shows 10 Tasks at priority 0 and 5 at priority 99.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "tasks_by_status": {
          "description": "The number of Tasks by their current status. For example: `{\"pending\": \"1\", \"reserved\": \"3\", \"assigned\": \"2\", \"completed\": \"5\"}`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "total_tasks": {
          "description": "The total number of Tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "total_workers": {
          "description": "The total number of Workers in the Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the Workspace statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterTaskrouterV1WorkspaceWorkspaceStatistics": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workspace resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "cumulative": {
          "description": "An object that contains the cumulative statistics for the Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "realtime": {
          "description": "An object that contains the real-time statistics for the Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "url": {
          "description": "The absolute URL of the Workspace statistics resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "workspace_sid": {
          "description": "The SID of the Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterUpdateActivityBodyInput": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Activity resource. It can be up to 64 characters long. These names are used to calculate and expose statistics about Workers, and provide visibility into the state of each Worker. Examples of friendly names include: `on-call`, `break`, and `email`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskrouterUpdateTaskBodyInput": {
      "fields": {
        "AssignmentStatus": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterTaskEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "task_enum_status"
            }
          }
        },
        "Attributes": {
          "description": "The JSON string that describes the custom attributes of the task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Priority": {
          "description": "The Task's new priority value. When supplied, the Task takes on the specified priority unless it matches a Workflow Target with a Priority set. Value can be 0 to 2^31^ (2,147,483,647).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Reason": {
          "description": "The reason that the Task was canceled or completed. This parameter is required only if the Task is canceled or completed. Setting this value queues the task for deletion and logs the reason.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TaskChannel": {
          "description": "When MultiTasking is enabled, specify the TaskChannel with the task to update. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "VirtualStartTime": {
          "description": "The task's new virtual start time value. When supplied, the Task takes on the specified virtual start time. Value can't be in the future or before the year of 1900.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      }
    },
    "TaskrouterUpdateTaskChannelBodyInput": {
      "fields": {
        "ChannelOptimizedRouting": {
          "description": "Whether the TaskChannel should prioritize Workers that have been idle. If `true`, Workers that have been idle the longest are prioritized.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Task Channel. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskrouterUpdateTaskQueueBodyInput": {
      "fields": {
        "AssignmentActivitySid": {
          "description": "The SID of the Activity to assign Workers when a task is assigned for them.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the TaskQueue. For example `Support-Tier 1`, `Sales`, or `Escalation`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MaxReservedWorkers": {
          "description": "The maximum number of Workers to create reservations for the assignment of a task while in the queue. Maximum of 50.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "ReservationActivitySid": {
          "description": "The SID of the Activity to assign Workers when a task is reserved for them.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "TargetWorkers": {
          "description": "A string describing the Worker selection criteria for any Tasks that enter the TaskQueue. For example '\"language\" == \"spanish\"' If no TargetWorkers parameter is provided, Tasks will wait in the queue until they are either deleted or moved to another queue. Additional examples on how to describing Worker selection criteria below.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TaskOrder": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterTaskQueueEnumTaskOrder",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "task_queue_enum_task_order"
            }
          }
        }
      }
    },
    "TaskrouterUpdateTaskReservationBodyInput": {
      "fields": {
        "Beep": {
          "description": "Whether to play a notification beep when the participant joins or when to play a beep. Can be: `true`, `false`, `onEnter`, or `onExit`. The default value is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BeepOnCustomerEntrance": {
          "description": "Whether to play a notification beep when the customer joins.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "CallAccept": {
          "description": "Whether to accept a reservation when executing a Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "CallFrom": {
          "description": "The Caller ID of the outbound call when executing a Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallRecord": {
          "description": "Whether to record both legs of a call when executing a Call instruction or which leg to record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallStatusCallbackUrl": {
          "description": "The URL to call  for the completed call event when executing a Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "CallTimeout": {
          "description": "Timeout for call when executing a Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "CallTo": {
          "description": "The Contact URI of the worker when executing a Call instruction.  Can be the URI of the Twilio Client, the SIP URI for Programmable SIP, or the [E.164](https://www.twilio.com/docs/glossary/what-e164) formatted phone number, depending on the destination.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallUrl": {
          "description": "TwiML URI executed on answering the worker's leg as a result of the Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ConferenceRecord": {
          "description": "Whether to record the conference the participant is joining or when to record the conference. Can be: `true`, `false`, `record-from-start`, and `do-not-record`. The default value is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ConferenceRecordingStatusCallback": {
          "description": "The URL we should call using the `conference_recording_status_callback_method` when the conference recording is available.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ConferenceRecordingStatusCallbackMethod": {
          "description": "The HTTP method we should use to call `conference_recording_status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1ConferenceRecordingStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "ConferenceStatusCallback": {
          "description": "The URL we should call using the `conference_status_callback_method` when the conference events in `conference_status_callback_event` occur. Only the value set by the first participant to join the conference is used. Subsequent `conference_status_callback` values are ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ConferenceStatusCallbackEvent": {
          "description": "The conference status events that we will send to `conference_status_callback`. Can be: `start`, `end`, `join`, `leave`, `mute`, `hold`, `speaker`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskReservationEnumConferenceEvent",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "task_reservation_enum_conference_event"
              }
            }
          }
        },
        "ConferenceStatusCallbackMethod": {
          "description": "The HTTP method we should use to call `conference_status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1ConferenceStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "ConferenceTrim": {
          "description": "How to trim the leading and trailing silence from your recorded conference audio files. Can be: `trim-silence` or `do-not-trim` and defaults to `trim-silence`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DequeueFrom": {
          "description": "The Caller ID of the call to the worker when executing a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DequeuePostWorkActivitySid": {
          "description": "The SID of the Activity resource to start after executing a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "DequeueRecord": {
          "description": "Whether to record both legs of a call when executing a Dequeue instruction or which leg to record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DequeueStatusCallbackEvent": {
          "description": "The Call progress events sent via webhooks as a result of a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "DequeueStatusCallbackUrl": {
          "description": "The Callback URL for completed call event when executing a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "DequeueTimeout": {
          "description": "Timeout for call when executing a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "DequeueTo": {
          "description": "The Contact URI of the worker when executing a Dequeue instruction. Can be the URI of the Twilio Client, the SIP URI for Programmable SIP, or the [E.164](https://www.twilio.com/docs/glossary/what-e164) formatted phone number, depending on the destination.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "EarlyMedia": {
          "description": "Whether to allow an agent to hear the state of the outbound call, including ringing or disconnect messages. The default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "EndConferenceOnCustomerExit": {
          "description": "Whether to end the conference when the customer leaves.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "EndConferenceOnExit": {
          "description": "Whether to end the conference when the agent leaves.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "From": {
          "description": "The Caller ID of the call to the worker when executing a Conference instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Instruction": {
          "description": "The assignment instruction for reservation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "JitterBufferSize": {
          "description": "The jitter buffer size for conference. Can be: `small`, `medium`, `large`, `off`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MaxParticipants": {
          "description": "The maximum number of participants in the conference. Can be a positive integer from `2` to `250`. The default value is `250`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Muted": {
          "description": "Whether the agent is muted in the conference. The default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "PostWorkActivitySid": {
          "description": "The new worker activity SID after executing a Conference instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Record": {
          "description": "Whether to record the participant and their conferences, including the time between conferences. The default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "RecordingChannels": {
          "description": "The recording channels for the final recording. Can be: `mono` or `dual` and the default is `mono`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RecordingStatusCallback": {
          "description": "The URL that we should call using the `recording_status_callback_method` when the recording status changes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "RecordingStatusCallbackMethod": {
          "description": "The HTTP method we should use when we call `recording_status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1RecordingStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "RedirectAccept": {
          "description": "Whether the reservation should be accepted when executing a Redirect instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "RedirectCallSid": {
          "description": "The Call SID of the call parked in the queue when executing a Redirect instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "RedirectUrl": {
          "description": "TwiML URI to redirect the call to when executing the Redirect instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Region": {
          "description": "The [region](https://support.twilio.com/hc/en-us/articles/223132167-How-global-low-latency-routing-and-region-selection-work-for-conferences-and-Client-calls) where we should mix the recorded audio. Can be:`us1`, `ie1`, `de1`, `sg1`, `br1`, `au1`, or `jp1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ReservationStatus": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterTaskReservationEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "task_reservation_enum_status"
            }
          }
        },
        "SipAuthPassword": {
          "description": "The SIP password for authentication.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SipAuthUsername": {
          "description": "The SIP username used for authentication.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StartConferenceOnEnter": {
          "description": "Whether to start the conference when the participant joins, if it has not already started. The default is `true`. If `false` and the conference has not started, the participant is muted and hears background music until another participant starts the conference.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackEvent": {
          "description": "The call progress events that we will send to `status_callback`. Can be: `initiated`, `ringing`, `answered`, or `completed`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterTaskReservationEnumCallStatus",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "task_reservation_enum_call_status"
              }
            }
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `POST` or `GET` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "Supervisor": {
          "description": "The Supervisor SID/URI when executing the Supervise instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SupervisorMode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterTaskReservationEnumSupervisorMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "task_reservation_enum_supervisor_mode"
            }
          }
        },
        "Timeout": {
          "description": "Timeout for call when executing a Conference instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "To": {
          "description": "The Contact URI of the worker when executing a Conference instruction. Can be the URI of the Twilio Client, the SIP URI for Programmable SIP, or the [E.164](https://www.twilio.com/docs/glossary/what-e164) formatted phone number, depending on the destination.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "WaitMethod": {
          "description": "The HTTP method we should use to call `wait_url`. Can be `GET` or `POST` and the default is `POST`. When using a static audio file, this should be `GET` so that we can cache the file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1WaitMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "WaitUrl": {
          "description": "The URL we should call using the `wait_method` for the music to play while participants are waiting for the conference to start. The default value is the URL of our standard hold music. [Learn more about hold music](https://www.twilio.com/labs/twimlets/holdmusic).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "WorkerActivitySid": {
          "description": "The new worker activity SID if rejecting a reservation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterUpdateWorkerBodyInput": {
      "fields": {
        "ActivitySid": {
          "description": "The SID of a valid Activity that will describe the Worker's initial state. See [Activities](https://www.twilio.com/docs/taskrouter/api/activity) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Attributes": {
          "description": "The JSON string that describes the Worker. For example: `{ \"email\": \"Bob@example.com\", \"phone\": \"+5095551234\" }`. This data is passed to the `assignment_callback_url` when TaskRouter assigns a Task to the Worker. Defaults to {}.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Worker. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RejectPendingReservations": {
          "description": "Whether to reject the Worker's pending reservations. This option is only valid if the Worker's new [Activity](https://www.twilio.com/docs/taskrouter/api/activity) resource has its `availability` property set to `False`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "TaskrouterUpdateWorkerChannelBodyInput": {
      "fields": {
        "Available": {
          "description": "Whether the WorkerChannel is available. Set to `false` to prevent the Worker from receiving any new Tasks of this TaskChannel type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "Capacity": {
          "description": "The total number of Tasks that the Worker should handle for the TaskChannel type. TaskRouter creates reservations for Tasks of this TaskChannel type up to the specified capacity. If the capacity is 0, no new reservations will be created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "TaskrouterUpdateWorkerReservationBodyInput": {
      "fields": {
        "Beep": {
          "description": "Whether to play a notification beep when the participant joins or when to play a beep. Can be: `true`, `false`, `onEnter`, or `onExit`. The default value is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BeepOnCustomerEntrance": {
          "description": "Whether to play a notification beep when the customer joins.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "CallAccept": {
          "description": "Whether to accept a reservation when executing a Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "CallFrom": {
          "description": "The Caller ID of the outbound call when executing a Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallRecord": {
          "description": "Whether to record both legs of a call when executing a Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallStatusCallbackUrl": {
          "description": "The URL to call for the completed call event when executing a Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "CallTimeout": {
          "description": "The timeout for a call when executing a Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "CallTo": {
          "description": "The contact URI of the worker when executing a Call instruction. Can be the URI of the Twilio Client, the SIP URI for Programmable SIP, or the [E.164](https://www.twilio.com/docs/glossary/what-e164) formatted phone number, depending on the destination.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallUrl": {
          "description": "TwiML URI executed on answering the worker's leg as a result of the Call instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ConferenceRecord": {
          "description": "Whether to record the conference the participant is joining or when to record the conference. Can be: `true`, `false`, `record-from-start`, and `do-not-record`. The default value is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ConferenceRecordingStatusCallback": {
          "description": "The URL we should call using the `conference_recording_status_callback_method` when the conference recording is available.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ConferenceRecordingStatusCallbackMethod": {
          "description": "The HTTP method we should use to call `conference_recording_status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1ConferenceRecordingStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "ConferenceStatusCallback": {
          "description": "The URL we should call using the `conference_status_callback_method` when the conference events in `conference_status_callback_event` occur. Only the value set by the first participant to join the conference is used. Subsequent `conference_status_callback` values are ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ConferenceStatusCallbackEvent": {
          "description": "The conference status events that we will send to `conference_status_callback`. Can be: `start`, `end`, `join`, `leave`, `mute`, `hold`, `speaker`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterWorkerReservationEnumConferenceEvent",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "worker_reservation_enum_conference_event"
              }
            }
          }
        },
        "ConferenceStatusCallbackMethod": {
          "description": "The HTTP method we should use to call `conference_status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1ConferenceStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "ConferenceTrim": {
          "description": "Whether to trim leading and trailing silence from your recorded conference audio files. Can be: `trim-silence` or `do-not-trim` and defaults to `trim-silence`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DequeueFrom": {
          "description": "The caller ID of the call to the worker when executing a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DequeuePostWorkActivitySid": {
          "description": "The SID of the Activity resource to start after executing a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "DequeueRecord": {
          "description": "Whether to record both legs of a call when executing a Dequeue instruction or which leg to record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DequeueStatusCallbackEvent": {
          "description": "The call progress events sent via webhooks as a result of a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "DequeueStatusCallbackUrl": {
          "description": "The callback URL for completed call event when executing a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "DequeueTimeout": {
          "description": "The timeout for call when executing a Dequeue instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "DequeueTo": {
          "description": "The contact URI of the worker when executing a Dequeue instruction. Can be the URI of the Twilio Client, the SIP URI for Programmable SIP, or the [E.164](https://www.twilio.com/docs/glossary/what-e164) formatted phone number, depending on the destination.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "EarlyMedia": {
          "description": "Whether to allow an agent to hear the state of the outbound call, including ringing or disconnect messages. The default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "EndConferenceOnCustomerExit": {
          "description": "Whether to end the conference when the customer leaves.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "EndConferenceOnExit": {
          "description": "Whether to end the conference when the agent leaves.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "From": {
          "description": "The caller ID of the call to the worker when executing a Conference instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Instruction": {
          "description": "The assignment instruction for the reservation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "JitterBufferSize": {
          "description": "The jitter buffer size for conference. Can be: `small`, `medium`, `large`, `off`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MaxParticipants": {
          "description": "The maximum number of participants allowed in the conference. Can be a positive integer from `2` to `250`. The default value is `250`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Muted": {
          "description": "Whether the agent is muted in the conference. Defaults to `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "PostWorkActivitySid": {
          "description": "The new worker activity SID after executing a Conference instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Record": {
          "description": "Whether to record the participant and their conferences, including the time between conferences. Can be `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "RecordingChannels": {
          "description": "The recording channels for the final recording. Can be: `mono` or `dual` and the default is `mono`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RecordingStatusCallback": {
          "description": "The URL that we should call using the `recording_status_callback_method` when the recording status changes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "RecordingStatusCallbackMethod": {
          "description": "The HTTP method we should use when we call `recording_status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1RecordingStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "RedirectAccept": {
          "description": "Whether the reservation should be accepted when executing a Redirect instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "RedirectCallSid": {
          "description": "The Call SID of the call parked in the queue when executing a Redirect instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "RedirectUrl": {
          "description": "TwiML URI to redirect the call to when executing the Redirect instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Region": {
          "description": "The [region](https://support.twilio.com/hc/en-us/articles/223132167-How-global-low-latency-routing-and-region-selection-work-for-conferences-and-Client-calls) where we should mix the recorded audio. Can be:`us1`, `ie1`, `de1`, `sg1`, `br1`, `au1`, or `jp1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ReservationStatus": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterWorkerReservationEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "worker_reservation_enum_status"
            }
          }
        },
        "SipAuthPassword": {
          "description": "The SIP password for authentication.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SipAuthUsername": {
          "description": "The SIP username used for authentication.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StartConferenceOnEnter": {
          "description": "Whether to start the conference when the participant joins, if it has not already started. Can be: `true` or `false` and the default is `true`. If `false` and the conference has not started, the participant is muted and hears background music until another participant starts the conference.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackEvent": {
          "description": "The call progress events that we will send to `status_callback`. Can be: `initiated`, `ringing`, `answered`, or `completed`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskrouterWorkerReservationEnumCallStatus",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "worker_reservation_enum_call_status"
              }
            }
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `POST` or `GET` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "Timeout": {
          "description": "The timeout for a call when executing a Conference instruction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "To": {
          "description": "The Contact URI of the worker when executing a Conference instruction. Can be the URI of the Twilio Client, the SIP URI for Programmable SIP, or the [E.164](https://www.twilio.com/docs/glossary/what-e164) formatted phone number, depending on the destination.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "WaitMethod": {
          "description": "The HTTP method we should use to call `wait_url`. Can be `GET` or `POST` and the default is `POST`. When using a static audio file, this should be `GET` so that we can cache the file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterV1WaitMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "WaitUrl": {
          "description": "The URL we should call using the `wait_method` for the music to play while participants are waiting for the conference to start. The default value is the URL of our standard hold music. [Learn more about hold music](https://www.twilio.com/labs/twimlets/holdmusic).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "WorkerActivitySid": {
          "description": "The new worker activity SID if rejecting a reservation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "TaskrouterUpdateWorkflowBodyInput": {
      "fields": {
        "AssignmentCallbackUrl": {
          "description": "The URL from your application that will process task assignment events. See [Handling Task Assignment Callback](https://www.twilio.com/docs/taskrouter/handle-assignment-callbacks) for more details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Configuration": {
          "description": "A JSON string that contains the rules to apply to the Workflow. See [Configuring Workflows](https://www.twilio.com/docs/taskrouter/workflow-configuration) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FallbackAssignmentCallbackUrl": {
          "description": "The URL that we should call when a call to the `assignment_callback_url` fails.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Workflow resource. For example, `Inbound Call Workflow` or `2014 Outbound Campaign`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ReEvaluateTasks": {
          "description": "Whether or not to re-evaluate Tasks. The default is `false`, which means Tasks in the Workflow will not be processed through the assignment loop again.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TaskReservationTimeout": {
          "description": "How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker. Can be up to `86,400` (24 hours) and the default is `120`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "TaskrouterUpdateWorkspaceBodyInput": {
      "fields": {
        "DefaultActivitySid": {
          "description": "The SID of the Activity that will be used when new Workers are created in the Workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EventCallbackUrl": {
          "description": "The URL we should call when an event occurs. See [Workspace Events](https://www.twilio.com/docs/taskrouter/api/event) for more information. This parameter supports Twilio's [Webhooks (HTTP callbacks) Connection Overrides](https://www.twilio.com/docs/usage/webhooks/webhooks-connection-overrides).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "EventsFilter": {
          "description": "The list of Workspace events for which to call event_callback_url. For example if `EventsFilter=task.created,task.canceled,worker.activity.update`, then TaskRouter will call event_callback_url only when a task is created, canceled, or a Worker activity is updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Workspace resource. For example: `Sales Call Center` or `Customer Support Team`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MultiTaskEnabled": {
          "description": "Whether to enable multi-tasking. Can be: `true` to enable multi-tasking, or `false` to disable it. However, all workspaces should be maintained as multi-tasking. There is no default when omitting this parameter. A multi-tasking Workspace can't be updated to single-tasking unless it is not a Flex Project and another (legacy) single-tasking Workspace exists. Multi-tasking allows Workers to handle multiple Tasks simultaneously. In multi-tasking mode, each Worker can receive parallel reservations up to the per-channel maximums defined in the Workers section. In single-tasking mode (legacy mode), each Worker will only receive a new reservation when the previous task is completed. Learn more at [Multitasking](https://www.twilio.com/docs/taskrouter/multitasking).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "PrioritizeQueueOrder": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterWorkspaceEnumQueueOrder",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "workspace_enum_queue_order"
            }
          }
        },
        "TimeoutActivitySid": {
          "description": "The SID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    }
  },
  "procedures": {
    "taskrouterCreateActivity": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Activities",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "WorkspaceSid": {
          "description": "The SID of the Workspace that the new Activity belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Activities",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterCreateActivityBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Activities",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceActivity",
        "type": "named"
      }
    },
    "taskrouterCreateTask": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Tasks",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "WorkspaceSid": {
          "description": "The SID of the Workspace that the new Task belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Tasks",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterCreateTaskBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Tasks",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTask",
        "type": "named"
      }
    },
    "taskrouterCreateTaskChannel": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskChannels",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "WorkspaceSid": {
          "description": "The SID of the Workspace that the new Task Channel belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/TaskChannels",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterCreateTaskChannelBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/TaskChannels",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskChannel",
        "type": "named"
      }
    },
    "taskrouterCreateTaskQueue": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "WorkspaceSid": {
          "description": "The SID of the Workspace that the new TaskQueue belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/TaskQueues",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterCreateTaskQueueBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/TaskQueues",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskQueue",
        "type": "named"
      }
    },
    "taskrouterCreateTaskQueueBulkRealTimeStatistics": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues/RealTimeStatistics",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "WorkspaceSid": {
          "description": "The unique SID identifier of the Workspace.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/TaskQueues/RealTimeStatistics",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Fetch a Task Queue Real Time Statistics in bulk for the array of TaskQueue SIDs, support upto 50 in a request.",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskQueueTaskQueueBulkRealTimeStatistics",
        "type": "named"
      }
    },
    "taskrouterCreateWorker": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "WorkspaceSid": {
          "description": "The SID of the Workspace that the new Worker belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Workers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterCreateWorkerBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Workers",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorker",
        "type": "named"
      }
    },
    "taskrouterCreateWorkflow": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workflows",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "WorkspaceSid": {
          "description": "The SID of the Workspace that the new Workflow to create belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Workflows",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterCreateWorkflowBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Workflows",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkflow",
        "type": "named"
      }
    },
    "taskrouterCreateWorkspace": {
      "request": {
        "url": "/v1/Workspaces",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Workspaces",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterCreateWorkspaceBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces",
      "result_type": {
        "name": "TaskrouterTaskrouterV1Workspace",
        "type": "named"
      }
    },
    "taskrouterDeleteActivity": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Activities/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Activity resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Activity resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Workspaces/{WorkspaceSid}/Activities/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "taskrouterDeleteTask": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Tasks/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "If-Match": {
          "description": "If provided, deletes this Task if (and only if) the [ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag) header of the Task matches the provided value. This matches the semantics of (and is implemented with) the HTTP [If-Match header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "If-Match",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "The SID of the Task resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Task to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Workspaces/{WorkspaceSid}/Tasks/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "taskrouterDeleteTaskChannel": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskChannels/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Task Channel resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Task Channel to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Workspaces/{WorkspaceSid}/TaskChannels/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "taskrouterDeleteTaskQueue": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the TaskQueue resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskQueue to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Workspaces/{WorkspaceSid}/TaskQueues/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "taskrouterDeleteWorker": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "If-Match": {
          "description": "The If-Match HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "If-Match",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "The SID of the Worker resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Worker to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Workspaces/{WorkspaceSid}/Workers/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "taskrouterDeleteWorkflow": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workflows/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Workflow resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Workflow to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Workspaces/{WorkspaceSid}/Workflows/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "taskrouterDeleteWorkspace": {
      "request": {
        "url": "/v1/Workspaces/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Workspace resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /v1/Workspaces/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "taskrouterUpdateActivity": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Activities/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Activity resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Activity resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Activities/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateActivityBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Activities/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceActivity",
        "type": "named"
      }
    },
    "taskrouterUpdateTask": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Tasks/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "If-Match": {
          "description": "If provided, applies this mutation if (and only if) the [ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag) header of the Task matches the provided value. This matches the semantics of (and is implemented with) the HTTP [If-Match header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "If-Match",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "The SID of the Task resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Task to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Tasks/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateTaskBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Tasks/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTask",
        "type": "named"
      }
    },
    "taskrouterUpdateTaskChannel": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskChannels/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Task Channel resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Task Channel to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/TaskChannels/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateTaskChannelBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/TaskChannels/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskChannel",
        "type": "named"
      }
    },
    "taskrouterUpdateTaskQueue": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/TaskQueues/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the TaskQueue resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskQueue to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/TaskQueues/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateTaskQueueBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/TaskQueues/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskQueue",
        "type": "named"
      }
    },
    "taskrouterUpdateTaskReservation": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "If-Match": {
          "description": "The If-Match HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "If-Match",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "The SID of the TaskReservation resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "TaskSid": {
          "description": "The SID of the reserved Task resource with the TaskReservation resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "TaskSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the TaskReservation resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateTaskReservationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Tasks/{TaskSid}/Reservations/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceTaskTaskReservation",
        "type": "named"
      }
    },
    "taskrouterUpdateWorker": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "If-Match": {
          "description": "The If-Match HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "If-Match",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "The SID of the Worker resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Worker to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Workers/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateWorkerBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Workers/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorker",
        "type": "named"
      }
    },
    "taskrouterUpdateWorkerChannel": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the WorkerChannel to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the Worker with the WorkerChannel to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkerSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the WorkerChannel to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateWorkerChannelBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Channels/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkerChannel",
        "type": "named"
      }
    },
    "taskrouterUpdateWorkerReservation": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "If-Match": {
          "description": "The If-Match HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "If-Match",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "The SID of the WorkerReservation resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkerSid": {
          "description": "The SID of the reserved Worker resource with the WorkerReservation resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkerSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the WorkerReservation resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateWorkerReservationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Workers/{WorkerSid}/Reservations/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkerWorkerReservation",
        "type": "named"
      }
    },
    "taskrouterUpdateWorkflow": {
      "request": {
        "url": "/v1/Workspaces/{WorkspaceSid}/Workflows/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Workflow resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "WorkspaceSid": {
          "description": "The SID of the Workspace with the Workflow to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "WorkspaceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{WorkspaceSid}/Workflows/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateWorkflowBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{WorkspaceSid}/Workflows/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1WorkspaceWorkflow",
        "type": "named"
      }
    },
    "taskrouterUpdateWorkspace": {
      "request": {
        "url": "/v1/Workspaces/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Workspace resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Workspaces/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskrouterUpdateWorkspaceBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /v1/Workspaces/{Sid}",
      "result_type": {
        "name": "TaskrouterTaskrouterV1Workspace",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "Int64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int64"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TaskrouterTaskEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "pending",
          "reserved",
          "assigned",
          "canceled",
          "completed",
          "wrapping"
        ],
        "type": "enum"
      }
    },
    "TaskrouterTaskQueueEnumTaskOrder": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "FIFO",
          "LIFO"
        ],
        "type": "enum"
      }
    },
    "TaskrouterTaskReservationEnumCallStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "initiated",
          "ringing",
          "answered",
          "completed"
        ],
        "type": "enum"
      }
    },
    "TaskrouterTaskReservationEnumConferenceEvent": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "start",
          "end",
          "join",
          "leave",
          "mute",
          "hold",
          "speaker"
        ],
        "type": "enum"
      }
    },
    "TaskrouterTaskReservationEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "pending",
          "accepted",
          "rejected",
          "timeout",
          "canceled",
          "rescinded",
          "wrapping",
          "completed"
        ],
        "type": "enum"
      }
    },
    "TaskrouterTaskReservationEnumSupervisorMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "monitor",
          "whisper",
          "barge"
        ],
        "type": "enum"
      }
    },
    "TaskrouterV1ConferenceRecordingStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "TaskrouterV1ConferenceStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "TaskrouterV1RecordingStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "TaskrouterV1StatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "TaskrouterV1WaitMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "TaskrouterWorkerReservationEnumCallStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "initiated",
          "ringing",
          "answered",
          "completed"
        ],
        "type": "enum"
      }
    },
    "TaskrouterWorkerReservationEnumConferenceEvent": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "start",
          "end",
          "join",
          "leave",
          "mute",
          "hold",
          "speaker"
        ],
        "type": "enum"
      }
    },
    "TaskrouterWorkerReservationEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "pending",
          "accepted",
          "rejected",
          "timeout",
          "canceled",
          "rescinded",
          "wrapping",
          "completed"
        ],
        "type": "enum"
      }
    },
    "TaskrouterWorkspaceEnumQueueOrder": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "FIFO",
          "LIFO"
        ],
        "type": "enum"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
