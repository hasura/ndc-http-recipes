{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://studio.twilio.com",
          "env": "TWILIO_STUDIO_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "basic",
        "header": "",
        "username": {
          "env": "TWILIO_ACCOUNT_SID"
        },
        "password": {
          "env": "TWILIO_AUTH_TOKEN"
        }
      }
    },
    "security": [
      {
        "accountSid_authToken": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "studioFetchExecution": {
      "request": {
        "url": "/v2/Flows/{FlowSid}/Executions/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "FlowSid": {
          "description": "The SID of the Flow with the Execution resource to fetch",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "FlowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Execution resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve an Execution",
      "result_type": {
        "name": "StudioStudioV2FlowExecution",
        "type": "named"
      }
    },
    "studioFetchExecutionContext": {
      "request": {
        "url": "/v2/Flows/{FlowSid}/Executions/{ExecutionSid}/Context",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ExecutionSid": {
          "description": "The SID of the Execution context to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ExecutionSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "FlowSid": {
          "description": "The SID of the Flow with the Execution context to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "FlowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve the most recent context for an Execution.",
      "result_type": {
        "name": "StudioStudioV2FlowExecutionExecutionContext",
        "type": "named"
      }
    },
    "studioFetchExecutionStep": {
      "request": {
        "url": "/v2/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ExecutionSid": {
          "description": "The SID of the Execution resource with the Step to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ExecutionSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "FlowSid": {
          "description": "The SID of the Flow with the Step to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "FlowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the ExecutionStep resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve a Step.",
      "result_type": {
        "name": "StudioStudioV2FlowExecutionExecutionStep",
        "type": "named"
      }
    },
    "studioFetchExecutionStepContext": {
      "request": {
        "url": "/v2/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps/{StepSid}/Context",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ExecutionSid": {
          "description": "The SID of the Execution resource with the Step to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ExecutionSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "FlowSid": {
          "description": "The SID of the Flow with the Step to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "FlowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "StepSid": {
          "description": "The SID of the Step to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "StepSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve the context for an Execution Step.",
      "result_type": {
        "name": "StudioStudioV2FlowExecutionExecutionStepExecutionStepContext",
        "type": "named"
      }
    },
    "studioFetchFlow": {
      "request": {
        "url": "/v2/Flows/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Flow resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve a specific Flow.",
      "result_type": {
        "name": "StudioStudioV2Flow",
        "type": "named"
      }
    },
    "studioFetchFlowRevision": {
      "request": {
        "url": "/v2/Flows/{Sid}/Revisions/{Revision}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Revision": {
          "description": "Specific Revision number or can be `LatestPublished` and `LatestRevision`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Revision",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "The SID of the Flow resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve a specific Flow revision.",
      "result_type": {
        "name": "StudioStudioV2FlowFlowRevision",
        "type": "named"
      }
    },
    "studioFetchTestUser": {
      "request": {
        "url": "/v2/Flows/{Sid}/TestUsers",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "Unique identifier of the flow.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch flow test users",
      "result_type": {
        "name": "StudioStudioV2FlowTestUser",
        "type": "named"
      }
    },
    "studioListExecution": {
      "request": {
        "url": "/v2/Flows/{FlowSid}/Executions",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "DateCreatedFrom": {
          "description": "Only show Execution resources starting on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreatedFrom",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "DateCreatedTo": {
          "description": "Only show Execution resources starting before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreatedTo",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "FlowSid": {
          "description": "The SID of the Flow with the Execution resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "FlowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all Executions for the Flow.",
      "result_type": {
        "name": "StudioListExecutionResult",
        "type": "named"
      }
    },
    "studioListExecutionStep": {
      "request": {
        "url": "/v2/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ExecutionSid": {
          "description": "The SID of the Execution with the Steps to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ExecutionSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "FlowSid": {
          "description": "The SID of the Flow with the Steps to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "FlowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all Steps for an Execution.",
      "result_type": {
        "name": "StudioListExecutionStepResult",
        "type": "named"
      }
    },
    "studioListFlow": {
      "request": {
        "url": "/v2/Flows",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all Flows.",
      "result_type": {
        "name": "StudioListFlowResult",
        "type": "named"
      }
    },
    "studioListFlowRevision": {
      "request": {
        "url": "/v2/Flows/{Sid}/Revisions",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "The SID of the Flow resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve a list of all Flows revisions.",
      "result_type": {
        "name": "StudioListFlowRevisionResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "StudioCreateExecutionBody": {
      "fields": {
        "From": {
          "description": "The Twilio phone number to send messages or initiate calls from during the Flow's Execution. Available as variable `{{flow.channel.address}}`. For SMS, this can also be a Messaging Service SID.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "Parameters": {
          "description": "JSON data that will be added to the Flow's context and that can be accessed as variables inside your Flow. For example, if you pass in `Parameters={\"name\":\"Zeke\"}`, a widget in your Flow can reference the variable `{{flow.data.name}}`, which returns \"Zeke\". Note: the JSON value must explicitly be passed as a string, not as a hash object. Depending on your particular HTTP library, you may need to add quotes or URL encode the JSON string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "To": {
          "description": "The Contact phone number to start a Studio Flow Execution, available as variable `{{contact.channel.address}}`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        }
      }
    },
    "StudioCreateFlowBody": {
      "fields": {
        "CommitMessage": {
          "description": "Description of change made in the revision.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Definition": {
          "description": "JSON representation of flow definition.",
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": null
          }
        },
        "FriendlyName": {
          "description": "The string that you assigned to describe the Flow.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Status": {
          "type": {
            "name": "StudioFlowEnumStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StudioListExecutionResult": {
      "fields": {
        "executions": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "StudioStudioV2FlowExecution",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioListExecutionResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "StudioListExecutionResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioListExecutionStepResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioListExecutionStepResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "steps": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "StudioStudioV2FlowExecutionExecutionStep",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "StudioListExecutionStepResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioListFlowResult": {
      "fields": {
        "flows": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "StudioStudioV2Flow",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioListFlowResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "StudioListFlowResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioListFlowRevisionResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioListFlowRevisionResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "revisions": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "StudioStudioV2FlowFlowRevision",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "StudioListFlowRevisionResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioStudioV2Flow": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "commit_message": {
          "description": "Description of change made in the revision.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "definition": {
          "description": "JSON representation of flow definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "errors": {
          "description": "List of error in the flow definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the Flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "The URLs of the Flow's nested resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "revision": {
          "description": "The latest revision number of the Flow's definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Flow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioFlowEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "valid": {
          "description": "Boolean if the flow definition is valid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "warnings": {
          "description": "List of warnings in the flow definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "webhook_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioStudioV2FlowExecution": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "contact_channel_address": {
          "description": "The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "context": {
          "description": "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "flow_sid": {
          "description": "The SID of the Flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "links": {
          "description": "The URLs of nested resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Execution resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioExecutionEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioStudioV2FlowExecutionExecutionContext": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionContext resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "context": {
          "description": "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "execution_sid": {
          "description": "The SID of the context's Execution resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "flow_sid": {
          "description": "The SID of the Flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioStudioV2FlowExecutionExecutionStep": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStep resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "context": {
          "description": "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "execution_sid": {
          "description": "The SID of the Step's Execution resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "flow_sid": {
          "description": "The SID of the Flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "links": {
          "description": "The URLs of related resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "name": {
          "description": "The event that caused the Flow to transition to the Step.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the ExecutionStep resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "transitioned_from": {
          "description": "The Widget that preceded the Widget for the Step.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "transitioned_to": {
          "description": "The Widget that will follow the Widget for the Step.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioStudioV2FlowExecutionExecutionStepExecutionStepContext": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStepContext resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "context": {
          "description": "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "execution_sid": {
          "description": "The SID of the context's Execution resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "flow_sid": {
          "description": "The SID of the Flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "step_sid": {
          "description": "The SID of the Step that the context is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "The absolute URL of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioStudioV2FlowFlowRevision": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "commit_message": {
          "description": "Description of change made in the revision.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "definition": {
          "description": "JSON representation of flow definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "errors": {
          "description": "List of error in the flow definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": null
            }
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the Flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "revision": {
          "description": "The latest revision number of the Flow's definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Flow resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioFlowRevisionEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "valid": {
          "description": "Boolean if the flow definition is valid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "StudioStudioV2FlowTestUser": {
      "fields": {
        "sid": {
          "description": "Unique identifier of the flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "test_users": {
          "description": "List of test user identities that can test draft versions of the flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "url": {
          "description": "The URL of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "StudioStudioV2FlowValidate": {
      "fields": {
        "valid": {
          "description": "Boolean if the flow definition is valid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "StudioUpdateExecutionBody": {
      "fields": {
        "Status": {
          "type": {
            "name": "StudioExecutionEnumStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StudioUpdateFlowBody": {
      "fields": {
        "CommitMessage": {
          "description": "Description of change made in the revision.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Definition": {
          "description": "JSON representation of flow definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "FriendlyName": {
          "description": "The string that you assigned to describe the Flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Status": {
          "type": {
            "name": "StudioFlowEnumStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StudioUpdateFlowValidateBody": {
      "fields": {
        "CommitMessage": {
          "description": "Description of change made in the revision.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Definition": {
          "description": "JSON representation of flow definition.",
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": null
          }
        },
        "FriendlyName": {
          "description": "The string that you assigned to describe the Flow.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Status": {
          "type": {
            "name": "StudioFlowValidateEnumStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StudioUpdateTestUserBody": {
      "fields": {
        "TestUsers": {
          "description": "List of test user identities that can test draft versions of the flow.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    }
  },
  "procedures": {
    "studioCreateExecution": {
      "request": {
        "url": "/v2/Flows/{FlowSid}/Executions",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "FlowSid": {
          "description": "The SID of the Excecution's Flow.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "FlowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v2/Flows/{FlowSid}/Executions",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioCreateExecutionBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Triggers a new Execution for the Flow",
      "result_type": {
        "name": "StudioStudioV2FlowExecution",
        "type": "named"
      }
    },
    "studioCreateFlow": {
      "request": {
        "url": "/v2/Flows",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v2/Flows",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioCreateFlowBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a Flow.",
      "result_type": {
        "name": "StudioStudioV2Flow",
        "type": "named"
      }
    },
    "studioDeleteExecution": {
      "request": {
        "url": "/v2/Flows/{FlowSid}/Executions/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "FlowSid": {
          "description": "The SID of the Flow with the Execution resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "FlowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Execution resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete the Execution and all Steps relating to it.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "studioDeleteFlow": {
      "request": {
        "url": "/v2/Flows/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Flow resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a specific Flow.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "studioUpdateExecution": {
      "request": {
        "url": "/v2/Flows/{FlowSid}/Executions/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "FlowSid": {
          "description": "The SID of the Flow with the Execution resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "FlowSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Execution resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v2/Flows/{FlowSid}/Executions/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioUpdateExecutionBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update the status of an Execution to `ended`.",
      "result_type": {
        "name": "StudioStudioV2FlowExecution",
        "type": "named"
      }
    },
    "studioUpdateFlow": {
      "request": {
        "url": "/v2/Flows/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Flow resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v2/Flows/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioUpdateFlowBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update a Flow.",
      "result_type": {
        "name": "StudioStudioV2Flow",
        "type": "named"
      }
    },
    "studioUpdateFlowValidate": {
      "request": {
        "url": "/v2/Flows/Validate",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v2/Flows/Validate",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioUpdateFlowValidateBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Validate flow JSON definition",
      "result_type": {
        "name": "StudioStudioV2FlowValidate",
        "type": "named"
      }
    },
    "studioUpdateTestUser": {
      "request": {
        "url": "/v2/Flows/{Sid}/TestUsers",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "Unique identifier of the flow.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v2/Flows/{Sid}/TestUsers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StudioUpdateTestUserBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update flow test users",
      "result_type": {
        "name": "StudioStudioV2FlowTestUser",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "StudioExecutionEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "active",
          "ended"
        ],
        "type": "enum"
      }
    },
    "StudioFlowEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "draft",
          "published"
        ],
        "type": "enum"
      }
    },
    "StudioFlowRevisionEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "draft",
          "published"
        ],
        "type": "enum"
      }
    },
    "StudioFlowValidateEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "draft",
          "published"
        ],
        "type": "enum"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
