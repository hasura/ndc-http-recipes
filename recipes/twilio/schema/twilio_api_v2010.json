{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api.twilio.com",
          "env": "TWILIO_SERVER_URL"
        }
      }
    ],
    "argumentPresets": [
      {
        "path": "AccountSid",
        "value": {
          "type": "env",
          "name": "TWILIO_ACCOUNT_SID"
        },
        "targets": null
      },
      {
        "path": "body.AccountSid",
        "value": {
          "type": "env",
          "name": "TWILIO_ACCOUNT_SID"
        },
        "targets": null
      }
    ],
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "basic",
        "header": "",
        "username": {
          "env": "TWILIO_API_KEY"
        },
        "password": {
          "env": "TWILIO_API_SECRET"
        }
      }
    },
    "security": [
      {
        "accountSid_authToken": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "FetchAccount": {
      "request": {
        "url": "/2010-04-01/Accounts/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The Account Sid that uniquely identifies the account to fetch",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch the account specified by the provided Account Sid",
      "result_type": {
        "name": "ApiV2010Account",
        "type": "named"
      }
    },
    "FetchAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Address resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json",
      "result_type": {
        "name": "ApiV2010AccountAddress",
        "type": "named"
      }
    },
    "FetchApplication": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Application resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch the application specified by the provided sid",
      "result_type": {
        "name": "ApiV2010AccountApplication",
        "type": "named"
      }
    },
    "FetchAuthorizedConnectApp": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConnectAppSid": {
          "description": "The SID of the Connect App to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConnectAppSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of an authorized-connect-app",
      "result_type": {
        "name": "ApiV2010AccountAuthorizedConnectApp",
        "type": "named"
      }
    },
    "FetchAvailablePhoneNumberCountry": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the available phone number Country resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CountryCode": {
          "description": "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country to fetch available phone number information about.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CountryCode",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "iso-country-code"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}.json",
      "result_type": {
        "name": "ApiV2010AccountAvailablePhoneNumberCountry",
        "type": "named"
      }
    },
    "FetchBalance": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Balance.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique SID identifier of the Account.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch the balance for an Account based on Account Sid. Balance changes may not be reflected immediately. Child accounts do not contain balance information",
      "result_type": {
        "name": "ApiV2010AccountBalance",
        "type": "named"
      }
    },
    "FetchCall": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Call resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch the call specified by the provided Call SID",
      "result_type": {
        "name": "ApiV2010AccountCall",
        "type": "named"
      }
    },
    "FetchCallNotification": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the Call Notification resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Call Notification resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications/{Sid}.json",
      "result_type": {
        "name": "ApiV2010AccountCallCallNotificationInstance",
        "type": "named"
      }
    },
    "FetchCallRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Recording resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a recording for a call",
      "result_type": {
        "name": "ApiV2010AccountCallCallRecording",
        "type": "named"
      }
    },
    "FetchConference": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Conference resource to fetch",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a conference",
      "result_type": {
        "name": "ApiV2010AccountConference",
        "type": "named"
      }
    },
    "FetchConferenceRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConferenceSid": {
          "description": "The Conference SID that identifies the conference associated with the recording to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Conference Recording resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a recording for a call",
      "result_type": {
        "name": "ApiV2010AccountConferenceConferenceRecording",
        "type": "named"
      }
    },
    "FetchConnectApp": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the ConnectApp resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a connect-app",
      "result_type": {
        "name": "ApiV2010AccountConnectApp",
        "type": "named"
      }
    },
    "FetchIncomingPhoneNumber": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an incoming-phone-number belonging to the account used to make the request.",
      "result_type": {
        "name": "ApiV2010AccountIncomingPhoneNumber",
        "type": "named"
      }
    },
    "FetchIncomingPhoneNumberAssignedAddOn": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ResourceSid": {
          "description": "The SID of the Phone Number to which the Add-on is assigned.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ResourceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of an Add-on installation currently assigned to this Number.",
      "result_type": {
        "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberAssignedAddOn",
        "type": "named"
      }
    },
    "FetchIncomingPhoneNumberAssignedAddOnExtension": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AssignedAddOnSid": {
          "description": "The SID that uniquely identifies the assigned Add-on installation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AssignedAddOnSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ResourceSid": {
          "description": "The SID of the Phone Number to which the Add-on is assigned.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ResourceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of an Extension for the Assigned Add-on.",
      "result_type": {
        "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension",
        "type": "named"
      }
    },
    "FetchKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Key resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json",
      "result_type": {
        "name": "ApiV2010AccountKey",
        "type": "named"
      }
    },
    "FetchMedia": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Media resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "MessageSid": {
          "description": "The SID of the Message resource that is associated with the Media resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessageSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Media resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^ME[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a single Media resource associated with a specific Message resource",
      "result_type": {
        "name": "ApiV2010AccountMessageMedia",
        "type": "named"
      }
    },
    "FetchMember": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource(s) to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "QueueSid": {
          "description": "The SID of the Queue in which to find the members to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "QueueSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a specific member from the queue",
      "result_type": {
        "name": "ApiV2010AccountQueueMember",
        "type": "named"
      }
    },
    "FetchMessage": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Message resource to be fetched",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a specific Message",
      "result_type": {
        "name": "ApiV2010AccountMessage",
        "type": "named"
      }
    },
    "FetchNotification": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Notifications/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Notification resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a notification belonging to the account used to make the request",
      "result_type": {
        "name": "ApiV2010AccountNotificationInstance",
        "type": "named"
      }
    },
    "FetchOutgoingCallerId": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an outgoing-caller-id belonging to the account used to make the request",
      "result_type": {
        "name": "ApiV2010AccountOutgoingCallerId",
        "type": "named"
      }
    },
    "FetchParticipant": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to fetch. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ConferenceSid": {
          "description": "The SID of the conference with the participant to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a participant",
      "result_type": {
        "name": "ApiV2010AccountConferenceParticipant",
        "type": "named"
      }
    },
    "FetchQueue": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Queue resource to fetch",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a queue identified by the QueueSid",
      "result_type": {
        "name": "ApiV2010AccountQueue",
        "type": "named"
      }
    },
    "FetchRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "IncludeSoftDeleted": {
          "description": "A boolean parameter indicating whether to retrieve soft deleted recordings or not. Recordings metadata are kept after deletion for a retention period of 40 days.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSoftDeleted",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Recording resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a recording",
      "result_type": {
        "name": "ApiV2010AccountRecording",
        "type": "named"
      }
    },
    "FetchRecordingAddOnResult": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ReferenceSid": {
          "description": "The SID of the recording to which the result to fetch belongs.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ReferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Recording AddOnResult resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of an AddOnResult",
      "result_type": {
        "name": "ApiV2010AccountRecordingRecordingAddOnResult",
        "type": "named"
      }
    },
    "FetchRecordingAddOnResultPayload": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AddOnResultSid": {
          "description": "The SID of the AddOnResult to which the payload to fetch belongs.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AddOnResultSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ReferenceSid": {
          "description": "The SID of the recording to which the AddOnResult resource that contains the payload to fetch belongs.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ReferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Recording AddOnResult Payload resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a result payload",
      "result_type": {
        "name": "ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload",
        "type": "named"
      }
    },
    "FetchRecordingTranscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "RecordingSid": {
          "description": "The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcription to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "RecordingSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Transcription resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions/{Sid}.json",
      "result_type": {
        "name": "ApiV2010AccountRecordingRecordingTranscription",
        "type": "named"
      }
    },
    "FetchShortCode": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the ShortCode resource to fetch",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a short code",
      "result_type": {
        "name": "ApiV2010AccountShortCode",
        "type": "named"
      }
    },
    "FetchSigningKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json",
      "result_type": {
        "name": "ApiV2010AccountSigningKey",
        "type": "named"
      }
    },
    "FetchSipAuthCallsCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that contains the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the CredentialListMapping resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a specific instance of a credential list mapping",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping",
        "type": "named"
      }
    },
    "FetchSipAuthCallsIpAccessControlListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that contains the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the IpAccessControlListMapping resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a specific instance of an IP Access Control List mapping",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping",
        "type": "named"
      }
    },
    "FetchSipAuthRegistrationsCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that contains the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the CredentialListMapping resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a specific instance of a credential list mapping",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping",
        "type": "named"
      }
    },
    "FetchSipCredential": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CredentialListSid": {
          "description": "The unique id that identifies the credential list that contains the desired credential.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CredentialListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The unique id that identifies the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a single credential.",
      "result_type": {
        "name": "ApiV2010AccountSipSipCredentialListSipCredential",
        "type": "named"
      }
    },
    "FetchSipCredentialList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The credential list Sid that uniquely identifies this resource",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Get a Credential List",
      "result_type": {
        "name": "ApiV2010AccountSipSipCredentialList",
        "type": "named"
      }
    },
    "FetchSipCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "A 34 character string that uniquely identifies the SIP Domain that includes the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a single CredentialListMapping resource from an account.",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipCredentialListMapping",
        "type": "named"
      }
    },
    "FetchSipDomain": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the SipDomain resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a Domain",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomain",
        "type": "named"
      }
    },
    "FetchSipIpAccessControlList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a specific instance of an IpAccessControlList",
      "result_type": {
        "name": "ApiV2010AccountSipSipIpAccessControlList",
        "type": "named"
      }
    },
    "FetchSipIpAccessControlListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "A 34 character string that uniquely identifies the SIP domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies the resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an IpAccessControlListMapping resource.",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipIpAccessControlListMapping",
        "type": "named"
      }
    },
    "FetchSipIpAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "IpAccessControlListSid": {
          "description": "The IpAccessControlList Sid that identifies the IpAddress resources to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "IpAccessControlListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies the IpAddress resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Read one IpAddress resource.",
      "result_type": {
        "name": "ApiV2010AccountSipSipIpAccessControlListSipIpAddress",
        "type": "named"
      }
    },
    "FetchTranscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Transcriptions/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Transcription resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch an instance of a Transcription",
      "result_type": {
        "name": "ApiV2010AccountTranscription",
        "type": "named"
      }
    },
    "FetchUsageTrigger": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the UsageTrigger resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^UT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch and instance of a usage-trigger",
      "result_type": {
        "name": "ApiV2010AccountUsageUsageTrigger",
        "type": "named"
      }
    },
    "ListAccount": {
      "request": {
        "url": "/2010-04-01/Accounts.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "FriendlyName": {
          "description": "Only return the Account resources with friendly names that exactly match this name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Status": {
          "description": "Only return Account resources with the given status. Can be `closed`, `suspended` or `active`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AccountEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieves a collection of Accounts belonging to the account used to make the request",
      "result_type": {
        "name": "ListAccountResult",
        "type": "named"
      }
    },
    "ListAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Addresses.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CustomerName": {
          "description": "The `customer_name` of the Address resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "CustomerName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "FriendlyName": {
          "description": "The string that identifies the Address resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "IsoCountry": {
          "description": "The ISO country code of the Address resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "IsoCountry",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "iso-country-code"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Addresses.json",
      "result_type": {
        "name": "ListAddressResult",
        "type": "named"
      }
    },
    "ListApplication": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Applications.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "FriendlyName": {
          "description": "The string that identifies the Application resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of applications representing an application within the requesting account",
      "result_type": {
        "name": "ListApplicationResult",
        "type": "named"
      }
    },
    "ListAuthorizedConnectApp": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of authorized-connect-apps belonging to the account used to make the request",
      "result_type": {
        "name": "ListAuthorizedConnectAppResult",
        "type": "named"
      }
    },
    "ListAvailablePhoneNumberCountry": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the available phone number Country resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers.json",
      "result_type": {
        "name": "ListAvailablePhoneNumberCountryResult",
        "type": "named"
      }
    },
    "ListAvailablePhoneNumberLocal": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Local.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AreaCode": {
          "description": "The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "AreaCode",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "Beta": {
          "description": "Whether to read phone numbers that are new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Contains": {
          "description": "The pattern on which to match phone numbers. Valid characters are `*`, `0-9`, `a-z`, and `A-Z`. The `*` character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumberlocal-resource?code-sample=code-find-phone-numbers-by-number-pattern) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumberlocal-resource?code-sample=code-find-phone-numbers-by-character-pattern). If specified, this value must have at least two characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Contains",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "CountryCode": {
          "description": "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CountryCode",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "iso-country-code"
            }
          }
        },
        "Distance": {
          "description": "The search radius, in miles, for a `near_` query.  Can be up to `500` and the default is `25`. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Distance",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "ExcludeAllAddressRequired": {
          "description": "Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeForeignAddressRequired": {
          "description": "Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeLocalAddressRequired": {
          "description": "Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FaxEnabled": {
          "description": "Whether the phone numbers can receive faxes. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "FaxEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "InLata": {
          "description": "Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLata",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InLocality": {
          "description": "Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLocality",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InPostalCode": {
          "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InPostalCode",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRateCenter": {
          "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires `in_lata` to be set as well. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRateCenter",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRegion": {
          "description": "Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRegion",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MmsEnabled": {
          "description": "Whether the phone numbers can receive MMS messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "MmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "NearLatLong": {
          "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `distance` miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearLatLong",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "NearNumber": {
          "description": "Given a phone number, find a geographically close number within `distance` miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SmsEnabled": {
          "description": "Whether the phone numbers can receive text messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "SmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "VoiceEnabled": {
          "description": "Whether the phone numbers can receive calls. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "VoiceEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Local.json",
      "result_type": {
        "name": "ListAvailablePhoneNumberLocalResult",
        "type": "named"
      }
    },
    "ListAvailablePhoneNumberMachineToMachine": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/MachineToMachine.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AreaCode": {
          "description": "The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "AreaCode",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "Beta": {
          "description": "Whether to read phone numbers that are new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Contains": {
          "description": "The pattern on which to match phone numbers. Valid characters are `*`, `0-9`, `a-z`, and `A-Z`. The `*` character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Contains",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "CountryCode": {
          "description": "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CountryCode",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "iso-country-code"
            }
          }
        },
        "Distance": {
          "description": "The search radius, in miles, for a `near_` query.  Can be up to `500` and the default is `25`. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Distance",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "ExcludeAllAddressRequired": {
          "description": "Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeForeignAddressRequired": {
          "description": "Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeLocalAddressRequired": {
          "description": "Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FaxEnabled": {
          "description": "Whether the phone numbers can receive faxes. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "FaxEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "InLata": {
          "description": "Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLata",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InLocality": {
          "description": "Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLocality",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InPostalCode": {
          "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InPostalCode",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRateCenter": {
          "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires `in_lata` to be set as well. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRateCenter",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRegion": {
          "description": "Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRegion",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MmsEnabled": {
          "description": "Whether the phone numbers can receive MMS messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "MmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "NearLatLong": {
          "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `distance` miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearLatLong",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "NearNumber": {
          "description": "Given a phone number, find a geographically close number within `distance` miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SmsEnabled": {
          "description": "Whether the phone numbers can receive text messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "SmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "VoiceEnabled": {
          "description": "Whether the phone numbers can receive calls. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "VoiceEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/MachineToMachine.json",
      "result_type": {
        "name": "ListAvailablePhoneNumberMachineToMachineResult",
        "type": "named"
      }
    },
    "ListAvailablePhoneNumberMobile": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Mobile.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AreaCode": {
          "description": "The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "AreaCode",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "Beta": {
          "description": "Whether to read phone numbers that are new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Contains": {
          "description": "The pattern on which to match phone numbers. Valid characters are `*`, `0-9`, `a-z`, and `A-Z`. The `*` character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Contains",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "CountryCode": {
          "description": "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CountryCode",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "iso-country-code"
            }
          }
        },
        "Distance": {
          "description": "The search radius, in miles, for a `near_` query.  Can be up to `500` and the default is `25`. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Distance",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "ExcludeAllAddressRequired": {
          "description": "Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeForeignAddressRequired": {
          "description": "Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeLocalAddressRequired": {
          "description": "Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FaxEnabled": {
          "description": "Whether the phone numbers can receive faxes. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "FaxEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "InLata": {
          "description": "Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLata",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InLocality": {
          "description": "Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLocality",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InPostalCode": {
          "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InPostalCode",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRateCenter": {
          "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires `in_lata` to be set as well. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRateCenter",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRegion": {
          "description": "Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRegion",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MmsEnabled": {
          "description": "Whether the phone numbers can receive MMS messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "MmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "NearLatLong": {
          "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `distance` miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearLatLong",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "NearNumber": {
          "description": "Given a phone number, find a geographically close number within `distance` miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SmsEnabled": {
          "description": "Whether the phone numbers can receive text messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "SmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "VoiceEnabled": {
          "description": "Whether the phone numbers can receive calls. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "VoiceEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Mobile.json",
      "result_type": {
        "name": "ListAvailablePhoneNumberMobileResult",
        "type": "named"
      }
    },
    "ListAvailablePhoneNumberNational": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/National.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AreaCode": {
          "description": "The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "AreaCode",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "Beta": {
          "description": "Whether to read phone numbers that are new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Contains": {
          "description": "The pattern on which to match phone numbers. Valid characters are `*`, `0-9`, `a-z`, and `A-Z`. The `*` character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Contains",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "CountryCode": {
          "description": "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CountryCode",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "iso-country-code"
            }
          }
        },
        "Distance": {
          "description": "The search radius, in miles, for a `near_` query.  Can be up to `500` and the default is `25`. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Distance",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "ExcludeAllAddressRequired": {
          "description": "Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeForeignAddressRequired": {
          "description": "Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeLocalAddressRequired": {
          "description": "Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FaxEnabled": {
          "description": "Whether the phone numbers can receive faxes. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "FaxEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "InLata": {
          "description": "Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLata",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InLocality": {
          "description": "Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLocality",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InPostalCode": {
          "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InPostalCode",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRateCenter": {
          "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires `in_lata` to be set as well. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRateCenter",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRegion": {
          "description": "Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRegion",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MmsEnabled": {
          "description": "Whether the phone numbers can receive MMS messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "MmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "NearLatLong": {
          "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `distance` miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearLatLong",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "NearNumber": {
          "description": "Given a phone number, find a geographically close number within `distance` miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SmsEnabled": {
          "description": "Whether the phone numbers can receive text messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "SmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "VoiceEnabled": {
          "description": "Whether the phone numbers can receive calls. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "VoiceEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/National.json",
      "result_type": {
        "name": "ListAvailablePhoneNumberNationalResult",
        "type": "named"
      }
    },
    "ListAvailablePhoneNumberSharedCost": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/SharedCost.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AreaCode": {
          "description": "The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "AreaCode",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "Beta": {
          "description": "Whether to read phone numbers that are new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Contains": {
          "description": "The pattern on which to match phone numbers. Valid characters are `*`, `0-9`, `a-z`, and `A-Z`. The `*` character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Contains",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "CountryCode": {
          "description": "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CountryCode",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "iso-country-code"
            }
          }
        },
        "Distance": {
          "description": "The search radius, in miles, for a `near_` query.  Can be up to `500` and the default is `25`. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Distance",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "ExcludeAllAddressRequired": {
          "description": "Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeForeignAddressRequired": {
          "description": "Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeLocalAddressRequired": {
          "description": "Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FaxEnabled": {
          "description": "Whether the phone numbers can receive faxes. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "FaxEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "InLata": {
          "description": "Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLata",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InLocality": {
          "description": "Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLocality",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InPostalCode": {
          "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InPostalCode",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRateCenter": {
          "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires `in_lata` to be set as well. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRateCenter",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRegion": {
          "description": "Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRegion",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MmsEnabled": {
          "description": "Whether the phone numbers can receive MMS messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "MmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "NearLatLong": {
          "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `distance` miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearLatLong",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "NearNumber": {
          "description": "Given a phone number, find a geographically close number within `distance` miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SmsEnabled": {
          "description": "Whether the phone numbers can receive text messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "SmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "VoiceEnabled": {
          "description": "Whether the phone numbers can receive calls. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "VoiceEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/SharedCost.json",
      "result_type": {
        "name": "ListAvailablePhoneNumberSharedCostResult",
        "type": "named"
      }
    },
    "ListAvailablePhoneNumberTollFree": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/TollFree.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AreaCode": {
          "description": "The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "AreaCode",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "Beta": {
          "description": "Whether to read phone numbers that are new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Contains": {
          "description": "The pattern on which to match phone numbers. Valid characters are `*`, `0-9`, `a-z`, and `A-Z`. The `*` character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Contains",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "CountryCode": {
          "description": "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CountryCode",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "iso-country-code"
            }
          }
        },
        "Distance": {
          "description": "The search radius, in miles, for a `near_` query.  Can be up to `500` and the default is `25`. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Distance",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "ExcludeAllAddressRequired": {
          "description": "Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeForeignAddressRequired": {
          "description": "Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeLocalAddressRequired": {
          "description": "Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FaxEnabled": {
          "description": "Whether the phone numbers can receive faxes. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "FaxEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "InLata": {
          "description": "Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLata",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InLocality": {
          "description": "Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLocality",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InPostalCode": {
          "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InPostalCode",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRateCenter": {
          "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires `in_lata` to be set as well. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRateCenter",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRegion": {
          "description": "Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRegion",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MmsEnabled": {
          "description": "Whether the phone numbers can receive MMS messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "MmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "NearLatLong": {
          "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `distance` miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearLatLong",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "NearNumber": {
          "description": "Given a phone number, find a geographically close number within `distance` miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SmsEnabled": {
          "description": "Whether the phone numbers can receive text messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "SmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "VoiceEnabled": {
          "description": "Whether the phone numbers can receive calls. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "VoiceEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/TollFree.json",
      "result_type": {
        "name": "ListAvailablePhoneNumberTollFreeResult",
        "type": "named"
      }
    },
    "ListAvailablePhoneNumberVoip": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Voip.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AreaCode": {
          "description": "The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "AreaCode",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "Beta": {
          "description": "Whether to read phone numbers that are new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Contains": {
          "description": "The pattern on which to match phone numbers. Valid characters are `*`, `0-9`, `a-z`, and `A-Z`. The `*` character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Contains",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "CountryCode": {
          "description": "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CountryCode",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "iso-country-code"
            }
          }
        },
        "Distance": {
          "description": "The search radius, in miles, for a `near_` query.  Can be up to `500` and the default is `25`. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Distance",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "ExcludeAllAddressRequired": {
          "description": "Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeAllAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeForeignAddressRequired": {
          "description": "Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeForeignAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ExcludeLocalAddressRequired": {
          "description": "Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "ExcludeLocalAddressRequired",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FaxEnabled": {
          "description": "Whether the phone numbers can receive faxes. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "FaxEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "InLata": {
          "description": "Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLata",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InLocality": {
          "description": "Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InLocality",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InPostalCode": {
          "description": "Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InPostalCode",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRateCenter": {
          "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires `in_lata` to be set as well. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRateCenter",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InRegion": {
          "description": "Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "InRegion",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MmsEnabled": {
          "description": "Whether the phone numbers can receive MMS messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "MmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "NearLatLong": {
          "description": "Given a latitude/longitude pair `lat,long` find geographically close numbers within `distance` miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearLatLong",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "NearNumber": {
          "description": "Given a phone number, find a geographically close number within `distance` miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "NearNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SmsEnabled": {
          "description": "Whether the phone numbers can receive text messages. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "SmsEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "VoiceEnabled": {
          "description": "Whether the phone numbers can receive calls. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "VoiceEnabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Voip.json",
      "result_type": {
        "name": "ListAvailablePhoneNumberVoipResult",
        "type": "named"
      }
    },
    "ListCall": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "EndTime": {
          "description": "Only include calls that ended on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only calls that ended on this date. You can also specify an inequality, such as `EndTime=YYYY-MM-DD` to read calls that ended on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndTime",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "EndTime<": {
          "description": "Only include calls that ended on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only calls that ended on this date. You can also specify an inequality, such as `EndTime=YYYY-MM-DD` to read calls that ended on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndTime<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "EndTime>": {
          "description": "Only include calls that ended on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only calls that ended on this date. You can also specify an inequality, such as `EndTime=YYYY-MM-DD` to read calls that ended on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "EndTime>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "From": {
          "description": "Only include calls from this phone number, SIP address, Client identifier or SIM SID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "From",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ParentCallSid": {
          "description": "Only include calls spawned by calls with this SID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "ParentCallSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "StartTime": {
          "description": "Only include calls that started on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only calls that started on this date. You can also specify an inequality, such as `StartTime=YYYY-MM-DD` to read calls that started on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartTime",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "StartTime<": {
          "description": "Only include calls that started on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only calls that started on this date. You can also specify an inequality, such as `StartTime=YYYY-MM-DD` to read calls that started on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartTime<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "StartTime>": {
          "description": "Only include calls that started on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only calls that started on this date. You can also specify an inequality, such as `StartTime=YYYY-MM-DD` to read calls that started on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "StartTime>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Status": {
          "description": "The status of the calls to include. Can be: `queued`, `ringing`, `in-progress`, `canceled`, `completed`, `failed`, `busy`, or `no-answer`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CallEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "To": {
          "description": "Only show calls made to this phone number, SIP address, Client identifier or SIM SID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "To",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        }
      },
      "description": "Retrieves a collection of calls made to and from your account",
      "result_type": {
        "name": "ListCallResult",
        "type": "named"
      }
    },
    "ListCallEvent": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Events.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique SID identifier of the Account.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The unique SID identifier of the Call.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all events for a call.",
      "result_type": {
        "name": "ListCallEventResult",
        "type": "named"
      }
    },
    "ListCallNotification": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the Call Notification resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Log": {
          "description": "Only read notifications of the specified log level. Can be:  `0` to read only ERROR notifications or `1` to read only WARNING notifications. By default, all notifications are read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Log",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "MessageDate": {
          "description": "Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `=YYYY-MM-DD` for messages logged at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "MessageDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "MessageDate<": {
          "description": "Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `=YYYY-MM-DD` for messages logged at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "MessageDate<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "MessageDate>": {
          "description": "Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `=YYYY-MM-DD` for messages logged at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "MessageDate>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications.json",
      "result_type": {
        "name": "ListCallNotificationResult",
        "type": "named"
      }
    },
    "ListCallRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DateCreated": {
          "description": "The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. You can also specify inequality: `DateCreated=YYYY-MM-DD` returns recordings generated at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "DateCreated<": {
          "description": "The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. You can also specify inequality: `DateCreated=YYYY-MM-DD` returns recordings generated at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "DateCreated>": {
          "description": "The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. You can also specify inequality: `DateCreated=YYYY-MM-DD` returns recordings generated at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of recordings belonging to the call used to make the request",
      "result_type": {
        "name": "ListCallRecordingResult",
        "type": "named"
      }
    },
    "ListConference": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DateCreated": {
          "description": "Only include conferences that were created on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only conferences that were created on this date. You can also specify an inequality, such as `DateCreated=YYYY-MM-DD` to read conferences that were created on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "DateCreated<": {
          "description": "Only include conferences that were created on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only conferences that were created on this date. You can also specify an inequality, such as `DateCreated=YYYY-MM-DD` to read conferences that were created on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "DateCreated>": {
          "description": "Only include conferences that were created on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only conferences that were created on this date. You can also specify an inequality, such as `DateCreated=YYYY-MM-DD` to read conferences that were created on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "DateUpdated": {
          "description": "Only include conferences that were last updated on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only conferences that were last updated on this date. You can also specify an inequality, such as `DateUpdated=YYYY-MM-DD` to read conferences that were last updated on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateUpdated",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "DateUpdated<": {
          "description": "Only include conferences that were last updated on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only conferences that were last updated on this date. You can also specify an inequality, such as `DateUpdated=YYYY-MM-DD` to read conferences that were last updated on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateUpdated<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "DateUpdated>": {
          "description": "Only include conferences that were last updated on this date. Specify a date as `YYYY-MM-DD` in UTC, for example: `2009-07-06`, to read only conferences that were last updated on this date. You can also specify an inequality, such as `DateUpdated=YYYY-MM-DD` to read conferences that were last updated on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateUpdated>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "FriendlyName": {
          "description": "The string that identifies the Conference resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Status": {
          "description": "The status of the resources to read. Can be: `init`, `in-progress`, or `completed`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConferenceEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of conferences belonging to the account used to make the request",
      "result_type": {
        "name": "ListConferenceResult",
        "type": "named"
      }
    },
    "ListConferenceRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConferenceSid": {
          "description": "The Conference SID that identifies the conference associated with the recording to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DateCreated": {
          "description": "The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. You can also specify inequality: `DateCreated=YYYY-MM-DD` returns recordings generated at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "DateCreated<": {
          "description": "The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. You can also specify inequality: `DateCreated=YYYY-MM-DD` returns recordings generated at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "DateCreated>": {
          "description": "The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. You can also specify inequality: `DateCreated=YYYY-MM-DD` returns recordings generated at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of recordings belonging to the call used to make the request",
      "result_type": {
        "name": "ListConferenceRecordingResult",
        "type": "named"
      }
    },
    "ListConnectApp": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/ConnectApps.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of connect-apps belonging to the account used to make the request",
      "result_type": {
        "name": "ListConnectAppResult",
        "type": "named"
      }
    },
    "ListDependentPhoneNumber": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Addresses/{AddressSid}/DependentPhoneNumbers.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the DependentPhoneNumber resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AddressSid": {
          "description": "The SID of the Address resource associated with the phone number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AddressSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Addresses/{AddressSid}/DependentPhoneNumbers.json",
      "result_type": {
        "name": "ListDependentPhoneNumberResult",
        "type": "named"
      }
    },
    "ListIncomingPhoneNumber": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Beta": {
          "description": "Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FriendlyName": {
          "description": "A string that identifies the IncomingPhoneNumber resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Origin": {
          "description": "Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Origin",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "PhoneNumber": {
          "description": "The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PhoneNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        }
      },
      "description": "Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.",
      "result_type": {
        "name": "ListIncomingPhoneNumberResult",
        "type": "named"
      }
    },
    "ListIncomingPhoneNumberAssignedAddOn": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ResourceSid": {
          "description": "The SID of the Phone Number to which the Add-on is assigned.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ResourceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve a list of Add-on installations currently assigned to this Number.",
      "result_type": {
        "name": "ListIncomingPhoneNumberAssignedAddOnResult",
        "type": "named"
      }
    },
    "ListIncomingPhoneNumberAssignedAddOnExtension": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AssignedAddOnSid": {
          "description": "The SID that uniquely identifies the assigned Add-on installation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AssignedAddOnSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ResourceSid": {
          "description": "The SID of the Phone Number to which the Add-on is assigned.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ResourceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve a list of Extensions for the Assigned Add-on.",
      "result_type": {
        "name": "ListIncomingPhoneNumberAssignedAddOnExtensionResult",
        "type": "named"
      }
    },
    "ListIncomingPhoneNumberLocal": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Beta": {
          "description": "Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FriendlyName": {
          "description": "A string that identifies the resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Origin": {
          "description": "Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Origin",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "PhoneNumber": {
          "description": "The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PhoneNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json",
      "result_type": {
        "name": "ListIncomingPhoneNumberLocalResult",
        "type": "named"
      }
    },
    "ListIncomingPhoneNumberMobile": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Beta": {
          "description": "Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FriendlyName": {
          "description": "A string that identifies the resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Origin": {
          "description": "Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Origin",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "PhoneNumber": {
          "description": "The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PhoneNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json",
      "result_type": {
        "name": "ListIncomingPhoneNumberMobileResult",
        "type": "named"
      }
    },
    "ListIncomingPhoneNumberTollFree": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Beta": {
          "description": "Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Beta",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "FriendlyName": {
          "description": "A string that identifies the resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Origin": {
          "description": "Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Origin",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "PhoneNumber": {
          "description": "The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PhoneNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json",
      "result_type": {
        "name": "ListIncomingPhoneNumberTollFreeResult",
        "type": "named"
      }
    },
    "ListKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Keys.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Keys.json",
      "result_type": {
        "name": "ListKeyResult",
        "type": "named"
      }
    },
    "ListMedia": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is associated with the Media resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DateCreated": {
          "description": "Only include Media resources that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read Media that were created on this date. You can also specify an inequality, such as `StartTime=YYYY-MM-DD` to read Media that were created on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "DateCreated<": {
          "description": "Only include Media resources that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read Media that were created on this date. You can also specify an inequality, such as `StartTime=YYYY-MM-DD` to read Media that were created on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "DateCreated>": {
          "description": "Only include Media resources that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read Media that were created on this date. You can also specify an inequality, such as `StartTime=YYYY-MM-DD` to read Media that were created on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "MessageSid": {
          "description": "The SID of the Message resource that is associated with the Media resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessageSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Read a list of Media resources associated with a specific Message resource",
      "result_type": {
        "name": "ListMediaResult",
        "type": "named"
      }
    },
    "ListMember": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "QueueSid": {
          "description": "The SID of the Queue in which to find the members",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "QueueSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve the members of the queue",
      "result_type": {
        "name": "ListMemberResult",
        "type": "named"
      }
    },
    "ListMessage": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Messages.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resources.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DateSent": {
          "description": "Filter by Message `sent_date`. Accepts GMT dates in the following formats: `YYYY-MM-DD` (to find Messages with a specific `sent_date`), `=YYYY-MM-DD` (to find Messages with `sent_dates` on and after a specific date).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateSent",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "DateSent<": {
          "description": "Filter by Message `sent_date`. Accepts GMT dates in the following formats: `YYYY-MM-DD` (to find Messages with a specific `sent_date`), `=YYYY-MM-DD` (to find Messages with `sent_dates` on and after a specific date).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateSent<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "DateSent>": {
          "description": "Filter by Message `sent_date`. Accepts GMT dates in the following formats: `YYYY-MM-DD` (to find Messages with a specific `sent_date`), `=YYYY-MM-DD` (to find Messages with `sent_dates` on and after a specific date).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateSent>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "From": {
          "description": "Filter by sender. For example: Set this `from` parameter to `+15552229999` to retrieve a list of Message resources with `from` properties of `+15552229999`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "From",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "To": {
          "description": "Filter by recipient. For example: Set this `to` parameter to `+15558881111` to retrieve a list of Message resources with `to` properties of `+15558881111`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "To",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        }
      },
      "description": "Retrieve a list of Message resources associated with a Twilio Account",
      "result_type": {
        "name": "ListMessageResult",
        "type": "named"
      }
    },
    "ListNotification": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Notifications.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Log": {
          "description": "Only read notifications of the specified log level. Can be:  `0` to read only ERROR notifications or `1` to read only WARNING notifications. By default, all notifications are read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Log",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "MessageDate": {
          "description": "Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `=YYYY-MM-DD` for messages logged at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "MessageDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "MessageDate<": {
          "description": "Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `=YYYY-MM-DD` for messages logged at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "MessageDate<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "MessageDate>": {
          "description": "Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `=YYYY-MM-DD` for messages logged at or after midnight on a date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "MessageDate>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of notifications belonging to the account used to make the request",
      "result_type": {
        "name": "ListNotificationResult",
        "type": "named"
      }
    },
    "ListOutgoingCallerId": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "FriendlyName": {
          "description": "The string that identifies the OutgoingCallerId resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "PhoneNumber": {
          "description": "The phone number of the OutgoingCallerId resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PhoneNumber",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "phone-number"
            }
          }
        }
      },
      "description": "Retrieve a list of outgoing-caller-ids belonging to the account used to make the request",
      "result_type": {
        "name": "ListOutgoingCallerIdResult",
        "type": "named"
      }
    },
    "ListParticipant": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Coaching": {
          "description": "Whether to return only participants who are coaching another call. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Coaching",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ConferenceSid": {
          "description": "The SID of the conference with the participants to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Hold": {
          "description": "Whether to return only participants that are on hold. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Hold",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Muted": {
          "description": "Whether to return only participants that are muted. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "Muted",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of participants belonging to the account used to make the request",
      "result_type": {
        "name": "ListParticipantResult",
        "type": "named"
      }
    },
    "ListQueue": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Queues.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of queues belonging to the account used to make the request",
      "result_type": {
        "name": "ListQueueResult",
        "type": "named"
      }
    },
    "ListRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "CallSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConferenceSid": {
          "description": "The Conference SID that identifies the conference associated with the recording to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "ConferenceSid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DateCreated": {
          "description": "Only include recordings that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read recordings that were created on this date. You can also specify an inequality, such as `DateCreated=YYYY-MM-DD` to read recordings that were created on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "DateCreated<": {
          "description": "Only include recordings that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read recordings that were created on this date. You can also specify an inequality, such as `DateCreated=YYYY-MM-DD` to read recordings that were created on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated<",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "DateCreated>": {
          "description": "Only include recordings that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read recordings that were created on this date. You can also specify an inequality, such as `DateCreated=YYYY-MM-DD` to read recordings that were created on or after midnight of this date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "DateCreated>",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "IncludeSoftDeleted": {
          "description": "A boolean parameter indicating whether to retrieve soft deleted recordings or not. Recordings metadata are kept after deletion for a retention period of 40 days.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSoftDeleted",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of recordings belonging to the account used to make the request",
      "result_type": {
        "name": "ListRecordingResult",
        "type": "named"
      }
    },
    "ListRecordingAddOnResult": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ReferenceSid": {
          "description": "The SID of the recording to which the result to read belongs.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ReferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve a list of results belonging to the recording",
      "result_type": {
        "name": "ListRecordingAddOnResultResult",
        "type": "named"
      }
    },
    "ListRecordingAddOnResultPayload": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AddOnResultSid": {
          "description": "The SID of the AddOnResult to which the payloads to read belongs.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AddOnResultSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ReferenceSid": {
          "description": "The SID of the recording to which the AddOnResult resource that contains the payloads to read belongs.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ReferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Retrieve a list of payloads belonging to the AddOnResult",
      "result_type": {
        "name": "ListRecordingAddOnResultPayloadResult",
        "type": "named"
      }
    },
    "ListRecordingTranscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "RecordingSid": {
          "description": "The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcriptions to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "RecordingSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions.json",
      "result_type": {
        "name": "ListRecordingTranscriptionResult",
        "type": "named"
      }
    },
    "ListShortCode": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "FriendlyName": {
          "description": "The string that identifies the ShortCode resources to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "FriendlyName",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ShortCode": {
          "description": "Only show the ShortCode resources that match this pattern. You can specify partial numbers and use '*' as a wildcard for any digit.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "ShortCode",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of short-codes belonging to the account used to make the request",
      "result_type": {
        "name": "ListShortCodeResult",
        "type": "named"
      }
    },
    "ListSigningKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SigningKeys.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/SigningKeys.json",
      "result_type": {
        "name": "ListSigningKeyResult",
        "type": "named"
      }
    },
    "ListSipAuthCallsCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that contains the resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of credential list mappings belonging to the domain used in the request",
      "result_type": {
        "name": "ListSipAuthCallsCredentialListMappingResult",
        "type": "named"
      }
    },
    "ListSipAuthCallsIpAccessControlListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that contains the resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of IP Access Control List mappings belonging to the domain used in the request",
      "result_type": {
        "name": "ListSipAuthCallsIpAccessControlListMappingResult",
        "type": "named"
      }
    },
    "ListSipAuthRegistrationsCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that contains the resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of credential list mappings belonging to the domain used in the request",
      "result_type": {
        "name": "ListSipAuthRegistrationsCredentialListMappingResult",
        "type": "named"
      }
    },
    "ListSipCredential": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CredentialListSid": {
          "description": "The unique id that identifies the credential list that contains the desired credentials.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CredentialListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of credentials.",
      "result_type": {
        "name": "ListSipCredentialResult",
        "type": "named"
      }
    },
    "ListSipCredentialList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get All Credential Lists",
      "result_type": {
        "name": "ListSipCredentialListResult",
        "type": "named"
      }
    },
    "ListSipCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "A 34 character string that uniquely identifies the SIP Domain that includes the resource to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Read multiple CredentialListMapping resources from an account.",
      "result_type": {
        "name": "ListSipCredentialListMappingResult",
        "type": "named"
      }
    },
    "ListSipDomain": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of domains belonging to the account used to make the request",
      "result_type": {
        "name": "ListSipDomainResult",
        "type": "named"
      }
    },
    "ListSipIpAccessControlList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of IpAccessControlLists that belong to the account used to make the request",
      "result_type": {
        "name": "ListSipIpAccessControlListResult",
        "type": "named"
      }
    },
    "ListSipIpAccessControlListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "A 34 character string that uniquely identifies the SIP domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of IpAccessControlListMapping resources.",
      "result_type": {
        "name": "ListSipIpAccessControlListMappingResult",
        "type": "named"
      }
    },
    "ListSipIpAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "IpAccessControlListSid": {
          "description": "The IpAccessControlList Sid that identifies the IpAddress resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "IpAccessControlListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Read multiple IpAddress resources.",
      "result_type": {
        "name": "ListSipIpAddressResult",
        "type": "named"
      }
    },
    "ListTranscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Transcriptions.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of transcriptions belonging to the account used to make the request",
      "result_type": {
        "name": "ListTranscriptionResult",
        "type": "named"
      }
    },
    "ListUsageRecord": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Records.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Category": {
          "description": "The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "EndDate": {
          "description": "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "IncludeSubaccounts": {
          "description": "Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubaccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        }
      },
      "description": "Retrieve a list of usage-records belonging to the account used to make the request",
      "result_type": {
        "name": "ListUsageRecordResult",
        "type": "named"
      }
    },
    "ListUsageRecordAllTime": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Records/AllTime.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Category": {
          "description": "The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordAllTimeEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "EndDate": {
          "description": "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "IncludeSubaccounts": {
          "description": "Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubaccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Usage/Records/AllTime.json",
      "result_type": {
        "name": "ListUsageRecordAllTimeResult",
        "type": "named"
      }
    },
    "ListUsageRecordDaily": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Daily.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Category": {
          "description": "The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordDailyEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "EndDate": {
          "description": "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "IncludeSubaccounts": {
          "description": "Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubaccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Usage/Records/Daily.json",
      "result_type": {
        "name": "ListUsageRecordDailyResult",
        "type": "named"
      }
    },
    "ListUsageRecordLastMonth": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Records/LastMonth.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Category": {
          "description": "The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordLastMonthEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "EndDate": {
          "description": "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "IncludeSubaccounts": {
          "description": "Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubaccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Usage/Records/LastMonth.json",
      "result_type": {
        "name": "ListUsageRecordLastMonthResult",
        "type": "named"
      }
    },
    "ListUsageRecordMonthly": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Monthly.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Category": {
          "description": "The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordMonthlyEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "EndDate": {
          "description": "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "IncludeSubaccounts": {
          "description": "Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubaccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Usage/Records/Monthly.json",
      "result_type": {
        "name": "ListUsageRecordMonthlyResult",
        "type": "named"
      }
    },
    "ListUsageRecordThisMonth": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Records/ThisMonth.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Category": {
          "description": "The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordThisMonthEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "EndDate": {
          "description": "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "IncludeSubaccounts": {
          "description": "Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubaccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Usage/Records/ThisMonth.json",
      "result_type": {
        "name": "ListUsageRecordThisMonthResult",
        "type": "named"
      }
    },
    "ListUsageRecordToday": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Today.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Category": {
          "description": "The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordTodayEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "EndDate": {
          "description": "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "IncludeSubaccounts": {
          "description": "Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubaccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Usage/Records/Today.json",
      "result_type": {
        "name": "ListUsageRecordTodayResult",
        "type": "named"
      }
    },
    "ListUsageRecordYearly": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yearly.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Category": {
          "description": "The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordYearlyEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "EndDate": {
          "description": "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "IncludeSubaccounts": {
          "description": "Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubaccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Usage/Records/Yearly.json",
      "result_type": {
        "name": "ListUsageRecordYearlyResult",
        "type": "named"
      }
    },
    "ListUsageRecordYesterday": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yesterday.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Category": {
          "description": "The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordYesterdayEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "EndDate": {
          "description": "Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "IncludeSubaccounts": {
          "description": "Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "IncludeSubaccounts",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        }
      },
      "description": "GET /2010-04-01/Accounts/{AccountSid}/Usage/Records/Yesterday.json",
      "result_type": {
        "name": "ListUsageRecordYesterdayResult",
        "type": "named"
      }
    },
    "ListUsageTrigger": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Recurring": {
          "description": "The frequency of recurring UsageTriggers to read. Can be: `daily`, `monthly`, or `yearly` to read recurring UsageTriggers. An empty value or a value of `alltime` reads non-recurring UsageTriggers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageTriggerEnumRecurring",
              "type": "named"
            }
          },
          "http": {
            "name": "Recurring",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "TriggerBy": {
          "description": "The trigger field of the UsageTriggers to read.  Can be: `count`, `usage`, or `price` as described in the [UsageRecords documentation](https://www.twilio.com/docs/usage/api/usage-record#usage-count-price).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageTriggerEnumTriggerField",
              "type": "named"
            }
          },
          "http": {
            "name": "TriggerBy",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UsageCategory": {
          "description": "The usage category of the UsageTriggers to read. Must be a supported [usage categories](https://www.twilio.com/docs/usage/api/usage-record#usage-categories).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageTriggerEnumUsageCategory",
              "type": "named"
            }
          },
          "http": {
            "name": "UsageCategory",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of usage-triggers belonging to the account used to make the request",
      "result_type": {
        "name": "ListUsageTriggerResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "ApiV2010Account": {
      "fields": {
        "auth_token": {
          "description": "The authorization token for this account. This token should be kept a secret, so no sharing.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date that this account was created, in GMT in RFC 2822 format",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date that this account was last updated, in GMT in RFC 2822 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "A human readable description of this account, up to 64 characters long. By default the FriendlyName is your email address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner_account_sid": {
          "description": "The unique 34 character id that represents the parent of this account. The OwnerAccountSid of a parent account is it's own sid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AccountEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subresource_uris": {
          "description": "A Map of various subresources available for the given Account Instance",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AccountEnumType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI for this resource, relative to `https://api.twilio.com`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAddress": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "city": {
          "description": "The city in which the address is located.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "customer_name": {
          "description": "The name associated with the address.This property has a maximum length of 16 4-byte characters, or 21 3-byte characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "emergency_enabled": {
          "description": "Whether emergency calling has been enabled on this number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "iso_country": {
          "description": "The ISO country code of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "postal_code": {
          "description": "The postal code of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "description": "The state or region of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Address resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "street": {
          "description": "The number and street address of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "street_secondary": {
          "description": "The additional number and street address of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "validated": {
          "description": "Whether the address has been validated to comply with local regulation. In countries that require valid addresses, an invalid address will not be accepted. `true` indicates the Address has been validated. `false` indicate the country doesn't require validation or the Address is not valid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "verified": {
          "description": "Whether the address has been verified to comply with regulation. In countries that require valid addresses, an invalid address will not be accepted. `true` indicates the Address has been verified. `false` indicate the country doesn't require verified or the Address is not valid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAddressDependentPhoneNumber": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the DependentPhoneNumber resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "address_requirements": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DependentPhoneNumberEnumAddressRequirement",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "api_version": {
          "description": "The API version used to start a new TwiML session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicates whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "emergency_address_sid": {
          "description": "The SID of the emergency address configuration that we use for emergency calling from the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "emergency_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DependentPhoneNumberEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the DependentPhoneNumber resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_application_sid": {
          "description": "The SID of the application that handles SMS messages sent to the phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_fallback_method": {
          "description": "The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAddressDependentPhoneNumberSmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_fallback_url": {
          "description": "The URL that we call when an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sms_method": {
          "description": "The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAddressDependentPhoneNumberSmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_url": {
          "description": "The URL we call when the phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status_callback": {
          "description": "The URL we call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status_callback_method": {
          "description": "The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAddressDependentPhoneNumberStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "trunk_sid": {
          "description": "The SID of the Trunk that handles calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_application_sid": {
          "description": "The SID of the application that handles calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "voice_caller_id_lookup": {
          "description": "Whether we look up the caller's caller-ID name from the CNAM database. Can be: `true` or `false`. Caller ID lookups can cost $0.01 each.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice_fallback_method": {
          "description": "The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAddressDependentPhoneNumberVoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_fallback_url": {
          "description": "The URL that we call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_method": {
          "description": "The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAddressDependentPhoneNumberVoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_url": {
          "description": "The URL we call when the phone number receives a call. The `voice_url` will not be used if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ApiV2010AccountApplication": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to start a new TwiML session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "message_status_callback": {
          "description": "The URL we call using a POST method to send message status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "public_application_connect_enabled": {
          "description": "Whether to allow other Twilio accounts to dial this applicaton using Dial verb. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Application resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_fallback_method": {
          "description": "The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountApplicationSmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_fallback_url": {
          "description": "The URL that we call when an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sms_method": {
          "description": "The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountApplicationSmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_status_callback": {
          "description": "The URL we call using a POST method to send status information to your application about SMS messages that refer to the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sms_url": {
          "description": "The URL we call when the phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status_callback": {
          "description": "The URL we call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status_callback_method": {
          "description": "The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountApplicationStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_caller_id_lookup": {
          "description": "Whether we look up the caller's caller-ID name from the CNAM database (additional charges apply). Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice_fallback_method": {
          "description": "The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountApplicationVoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_fallback_url": {
          "description": "The URL that we call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_method": {
          "description": "The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountApplicationVoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_url": {
          "description": "The URL we call when the phone number assigned to this application receives a call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ApiV2010AccountAuthorizedConnectApp": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "connect_app_company_name": {
          "description": "The company name set for the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "connect_app_description": {
          "description": "A detailed description of the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "connect_app_friendly_name": {
          "description": "The name of the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "connect_app_homepage_url": {
          "description": "The public URL for the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "connect_app_sid": {
          "description": "The SID that we assigned to the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "permissions": {
          "description": "The set of permissions that you authorized for the Connect App.  Can be: `get-all` or `post-all`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AuthorizedConnectAppEnumPermission",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountry": {
      "fields": {
        "beta": {
          "description": "Whether all phone numbers available in the country are new to the Twilio platform. `true` if they are and `false` if all numbers are not in the Twilio Phone Number Beta program.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "country": {
          "description": "The name of the country.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "country_code": {
          "description": "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "subresource_uris": {
          "description": "A list of related AvailablePhoneNumber resources identified by their URIs relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the Country resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocal": {
      "fields": {
        "address_requirements": {
          "description": "The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "friendly_name": {
          "description": "A formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "iso_country": {
          "description": "The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "lata": {
          "description": "The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "latitude": {
          "description": "The latitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "locality": {
          "description": "The locality or city of this phone number's location.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "longitude": {
          "description": "The longitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "postal_code": {
          "description": "The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rate_center": {
          "description": "The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "description": "The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberMachineToMachine": {
      "fields": {
        "address_requirements": {
          "description": "The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberMachineToMachineCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "friendly_name": {
          "description": "A formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "iso_country": {
          "description": "The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "lata": {
          "description": "The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "latitude": {
          "description": "The latitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "locality": {
          "description": "The locality or city of this phone number's location.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "longitude": {
          "description": "The longitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "postal_code": {
          "description": "The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rate_center": {
          "description": "The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "description": "The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberMachineToMachineCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberMobile": {
      "fields": {
        "address_requirements": {
          "description": "The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberMobileCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "friendly_name": {
          "description": "A formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "iso_country": {
          "description": "The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "lata": {
          "description": "The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "latitude": {
          "description": "The latitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "locality": {
          "description": "The locality or city of this phone number's location.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "longitude": {
          "description": "The longitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "postal_code": {
          "description": "The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rate_center": {
          "description": "The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "description": "The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberMobileCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberNational": {
      "fields": {
        "address_requirements": {
          "description": "The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberNationalCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "friendly_name": {
          "description": "A formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "iso_country": {
          "description": "The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "lata": {
          "description": "The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "latitude": {
          "description": "The latitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "locality": {
          "description": "The locality or city of this phone number's location.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "longitude": {
          "description": "The longitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "postal_code": {
          "description": "The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rate_center": {
          "description": "The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "description": "The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberNationalCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberSharedCost": {
      "fields": {
        "address_requirements": {
          "description": "The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberSharedCostCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "friendly_name": {
          "description": "A formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "iso_country": {
          "description": "The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "lata": {
          "description": "The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "latitude": {
          "description": "The latitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "locality": {
          "description": "The locality or city of this phone number's location.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "longitude": {
          "description": "The longitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "postal_code": {
          "description": "The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rate_center": {
          "description": "The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "description": "The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberSharedCostCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree": {
      "fields": {
        "address_requirements": {
          "description": "The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFreeCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "friendly_name": {
          "description": "A formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "iso_country": {
          "description": "The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "lata": {
          "description": "The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "latitude": {
          "description": "The latitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "locality": {
          "description": "The locality or city of this phone number's location.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "longitude": {
          "description": "The longitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "postal_code": {
          "description": "The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rate_center": {
          "description": "The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "description": "The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFreeCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip": {
      "fields": {
        "address_requirements": {
          "description": "The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoipCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "friendly_name": {
          "description": "A formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "iso_country": {
          "description": "The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "lata": {
          "description": "The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "latitude": {
          "description": "The latitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "locality": {
          "description": "The locality or city of this phone number's location.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "longitude": {
          "description": "The longitude of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "postal_code": {
          "description": "The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rate_center": {
          "description": "The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "description": "The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoipCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountBalance": {
      "fields": {
        "account_sid": {
          "description": "The unique SID identifier of the Account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "balance": {
          "description": "The balance of the Account, in units specified by the unit parameter. Balance changes may not be reflected immediately. Child accounts do not contain balance information",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "currency": {
          "description": "The units of currency for the account balance",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountCall": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Call resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "answered_by": {
          "description": "Either `human` or `machine` if this call was initiated with answering machine detection. Empty otherwise.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "api_version": {
          "description": "The API version used to create the call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "caller_name": {
          "description": "The caller's name if this call was an incoming call to a phone number with caller ID Lookup enabled. Otherwise, empty.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in UTC that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in UTC that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "direction": {
          "description": "A string describing the direction of the call. Can be: `inbound` for inbound calls, `outbound-api` for calls initiated via the REST API or `outbound-dial` for calls initiated by a `` verb. Using [Elastic SIP Trunking](https://www.twilio.com/docs/sip-trunking), the values can be [`trunking-terminating`](https://www.twilio.com/docs/sip-trunking#termination) for outgoing calls from your communications infrastructure to the PSTN or [`trunking-originating`](https://www.twilio.com/docs/sip-trunking#origination) for incoming calls to your communications infrastructure from the PSTN.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "duration": {
          "description": "The length of the call in seconds. This value is empty for busy, failed, unanswered, or ongoing calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_time": {
          "description": "The time the call ended, given as UTC in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format. Empty if the call did not complete successfully.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "forwarded_from": {
          "description": "The forwarding phone number if this call was an incoming call forwarded from another number (depends on carrier supporting forwarding). Otherwise, empty.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "from": {
          "description": "The phone number, SIP address, Client identifier or SIM SID that made this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`. SIM SIDs are formatted as `sim:sid`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "from_formatted": {
          "description": "The calling phone number, SIP address, or Client identifier formatted for display. Non-North American phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +442071838750).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "group_sid": {
          "description": "The Group SID associated with this call. If no Group is associated with the call, the field is empty.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^GP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "parent_call_sid": {
          "description": "The SID that identifies the call that created this leg.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "phone_number_sid": {
          "description": "If the call was inbound, this is the SID of the IncomingPhoneNumber resource that received the call. If the call was outbound, it is the SID of the OutgoingCallerId resource from which the call was placed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "price": {
          "description": "The charge for this call, in the currency associated with the account. Populated after the call is completed. May not be immediately available. The price associated with a call only reflects the charge for connectivity.  Charges for other call-related features such as Answering Machine Detection, Text-To-Speech, and SIP REFER are not included in this value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `Price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g., `USD`, `EUR`, `JPY`). Always capitalized for calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "queue_time": {
          "description": "The wait time in milliseconds before the call is placed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify this Call resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "start_time": {
          "description": "The start time of the call, given as UTC in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format. Empty if the call has not yet been dialed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CallEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subresource_uris": {
          "description": "A list of subresources available to this call, identified by their URIs relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "to": {
          "description": "The phone number, SIP address, Client identifier or SIM SID that received this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`. SIM SIDs are formatted as `sim:sid`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "to_formatted": {
          "description": "The phone number, SIP address or Client identifier that received this call. Formatted for display. Non-North American phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +442071838750).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "trunk_sid": {
          "description": "The unique identifier of the trunk resource that was used for this call. The field is empty if the call was not made using a SIP trunk or if the call is not terminated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of this resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountCallCallEvent": {
      "fields": {
        "request": {
          "description": "Contains a dictionary representing the request of the call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "response": {
          "description": "Contains a dictionary representing the call response, including a list of the call events.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        }
      }
    },
    "ApiV2010AccountCallCallNotification": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the Call Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Call Notification resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "error_code": {
          "description": "A unique error code for the error condition that is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "log": {
          "description": "An integer log level that corresponds to the type of notification: `0` is ERROR, `1` is WARNING.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "message_date": {
          "description": "The date the notification was actually generated in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format. Message buffering can cause this value to differ from `date_created`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "message_text": {
          "description": "The text of the notification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "more_info": {
          "description": "The URL for more information about the error condition. This value is a page in our [Error Dictionary](https://www.twilio.com/docs/api/errors).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "request_method": {
          "description": "The HTTP method used to generate the notification. If the notification was generated during a phone call, this is the HTTP Method used to request the resource on your server. If the notification was generated by your use of our REST API, this is the HTTP method used to call the resource on our servers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountCallCallNotificationRequestMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "request_url": {
          "description": "The URL of the resource that generated the notification. If the notification was generated during a phone call, this is the URL of the resource on your server that caused the notification. If the notification was generated by your use of our REST API, this is the URL of the resource you called.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Call Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^NO[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountCallCallNotificationInstance": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the Call Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Call Notification resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "error_code": {
          "description": "A unique error code for the error condition that is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "log": {
          "description": "An integer log level that corresponds to the type of notification: `0` is ERROR, `1` is WARNING.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "message_date": {
          "description": "The date the notification was actually generated in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format. Message buffering can cause this value to differ from `date_created`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "message_text": {
          "description": "The text of the notification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "more_info": {
          "description": "The URL for more information about the error condition. This value is a page in our [Error Dictionary](https://www.twilio.com/docs/api/errors).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "request_method": {
          "description": "The HTTP method used to generate the notification. If the notification was generated during a phone call, this is the HTTP Method used to request the resource on your server. If the notification was generated by your use of our REST API, this is the HTTP method used to call the resource on our servers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountCallCallNotificationInstanceRequestMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "request_url": {
          "description": "The URL of the resource that generated the notification. If the notification was generated during a phone call, this is the URL of the resource on your server that caused the notification. If the notification was generated by your use of our REST API, this is the URL of the resource you called.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "request_variables": {
          "description": "The HTTP GET or POST variables we sent to your server. However, if the notification was generated by our REST API, this contains the HTTP POST or PUT variables you sent to our API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "response_body": {
          "description": "The HTTP body returned by your server.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "response_headers": {
          "description": "The HTTP headers returned by your server.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Call Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^NO[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountCallCallRecording": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to make the recording.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Recording resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "channels": {
          "description": "The number of channels in the final recording file.  Can be: `1`, or `2`. Separating a two leg call into two separate channels of the recording file is supported in [Dial](https://www.twilio.com/docs/voice/twiml/dial#attributes-record) and [Outbound Rest API](https://www.twilio.com/docs/voice/make-calls) record options.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "conference_sid": {
          "description": "The Conference SID that identifies the conference associated with the recording, if a conference recording.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CF[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "duration": {
          "description": "The length of the recording in seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "encryption_details": {
          "description": "How to decrypt the recording if it was encrypted using [Call Recording Encryption](https://www.twilio.com/docs/voice/tutorials/voice-recording-encryption) feature.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "error_code": {
          "description": "The error code that describes why the recording is `absent`. The error code is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors). This value is null if the recording `status` is not `absent`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "price": {
          "description": "The one-time cost of creating the recording in the `price_unit` currency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency used in the `price` property. Example: `USD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Recording resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "source": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CallRecordingEnumSource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_time": {
          "description": "The start time of the recording in GMT and in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CallRecordingEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "track": {
          "description": "The recorded track. Can be: `inbound`, `outbound`, or `both`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountCallPayments": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Payments resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Payments resource is associated with. This will refer to the call sid that is producing the payment card (credit/ACH) information thru DTMF.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "sid": {
          "description": "The SID of the Payments resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountCallRealtimeTranscription": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Transcription resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Transcription resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "name": {
          "description": "The user-specified name of this Transcription, if one was given when the Transcription was created. This may be used to stop the Transcription.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The SID of the Transcription resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^GT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RealtimeTranscriptionEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountCallSiprec": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Siprec resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Siprec resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "name": {
          "description": "The user-specified name of this Siprec, if one was given when the Siprec was created. This may be used to stop the Siprec.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The SID of the Siprec resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SiprecEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountCallStream": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Stream resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Stream resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "name": {
          "description": "The user-specified name of this Stream, if one was given when the Stream was created. This can be used to stop the Stream.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The SID of the Stream resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MZ[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StreamEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountCallUserDefinedMessage": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created User Defined Message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Message is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this User Defined Message was created, given in RFC 2822 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "sid": {
          "description": "The SID that uniquely identifies this User Defined Message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^KX[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ApiV2010AccountCallUserDefinedMessageSubscription": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Message Subscription is associated with. This refers to the Call SID that is producing the User Defined Messages.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this User Defined Message Subscription was created, given in RFC 2822 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "sid": {
          "description": "The SID that uniquely identifies this User Defined Message Subscription.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^ZY[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the User Defined Message Subscription Resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountConference": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Conference resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create this conference.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "call_sid_ending_conference": {
          "description": "The call SID that caused the conference to end.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in UTC that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in UTC that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "A string that you assigned to describe this conference room. Maximum length is 128 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reason_conference_ended": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConferenceEnumReasonConferenceEnded",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "description": "A string that represents the Twilio Region where the conference audio was mixed. May be `us1`, `ie1`,  `de1`, `sg1`, `br1`, `au1`, and `jp1`. Basic conference audio will always be mixed in `us1`. Global Conference audio will be mixed nearest to the majority of participants.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique, Twilio-provided string used to identify this Conference resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CF[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConferenceEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of this resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountConferenceConferenceRecording": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the recording.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Conference Recording resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "channels": {
          "description": "The number of channels in the final recording file.  Can be: `1`, or `2`. Separating a two leg call into two separate channels of the recording file is supported in [Dial](https://www.twilio.com/docs/voice/twiml/dial#attributes-record) and [Outbound Rest API](https://www.twilio.com/docs/voice/make-calls) record options.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "conference_sid": {
          "description": "The Conference SID that identifies the conference associated with the recording.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CF[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "duration": {
          "description": "The length of the recording in seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "encryption_details": {
          "description": "How to decrypt the recording if it was encrypted using [Call Recording Encryption](https://www.twilio.com/docs/voice/tutorials/voice-recording-encryption) feature.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "error_code": {
          "description": "The error code that describes why the recording is `absent`. The error code is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors). This value is null if the recording `status` is not `absent`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "price": {
          "description": "The one-time cost of creating the recording in the `price_unit` currency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "price_unit": {
          "description": "The currency used in the `price` property. Example: `USD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Conference Recording resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "source": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConferenceRecordingEnumSource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_time": {
          "description": "The start time of the recording in GMT and in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConferenceRecordingEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountConferenceParticipant": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Participant resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "call_sid_to_coach": {
          "description": "The SID of the participant who is being `coached`. The participant being coached is the only participant who can hear the participant who is `coaching`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "coaching": {
          "description": "Whether the participant is coaching another call. Can be: `true` or `false`. If not present, defaults to `false` unless `call_sid_to_coach` is defined. If `true`, `call_sid_to_coach` must be defined.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "conference_sid": {
          "description": "The SID of the conference the participant is in.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CF[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "end_conference_on_exit": {
          "description": "Whether the conference ends when the participant leaves. Can be: `true` or `false` and the default is `false`. If `true`, the conference ends and all other participants drop out when the participant leaves.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "hold": {
          "description": "Whether the participant is on hold. Can be `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "label": {
          "description": "The user-specified label of this participant, if one was given when the participant was created. This may be used to fetch, update or delete the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "muted": {
          "description": "Whether the participant is muted. Can be `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "queue_time": {
          "description": "The wait time in milliseconds before participant's call is placed. Only available in the response to a create participant request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_conference_on_enter": {
          "description": "Whether the conference starts when the participant joins the conference, if it has not already started. Can be: `true` or `false` and the default is `true`. If `false` and the conference has not started, the participant is muted and hears background music until another participant starts the conference.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ParticipantEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountConnectApp": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "authorize_redirect_url": {
          "description": "The URL we redirect the user to after we authenticate the user and obtain authorization to access the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "company_name": {
          "description": "The company name set for the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "deauthorize_callback_method": {
          "description": "The HTTP method we use to call `deauthorize_callback_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountConnectAppDeauthorizeCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "deauthorize_callback_url": {
          "description": "The URL we call using the `deauthorize_callback_method` to de-authorize the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "description": {
          "description": "The description of the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "homepage_url": {
          "description": "The public URL where users can obtain more information about this Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "permissions": {
          "description": "The set of permissions that your ConnectApp requests.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConnectAppEnumPermission",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the ConnectApp resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumber": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this IncomingPhoneNumber resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "address_requirements": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberEnumAddressRequirement",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_sid": {
          "description": "The SID of the Address resource associated with the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to start a new TwiML session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "bundle_sid": {
          "description": "The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "emergency_address_sid": {
          "description": "The SID of the emergency address configuration that we use for emergency calling from this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "emergency_address_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberEnumEmergencyAddressStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "emergency_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "identity_sid": {
          "description": "The SID of the Identity resource that we associate with the phone number. Some regions require an Identity to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "origin": {
          "description": "The phone number's origin. `twilio` identifies Twilio-owned phone numbers and `hosted` identifies hosted phone numbers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify this IncomingPhoneNumber resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_application_sid": {
          "description": "The SID of the application that handles SMS messages sent to the phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_fallback_method": {
          "description": "The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberSmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_fallback_url": {
          "description": "The URL that we call when an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sms_method": {
          "description": "The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberSmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_url": {
          "description": "The URL we call when the phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status_callback": {
          "description": "The URL we call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status_callback_method": {
          "description": "The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "trunk_sid": {
          "description": "The SID of the Trunk that handles calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_application_sid": {
          "description": "The SID of the application that handles calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "voice_caller_id_lookup": {
          "description": "Whether we look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice_fallback_method": {
          "description": "The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberVoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_fallback_url": {
          "description": "The URL that we call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_method": {
          "description": "The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberVoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_receive_mode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberEnumVoiceReceiveMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_url": {
          "description": "The URL we call when the phone number receives a call. The `voice_url` will not be used if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumberCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberAssignedAddOn": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "configuration": {
          "description": "A JSON string that represents the current configuration of this Add-on installation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "description": {
          "description": "A short description of the functionality that the Add-on provides.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_sid": {
          "description": "The SID of the Phone Number to which the Add-on is assigned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their relative URIs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "assigned_add_on_sid": {
          "description": "The SID that uniquely identifies the assigned Add-on installation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "enabled": {
          "description": "Whether the Extension will be invoked.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "product_name": {
          "description": "A string that you assigned to describe the Product this Extension is used within.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_sid": {
          "description": "The SID of the Phone Number to which the Add-on is assigned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XF[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocal": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "address_requirements": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberLocalEnumAddressRequirement",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_sid": {
          "description": "The SID of the Address resource associated with the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to start a new TwiML session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "bundle_sid": {
          "description": "The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "emergency_address_sid": {
          "description": "The SID of the emergency address configuration that we use for emergency calling from this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "emergency_address_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberLocalEnumEmergencyAddressStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "emergency_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberLocalEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "identity_sid": {
          "description": "The SID of the Identity resource that we associate with the phone number. Some regions require an Identity to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "origin": {
          "description": "The phone number's origin. `twilio` identifies Twilio-owned phone numbers and `hosted` identifies hosted phone numbers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_application_sid": {
          "description": "The SID of the application that handles SMS messages sent to the phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_fallback_method": {
          "description": "The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalSmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_fallback_url": {
          "description": "The URL that we call when an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sms_method": {
          "description": "The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalSmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_url": {
          "description": "The URL we call when the phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status_callback": {
          "description": "The URL we call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status_callback_method": {
          "description": "The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "trunk_sid": {
          "description": "The SID of the Trunk that handles calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_application_sid": {
          "description": "The SID of the application that handles calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "voice_caller_id_lookup": {
          "description": "Whether we look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice_fallback_method": {
          "description": "The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalVoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_fallback_url": {
          "description": "The URL that we call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_method": {
          "description": "The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalVoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_receive_mode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberLocalEnumVoiceReceiveMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_url": {
          "description": "The URL we call when this phone number receives a call. The `voice_url` will not be used if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobile": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "address_requirements": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberMobileEnumAddressRequirement",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_sid": {
          "description": "The SID of the Address resource associated with the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to start a new TwiML session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "bundle_sid": {
          "description": "The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "emergency_address_sid": {
          "description": "The SID of the emergency address configuration that we use for emergency calling from this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "emergency_address_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberMobileEnumEmergencyAddressStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "emergency_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberMobileEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "identity_sid": {
          "description": "The SID of the Identity resource that we associate with the phone number. Some regions require an Identity to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "origin": {
          "description": "The phone number's origin. `twilio` identifies Twilio-owned phone numbers and `hosted` identifies hosted phone numbers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_application_sid": {
          "description": "The SID of the application that handles SMS messages sent to the phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_fallback_method": {
          "description": "The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileSmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_fallback_url": {
          "description": "The URL that we call when an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sms_method": {
          "description": "The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileSmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_url": {
          "description": "The URL we call when the phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status_callback": {
          "description": "The URL we call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status_callback_method": {
          "description": "The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "trunk_sid": {
          "description": "The SID of the Trunk that handles calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_application_sid": {
          "description": "The SID of the application that handles calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "voice_caller_id_lookup": {
          "description": "Whether we look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice_fallback_method": {
          "description": "The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileVoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_fallback_url": {
          "description": "The URL that we call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_method": {
          "description": "The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileVoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_receive_mode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberMobileEnumVoiceReceiveMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_url": {
          "description": "The URL we call when the phone number receives a call. The `voice_url` will not be used if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFree": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "address_requirements": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberTollFreeEnumAddressRequirement",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_sid": {
          "description": "The SID of the Address resource associated with the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to start a new TwiML session.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "beta": {
          "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "bundle_sid": {
          "description": "The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "capabilities": {
          "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeCapabilities",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "phone-number-capabilities"
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "emergency_address_sid": {
          "description": "The SID of the emergency address configuration that we use for emergency calling from this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "emergency_address_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberTollFreeEnumEmergencyAddressStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "emergency_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberTollFreeEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "identity_sid": {
          "description": "The SID of the Identity resource that we associate with the phone number. Some regions require an Identity to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "origin": {
          "description": "The phone number's origin. `twilio` identifies Twilio-owned phone numbers and `hosted` identifies hosted phone numbers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_application_sid": {
          "description": "The SID of the application that handles SMS messages sent to the phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_fallback_method": {
          "description": "The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeSmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_fallback_url": {
          "description": "The URL that we call when an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sms_method": {
          "description": "The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeSmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_url": {
          "description": "The URL we call when the phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status_callback": {
          "description": "The URL we call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status_callback_method": {
          "description": "The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "trunk_sid": {
          "description": "The SID of the Trunk that handles calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_application_sid": {
          "description": "The SID of the application that handles calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "voice_caller_id_lookup": {
          "description": "Whether we look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice_fallback_method": {
          "description": "The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeVoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_fallback_url": {
          "description": "The URL that we call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_method": {
          "description": "The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeVoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_receive_mode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberTollFreeEnumVoiceReceiveMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_url": {
          "description": "The URL we call when the phone number receives a call. The `voice_url` will not be used if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeCapabilities": {
      "description": "The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.",
      "fields": {
        "fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "mms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sms": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "voice": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ApiV2010AccountKey": {
      "fields": {
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Key resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ApiV2010AccountMessage": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to process the Message",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "body": {
          "description": "The text content of the message",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message resource was created",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_sent": {
          "description": "The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message was sent. For an outgoing message, this is when Twilio sent the message. For an incoming message, this is when Twilio sent the HTTP request to your incoming message webhook URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message resource was last updated",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "direction": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessageEnumDirection",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "error_code": {
          "description": "The [error code](https://www.twilio.com/docs/api/errors) returned if the Message `status` is `failed` or `undelivered`. If no error was encountered, the value is `null`. The value returned in this field for a specific error cause is subject to change as Twilio improves errors. Users should not use the `error_code` and `error_message` fields programmatically.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "error_message": {
          "description": "The description of the `error_code` if the Message `status` is `failed` or `undelivered`. If no error was encountered, the value is `null`. The value returned in this field for a specific error cause is subject to change as Twilio improves errors. Users should not use the `error_code` and `error_message` fields programmatically.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "from": {
          "description": "The sender's phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or  [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., `whatsapp:+15554449999`). For incoming messages, this is the number or channel address of the sender. For outgoing messages, this value is a Twilio phone number, alphanumeric sender ID, short code, or channel address from which the message is sent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "messaging_service_sid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) associated with the Message resource. A unique default value is assigned if a Messaging Service is not used.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "num_media": {
          "description": "The number of media files associated with the Message resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "num_segments": {
          "description": "The number of segments that make up the complete message. SMS message bodies that exceed the [character limit](https://www.twilio.com/docs/glossary/what-sms-character-limit) are segmented and charged as multiple messages. Note: For messages sent via a Messaging Service, `num_segments` is initially `0`, since a sender hasn't yet been assigned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "price": {
          "description": "The amount billed for the message in the currency specified by `price_unit`. The `price` is populated after the message has been sent/received, and may not be immediately availalble. View the [Pricing page](https://www.twilio.com/en-us/pricing) for more details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "sid": {
          "description": "The unique, Twilio-provided string that identifies the Message resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessageEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs relative to `https://api.twilio.com`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "to": {
          "description": "The recipient's phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format) or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g. `whatsapp:+15552229999`)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the Message resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountMessageMedia": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with this Media resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "content_type": {
          "description": "The default [MIME type](https://en.wikipedia.org/wiki/Internet_media_type) of the media, for example `image/jpeg`, `image/png`, or `image/gif`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when this Media resource was created, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when this Media resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "parent_sid": {
          "description": "The SID of the Message resource that is associated with this Media resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that identifies this Media resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^ME[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of this Media resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountMessageMessageFeedback": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with this MessageFeedback resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when this MessageFeedback resource was created, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when this MessageFeedback resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "message_sid": {
          "description": "The SID of the Message resource associated with this MessageFeedback resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "outcome": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessageFeedbackEnumOutcome",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountNewKey": {
      "fields": {
        "date_created": {
          "description": "The date and time in GMT that the API Key was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the new API Key was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "secret": {
          "description": "The secret your application uses to sign Access Tokens and to authenticate to the REST API (you will use this as the basic-auth `password`).  **Note that for security reasons, this field is ONLY returned when the API Key is first created.**",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the NewKey resource. You will use this as the basic-auth `user` when authenticating to the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ApiV2010AccountNewSigningKey": {
      "fields": {
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "secret": {
          "description": "The secret your application uses to sign Access Tokens and to authenticate to the REST API (you will use this as the basic-auth `password`).  **Note that for security reasons, this field is ONLY returned when the API Key is first created.**",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the NewSigningKey resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ApiV2010AccountNotification": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to generate the notification. Can be empty for events that don't have a specific API version, such as incoming phone calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Notification resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "error_code": {
          "description": "A unique error code for the error condition that is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "log": {
          "description": "An integer log level that corresponds to the type of notification: `0` is ERROR, `1` is WARNING.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "message_date": {
          "description": "The date the notification was actually generated in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format. Message buffering can cause this value to differ from `date_created`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "message_text": {
          "description": "The text of the notification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "more_info": {
          "description": "The URL for more information about the error condition. This value is a page in our [Error Dictionary](https://www.twilio.com/docs/api/errors).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "request_method": {
          "description": "The HTTP method used to generate the notification. If the notification was generated during a phone call, this is the HTTP Method used to request the resource on your server. If the notification was generated by your use of our REST API, this is the HTTP method used to call the resource on our servers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountNotificationRequestMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "request_url": {
          "description": "The URL of the resource that generated the notification. If the notification was generated during a phone call, this is the URL of the resource on your server that caused the notification. If the notification was generated by your use of our REST API, this is the URL of the resource you called.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^NO[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountNotificationInstance": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to generate the notification. Can be empty for events that don't have a specific API version, such as incoming phone calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Notification resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "error_code": {
          "description": "A unique error code for the error condition that is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "log": {
          "description": "An integer log level that corresponds to the type of notification: `0` is ERROR, `1` is WARNING.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "message_date": {
          "description": "The date the notification was actually generated in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format. Message buffering can cause this value to differ from `date_created`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "message_text": {
          "description": "The text of the notification.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "more_info": {
          "description": "The URL for more information about the error condition. This value is a page in our [Error Dictionary](https://www.twilio.com/docs/api/errors).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "request_method": {
          "description": "The HTTP method used to generate the notification. If the notification was generated during a phone call, this is the HTTP Method used to request the resource on your server. If the notification was generated by your use of our REST API, this is the HTTP method used to call the resource on our servers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountNotificationInstanceRequestMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "request_url": {
          "description": "The URL of the resource that generated the notification. If the notification was generated during a phone call, this is the URL of the resource on your server that caused the notification. If the notification was generated by your use of our REST API, this is the URL of the resource you called.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "request_variables": {
          "description": "The HTTP GET or POST variables we sent to your server. However, if the notification was generated by our REST API, this contains the HTTP POST or PUT variables you sent to our API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "response_body": {
          "description": "The HTTP body returned by your server.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "response_headers": {
          "description": "The HTTP headers returned by your server.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Notification resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^NO[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountOutgoingCallerId": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the OutgoingCallerId resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountQueue": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Queue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "average_wait_time": {
          "description": "The average wait time in seconds of the members in this queue. This is calculated at the time of the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "current_size": {
          "description": "The number of calls currently in the queue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "A string that you assigned to describe this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "max_size": {
          "description": "The maximum number of calls that can be in the queue. The default is 1000 and the maximum is 5000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify this Queue resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^QU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of this resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountQueueMember": {
      "fields": {
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Member resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_enqueued": {
          "description": "The date that the member was enqueued, given in RFC 2822 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "position": {
          "description": "This member's current position in the queue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "queue_sid": {
          "description": "The SID of the Queue the member is in.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^QU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "wait_time": {
          "description": "The number of seconds the member has been in the queue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "ApiV2010AccountRecording": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used during the recording.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Recording resource is associated with. This will always refer to the parent leg of a two-leg call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "channels": {
          "description": "The number of channels in the final recording file. Can be: `1` or `2`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "conference_sid": {
          "description": "The Conference SID that identifies the conference associated with the recording, if a conference recording.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CF[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "duration": {
          "description": "The length of the recording in seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "encryption_details": {
          "description": "How to decrypt the recording if it was encrypted using [Call Recording Encryption](https://www.twilio.com/docs/voice/tutorials/voice-recording-encryption) feature.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "error_code": {
          "description": "The error code that describes why the recording is `absent`. The error code is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors). This value is null if the recording `status` is not `absent`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "media_url": {
          "description": "The URL of the media file associated with this recording resource. When stored externally, this is the full URL location of the media file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "price": {
          "description": "The one-time cost of creating the recording in the `price_unit` currency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "price_unit": {
          "description": "The currency used in the `price` property. Example: `USD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Recording resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "source": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RecordingEnumSource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_time": {
          "description": "The start time of the recording in GMT and in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RecordingEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their relative URIs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountRecordingRecordingAddOnResult": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "add_on_configuration_sid": {
          "description": "The SID of the Add-on configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "add_on_sid": {
          "description": "The SID of the Add-on to which the result belongs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_completed": {
          "description": "The date and time in GMT that the result was completed specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "reference_sid": {
          "description": "The SID of the recording to which the AddOnResult resource belongs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Recording AddOnResult resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RecordingAddOnResultEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their relative URIs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        }
      }
    },
    "ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "add_on_configuration_sid": {
          "description": "The SID of the Add-on configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "add_on_result_sid": {
          "description": "The SID of the AddOnResult to which the payload belongs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "add_on_sid": {
          "description": "The SID of the Add-on to which the result belongs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "content_type": {
          "description": "The MIME type of the payload.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "label": {
          "description": "The string provided by the vendor that describes the payload.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reference_sid": {
          "description": "The SID of the recording to which the AddOnResult resource that contains the payload belongs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Recording AddOnResult Payload resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their relative URIs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        }
      }
    },
    "ApiV2010AccountRecordingRecordingTranscription": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the transcription.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "duration": {
          "description": "The duration of the transcribed audio in seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "price": {
          "description": "The charge for the transcript in the currency associated with the account. This value is populated after the transcript is complete so it may not be available immediately.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "recording_sid": {
          "description": "The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) from which the transcription was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Transcription resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RecordingTranscriptionEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "transcription_text": {
          "description": "The text content of the transcription.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "description": "The transcription type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountShortCode": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this ShortCode resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to start a new TwiML session when an SMS message is sent to this short code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "A string that you assigned to describe this resource. By default, the `FriendlyName` is the short code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "short_code": {
          "description": "The short code. e.g., 894546.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify this ShortCode resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_fallback_method": {
          "description": "The HTTP method we use to call the `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountShortCodeSmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_fallback_url": {
          "description": "The URL that we call if an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sms_method": {
          "description": "The HTTP method we use to call the `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountShortCodeSmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_url": {
          "description": "The URL we call when receiving an incoming SMS message to this short code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "uri": {
          "description": "The URI of this resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountSigningKey": {
      "fields": {
        "date_created": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ApiV2010AccountSipSipCredentialList": {
      "fields": {
        "account_sid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) that owns this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "A human readable descriptive text that describes the CredentialList, up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "subresource_uris": {
          "description": "A list of credentials associated with this credential list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI for this resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountSipSipCredentialListSipCredential": {
      "fields": {
        "account_sid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "credential_list_sid": {
          "description": "The unique id that identifies the credential list that includes this credential.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI for this resource, relative to `https://api.twilio.com`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "username": {
          "description": "The username for this credential.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountSipSipDomain": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to process the call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "auth_type": {
          "description": "The types of authentication you have mapped to your domain. Can be: `IP_ACL` and `CREDENTIAL_LIST`. If you have both defined for your domain, both will be returned in a comma delimited string. If `auth_type` is not defined, the domain will not be able to receive any traffic.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "byoc_trunk_sid": {
          "description": "The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BY[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "domain_name": {
          "description": "The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \"-\" and must end with `sip.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "emergency_caller_sid": {
          "description": "Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "emergency_calling_enabled": {
          "description": "Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "secure": {
          "description": "Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the SipDomain resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sip_registration": {
          "description": "Whether to allow SIP Endpoints to register with the domain to receive calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "subresource_uris": {
          "description": "A list of mapping resources associated with the SIP Domain resource identified by their relative URIs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "voice_fallback_method": {
          "description": "The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountSipSipDomainVoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_fallback_url": {
          "description": "The URL that we call when an error occurs while retrieving or executing the TwiML requested from `voice_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_method": {
          "description": "The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountSipSipDomainVoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_status_callback_method": {
          "description": "The HTTP method we use to call `voice_status_callback_url`. Either `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountSipSipDomainVoiceStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_status_callback_url": {
          "description": "The URL that we call to pass status parameters (such as call ended) to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_url": {
          "description": "The URL we call using the `voice_method` when the domain receives a call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ApiV2010AccountSipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the CredentialListMapping resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ApiV2010AccountSipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the IpAccessControlListMapping resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ApiV2010AccountSipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the CredentialListMapping resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ApiV2010AccountSipSipDomainSipCredentialListMapping": {
      "fields": {
        "account_sid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "domain_sid": {
          "description": "The unique string that is created to identify the SipDomain resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "friendly_name": {
          "description": "A human readable descriptive text for this resource, up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI for this resource, relative to `https://api.twilio.com`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountSipSipDomainSipIpAccessControlListMapping": {
      "fields": {
        "account_sid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "domain_sid": {
          "description": "The unique string that is created to identify the SipDomain resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^SD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "friendly_name": {
          "description": "A human readable descriptive text for this resource, up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI for this resource, relative to `https://api.twilio.com`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountSipSipIpAccessControlList": {
      "fields": {
        "account_sid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) that owns this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "A human readable descriptive text, up to 255 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "subresource_uris": {
          "description": "A list of the IpAddress resources associated with this IP access control list resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI for this resource, relative to `https://api.twilio.com`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountSipSipIpAccessControlListSipIpAddress": {
      "fields": {
        "account_sid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "cidr_prefix_length": {
          "description": "An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "date_created": {
          "description": "The date that this resource was created, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "A human readable descriptive text for this resource, up to 255 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ip_access_control_list_sid": {
          "description": "The unique id of the IpAccessControlList resource that includes this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ip_address": {
          "description": "An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "uri": {
          "description": "The URI for this resource, relative to `https://api.twilio.com`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountToken": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Token resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "ice_servers": {
          "description": "An array representing the ephemeral credentials and the STUN and TURN server URIs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountTokenIceServers",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "format": "ice-server"
            }
          }
        },
        "password": {
          "description": "The temporary password that the username will use when authenticating with Twilio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ttl": {
          "description": "The duration in seconds for which the username and password are valid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "username": {
          "description": "The temporary username that uniquely identifies a Token.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountTokenIceServers": {
      "fields": {
        "credential": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "urls": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "username": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountTranscription": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the transcription.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "duration": {
          "description": "The duration of the transcribed audio in seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "price": {
          "description": "The charge for the transcript in the currency associated with the account. This value is populated after the transcript is complete so it may not be available immediately.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "recording_sid": {
          "description": "The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) from which the transcription was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the Transcription resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TranscriptionEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "transcription_text": {
          "description": "The text content of the transcription.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "description": "The transcription type. Can only be: `fast`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageRecord": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "as_of": {
          "description": "Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "description": "The number of usage events, such as the number of calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count_unit": {
          "description": "The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "A plain-language description of the usage category.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_date": {
          "description": "The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "price": {
          "description": "The total price of the usage in the currency specified in `price_unit` and associated with the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "start_date": {
          "description": "The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage": {
          "description": "The amount used to bill usage and measured in units described in `usage_unit`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_unit": {
          "description": "The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageRecordUsageRecordAllTime": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "as_of": {
          "description": "Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordAllTimeEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "description": "The number of usage events, such as the number of calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count_unit": {
          "description": "The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "A plain-language description of the usage category.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_date": {
          "description": "The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "price": {
          "description": "The total price of the usage in the currency specified in `price_unit` and associated with the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "start_date": {
          "description": "The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage": {
          "description": "The amount used to bill usage and measured in units described in `usage_unit`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_unit": {
          "description": "The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageRecordUsageRecordDaily": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "as_of": {
          "description": "Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordDailyEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "description": "The number of usage events, such as the number of calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count_unit": {
          "description": "The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "A plain-language description of the usage category.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_date": {
          "description": "The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "price": {
          "description": "The total price of the usage in the currency specified in `price_unit` and associated with the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "start_date": {
          "description": "The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage": {
          "description": "The amount used to bill usage and measured in units described in `usage_unit`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_unit": {
          "description": "The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageRecordUsageRecordLastMonth": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "as_of": {
          "description": "Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordLastMonthEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "description": "The number of usage events, such as the number of calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count_unit": {
          "description": "The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "A plain-language description of the usage category.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_date": {
          "description": "The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "price": {
          "description": "The total price of the usage in the currency specified in `price_unit` and associated with the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "start_date": {
          "description": "The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage": {
          "description": "The amount used to bill usage and measured in units described in `usage_unit`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_unit": {
          "description": "The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageRecordUsageRecordMonthly": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "as_of": {
          "description": "Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordMonthlyEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "description": "The number of usage events, such as the number of calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count_unit": {
          "description": "The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "A plain-language description of the usage category.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_date": {
          "description": "The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "price": {
          "description": "The total price of the usage in the currency specified in `price_unit` and associated with the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "start_date": {
          "description": "The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage": {
          "description": "The amount used to bill usage and measured in units described in `usage_unit`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_unit": {
          "description": "The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageRecordUsageRecordThisMonth": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "as_of": {
          "description": "Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordThisMonthEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "description": "The number of usage events, such as the number of calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count_unit": {
          "description": "The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "A plain-language description of the usage category.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_date": {
          "description": "The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "price": {
          "description": "The total price of the usage in the currency specified in `price_unit` and associated with the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "start_date": {
          "description": "The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage": {
          "description": "The amount used to bill usage and measured in units described in `usage_unit`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_unit": {
          "description": "The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageRecordUsageRecordToday": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "as_of": {
          "description": "Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordTodayEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "description": "The number of usage events, such as the number of calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count_unit": {
          "description": "The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "A plain-language description of the usage category.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_date": {
          "description": "The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "price": {
          "description": "The total price of the usage in the currency specified in `price_unit` and associated with the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "start_date": {
          "description": "The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage": {
          "description": "The amount used to bill usage and measured in units described in `usage_unit`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_unit": {
          "description": "The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageRecordUsageRecordYearly": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "as_of": {
          "description": "Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordYearlyEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "description": "The number of usage events, such as the number of calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count_unit": {
          "description": "The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "A plain-language description of the usage category.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_date": {
          "description": "The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "price": {
          "description": "The total price of the usage in the currency specified in `price_unit` and associated with the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "start_date": {
          "description": "The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage": {
          "description": "The amount used to bill usage and measured in units described in `usage_unit`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_unit": {
          "description": "The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageRecordUsageRecordYesterday": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "as_of": {
          "description": "Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageRecordYesterdayEnumCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "description": "The number of usage events, such as the number of calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count_unit": {
          "description": "The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "A plain-language description of the usage category.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_date": {
          "description": "The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "price": {
          "description": "The total price of the usage in the currency specified in `price_unit` and associated with the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "price_unit": {
          "description": "The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "currency"
          }
        },
        "start_date": {
          "description": "The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "subresource_uris": {
          "description": "A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage": {
          "description": "The amount used to bill usage and measured in units described in `usage_unit`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_unit": {
          "description": "The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountUsageUsageTrigger": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the trigger monitors.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "api_version": {
          "description": "The API version used to create the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "callback_method": {
          "description": "The HTTP method we use to call `callback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApiV2010AccountUsageUsageTriggerCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "callback_url": {
          "description": "The URL we call using the `callback_method` when the trigger fires.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "current_value": {
          "description": "The current value of the field the trigger is watching.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_fired": {
          "description": "The date and time in GMT that the trigger was last fired specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time-rfc-2822"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the trigger.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "recurring": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageTriggerEnumRecurring",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that that we created to identify the UsageTrigger resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^UT[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "trigger_by": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageTriggerEnumTriggerField",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "trigger_value": {
          "description": "The value at which the trigger will fire.  Must be a positive, numeric value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "The URI of the resource, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_category": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageTriggerEnumUsageCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "usage_record_uri": {
          "description": "The URI of the [UsageRecord](https://www.twilio.com/docs/usage/api/usage-record) resource this trigger watches, relative to `https://api.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ApiV2010AccountValidationRequest": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for the Caller ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "call_sid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Caller ID is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "phone_number": {
          "description": "The phone number to verify in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "validation_code": {
          "description": "The 6 digit validation code that someone must enter to validate the Caller ID  when `phone_number` is called.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateAccountBody": {
      "fields": {
        "FriendlyName": {
          "description": "A human readable description of the account to create, defaults to `SubAccount Created at {YYYY-MM-DD HH:MM meridian}`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateAddressBody": {
      "fields": {
        "AutoCorrectAddress": {
          "description": "Whether we should automatically correct the address. Can be: `true` or `false` and the default is `true`. If empty or `true`, we will correct the address you provide if necessary. If `false`, we won't alter the address you provide.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "City": {
          "description": "The city of the new address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CustomerName": {
          "description": "The name to associate with the new address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "EmergencyEnabled": {
          "description": "Whether to enable emergency calling on the new address. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the new address. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IsoCountry": {
          "description": "The ISO country code of the new address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "iso-country-code"
          }
        },
        "PostalCode": {
          "description": "The postal code of the new address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Region": {
          "description": "The state or region of the new address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Street": {
          "description": "The number and street address of the new address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StreetSecondary": {
          "description": "The additional number and street address of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateApplicationBody": {
      "fields": {
        "ApiVersion": {
          "description": "The API version to use to start a new TwiML session. Can be: `2010-04-01` or `2008-08-01`. The default value is the account's default API version.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the new application. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessageStatusCallback": {
          "description": "The URL we should call using a POST method to send message status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "PublicApplicationConnectEnabled": {
          "description": "Whether to allow other Twilio accounts to dial this applicaton using Dial verb. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SmsFallbackMethod": {
          "description": "The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsFallbackUrl": {
          "description": "The URL that we should call when an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsMethod": {
          "description": "The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsStatusCallback": {
          "description": "The URL we should call using a POST method to send status information about SMS messages sent by the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsUrl": {
          "description": "The URL we should call when the phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceCallerIdLookup": {
          "description": "Whether we should look up the caller's caller-ID name from the CNAM database (additional charges apply). Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceUrl": {
          "description": "The URL we should call when the phone number assigned to this application receives a call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "CreateCallBody": {
      "fields": {
        "ApplicationSid": {
          "description": "The SID of the Application resource that will handle the call, if the call will be handled by an application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "AsyncAmd": {
          "description": "Select whether to perform answering machine detection in the background. Default, blocks the execution of the call until Answering Machine Detection is completed. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "AsyncAmdStatusCallback": {
          "description": "The URL that we should call using the `async_amd_status_callback_method` to notify customer application whether the call was answered by human, machine or fax.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "AsyncAmdStatusCallbackMethod": {
          "description": "The HTTP method we should use when calling the `async_amd_status_callback` URL. Can be: `GET` or `POST` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401AsyncAmdStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "Byoc": {
          "description": "The SID of a BYOC (Bring Your Own Carrier) trunk to route this call with. Note that `byoc` is only meaningful when `to` is a phone number; it will otherwise be ignored. (Beta)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BY[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "CallReason": {
          "description": "The Reason for the outgoing call. Use it to specify the purpose of the call that is presented on the called party's phone. (Branded Calls Beta)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallToken": {
          "description": "A token string needed to invoke a forwarded call. A call_token is generated when an incoming call is received on a Twilio number. Pass an incoming call's call_token value to a forwarded call via the call_token parameter when creating a new call. A forwarded call should bear the same CallerID of the original incoming call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallerId": {
          "description": "The phone number, SIP address, or Client identifier that made this call. Phone numbers are in [E.164 format](https://wwnw.twilio.com/docs/glossary/what-e164) (e.g., +16175551212). SIP addresses are formatted as `name@company.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FallbackMethod": {
          "description": "The HTTP method that we should use to request the `fallback_url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401FallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "FallbackUrl": {
          "description": "The URL that we call using the `fallback_method` if an error occurs when requesting or executing the TwiML at `url`. If an `application_sid` parameter is present, this parameter is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "From": {
          "description": "The phone number or client identifier to use as the caller id. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `From` must also be a phone number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "endpoint"
          }
        },
        "MachineDetection": {
          "description": "Whether to detect if a human, answering machine, or fax has picked up the call. Can be: `Enable` or `DetectMessageEnd`. Use `Enable` if you would like us to return `AnsweredBy` as soon as the called party is identified. Use `DetectMessageEnd`, if you would like to leave a message on an answering machine. If `send_digits` is provided, this parameter is ignored. For more information, see [Answering Machine Detection](https://www.twilio.com/docs/voice/answering-machine-detection).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MachineDetectionSilenceTimeout": {
          "description": "The number of milliseconds of initial silence after which an `unknown` AnsweredBy result will be returned. Possible Values: 2000-10000. Default: 5000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "MachineDetectionSpeechEndThreshold": {
          "description": "The number of milliseconds of silence after speech activity at which point the speech activity is considered complete. Possible Values: 500-5000. Default: 1200.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "MachineDetectionSpeechThreshold": {
          "description": "The number of milliseconds that is used as the measuring stick for the length of the speech activity, where durations lower than this value will be interpreted as a human and longer than this value as a machine. Possible Values: 1000-6000. Default: 2400.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "MachineDetectionTimeout": {
          "description": "The number of seconds that we should attempt to detect an answering machine before timing out and sending a voice request with `AnsweredBy` of `unknown`. The default timeout is 30 seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Method": {
          "description": "The HTTP method we should use when calling the `url` parameter's value. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401Method",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "Record": {
          "description": "Whether to record the call. Can be `true` to record the phone call, or `false` to not. The default is `false`. The `recording_url` is sent to the `status_callback` URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "RecordingChannels": {
          "description": "The number of channels in the final recording. Can be: `mono` or `dual`. The default is `mono`. `mono` records both legs of the call in a single channel of the recording file. `dual` records each leg to a separate channel of the recording file. The first channel of a dual-channel recording contains the parent call and the second channel contains the child call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RecordingStatusCallback": {
          "description": "The URL that we call when the recording is available to be accessed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RecordingStatusCallbackEvent": {
          "description": "The recording status events that will trigger calls to the URL specified in `recording_status_callback`. Can be: `in-progress`, `completed` and `absent`. Defaults to `completed`. Separate  multiple values with a space.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "RecordingStatusCallbackMethod": {
          "description": "The HTTP method we should use when calling the `recording_status_callback` URL. Can be: `GET` or `POST` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401RecordingStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "RecordingTrack": {
          "description": "The audio track to record for the call. Can be: `inbound`, `outbound` or `both`. The default is `both`. `inbound` records the audio that is received by Twilio. `outbound` records the audio that is generated from Twilio. `both` records the audio that is received and generated by Twilio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SendDigits": {
          "description": "A string of keys to dial after connecting to the number, maximum of 32 digits. Valid digits in the string include: any digit (`0`-`9`), '`#`', '`*`' and '`w`', to insert a half second pause. For example, if you connected to a company phone number and wanted to pause for one second, and then dial extension 1234 followed by the pound key, the value of this parameter would be `ww1234#`. Remember to URL-encode this string, since the '`#`' character has special meaning in a URL. If both `SendDigits` and `MachineDetection` parameters are provided, then `MachineDetection` will be ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SipAuthPassword": {
          "description": "The password required to authenticate the user account specified in `sip_auth_username`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SipAuthUsername": {
          "description": "The username used to authenticate the caller making a SIP call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application. If no `status_callback_event` is specified, we will send the `completed` status. If an `application_sid` parameter is present, this parameter is ignored. URLs must contain a valid hostname (underscores are not permitted).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackEvent": {
          "description": "The call progress events that we will send to the `status_callback` URL. Can be: `initiated`, `ringing`, `answered`, and `completed`. If no event is specified, we send the `completed` status. If you want to receive multiple events, specify each one in a separate `status_callback_event` parameter. See the code sample for [monitoring call progress](https://www.twilio.com/docs/voice/api/call-resource?code-sample=code-create-a-call-resource-and-specify-a-statuscallbackevent&code-sdk-version=json). If an `application_sid` is present, this parameter is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use when calling the `status_callback` URL. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "TimeLimit": {
          "description": "The maximum duration of the call in seconds. Constraints depend on account and configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Timeout": {
          "description": "The integer number of seconds that we should allow the phone to ring before assuming there is no answer. The default is `60` seconds and the maximum is `600` seconds. For some call flows, we will add a 5-second buffer to the timeout value you provide. For this reason, a timeout value of 10 seconds could result in an actual timeout closer to 15 seconds. You can set this to a short time, such as `15` seconds, to hang up before reaching an answering machine or voicemail.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "To": {
          "description": "The phone number, SIP address, or client identifier to call.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "endpoint"
          }
        },
        "Trim": {
          "description": "Whether to trim any leading and trailing silence from the recording. Can be: `trim-silence` or `do-not-trim` and the default is `trim-silence`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Twiml": {
          "description": "TwiML instructions for the call Twilio will use without fetching Twiml from url parameter. If both `twiml` and `url` are provided then `twiml` parameter will be ignored. Max 4000 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "twiml"
          }
        },
        "Url": {
          "description": "The absolute URL that returns the TwiML instructions for the call. We will call this URL using the `method` when the call connects. For more information, see the [Url Parameter](https://www.twilio.com/docs/voice/make-calls#specify-a-url-parameter) section in [Making Calls](https://www.twilio.com/docs/voice/make-calls).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "CreateCallRecordingBody": {
      "fields": {
        "RecordingChannels": {
          "description": "The number of channels used in the recording. Can be: `mono` or `dual` and the default is `mono`. `mono` records all parties of the call into one channel. `dual` records each party of a 2-party call into separate channels.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RecordingStatusCallback": {
          "description": "The URL we should call using the `recording_status_callback_method` on each recording event specified in  `recording_status_callback_event`. For more information, see [RecordingStatusCallback parameters](https://www.twilio.com/docs/voice/api/recording#recordingstatuscallback).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "RecordingStatusCallbackEvent": {
          "description": "The recording status events on which we should call the `recording_status_callback` URL. Can be: `in-progress`, `completed` and `absent` and the default is `completed`. Separate multiple event values with a space.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "RecordingStatusCallbackMethod": {
          "description": "The HTTP method we should use to call `recording_status_callback`. Can be: `GET` or `POST` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401RecordingStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "RecordingTrack": {
          "description": "The audio track to record for the call. Can be: `inbound`, `outbound` or `both`. The default is `both`. `inbound` records the audio that is received by Twilio. `outbound` records the audio that is generated from Twilio. `both` records the audio that is received and generated by Twilio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Trim": {
          "description": "Whether to trim any leading and trailing silence in the recording. Can be: `trim-silence` or `do-not-trim` and the default is `do-not-trim`. `trim-silence` trims the silence from the beginning and end of the recording and `do-not-trim` does not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateIncomingPhoneNumberAssignedAddOnBody": {
      "fields": {
        "InstalledAddOnSid": {
          "description": "The SID that identifies the Add-on installation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^XE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "CreateIncomingPhoneNumberBody": {
      "fields": {
        "AddressSid": {
          "description": "The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ApiVersion": {
          "description": "The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "AreaCode": {
          "description": "The desired area code for your new incoming phone number. Can be any three-digit, US or Canada area code. We will provision an available phone number within this area code for you. **You must provide an `area_code` or a `phone_number`.** (US and Canada only).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BundleSid": {
          "description": "The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyAddressSid": {
          "description": "The SID of the emergency address configuration to use for emergency calling from the new phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyStatus": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the new phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IdentitySid": {
          "description": "The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "PhoneNumber": {
          "description": "The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "SmsApplicationSid": {
          "description": "The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "SmsFallbackMethod": {
          "description": "The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsFallbackUrl": {
          "description": "The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsMethod": {
          "description": "The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsUrl": {
          "description": "The URL we should call when the new phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "TrunkSid": {
          "description": "The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceApplicationSid": {
          "description": "The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceCallerIdLookup": {
          "description": "Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceReceiveMode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberEnumVoiceReceiveMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "VoiceUrl": {
          "description": "The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "CreateIncomingPhoneNumberLocalBody": {
      "fields": {
        "AddressSid": {
          "description": "The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ApiVersion": {
          "description": "The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BundleSid": {
          "description": "The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyAddressSid": {
          "description": "The SID of the emergency address configuration to use for emergency calling from the new phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyStatus": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberLocalEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IdentitySid": {
          "description": "The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "PhoneNumber": {
          "description": "The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "SmsApplicationSid": {
          "description": "The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "SmsFallbackMethod": {
          "description": "The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsFallbackUrl": {
          "description": "The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsMethod": {
          "description": "The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsUrl": {
          "description": "The URL we should call when the new phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "TrunkSid": {
          "description": "The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceApplicationSid": {
          "description": "The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceCallerIdLookup": {
          "description": "Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceReceiveMode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberLocalEnumVoiceReceiveMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "VoiceUrl": {
          "description": "The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "CreateIncomingPhoneNumberMobileBody": {
      "fields": {
        "AddressSid": {
          "description": "The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ApiVersion": {
          "description": "The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BundleSid": {
          "description": "The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyAddressSid": {
          "description": "The SID of the emergency address configuration to use for emergency calling from the new phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyStatus": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberMobileEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, the is a formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IdentitySid": {
          "description": "The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "PhoneNumber": {
          "description": "The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "SmsApplicationSid": {
          "description": "The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those of the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "SmsFallbackMethod": {
          "description": "The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsFallbackUrl": {
          "description": "The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsMethod": {
          "description": "The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsUrl": {
          "description": "The URL we should call when the new phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "TrunkSid": {
          "description": "The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceApplicationSid": {
          "description": "The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceCallerIdLookup": {
          "description": "Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceReceiveMode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberMobileEnumVoiceReceiveMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "VoiceUrl": {
          "description": "The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "CreateIncomingPhoneNumberTollFreeBody": {
      "fields": {
        "AddressSid": {
          "description": "The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ApiVersion": {
          "description": "The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BundleSid": {
          "description": "The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyAddressSid": {
          "description": "The SID of the emergency address configuration to use for emergency calling from the new phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyStatus": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberTollFreeEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IdentitySid": {
          "description": "The SID of the Identity resource that we should associate with the new phone number. Some regions require an Identity to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "PhoneNumber": {
          "description": "The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "SmsApplicationSid": {
          "description": "The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "SmsFallbackMethod": {
          "description": "The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsFallbackUrl": {
          "description": "The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsMethod": {
          "description": "The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsUrl": {
          "description": "The URL we should call when the new phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "TrunkSid": {
          "description": "The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceApplicationSid": {
          "description": "The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceCallerIdLookup": {
          "description": "Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceReceiveMode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberTollFreeEnumVoiceReceiveMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "VoiceUrl": {
          "description": "The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "CreateMessageBody": {
      "fields": {
        "AddressRetention": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessageEnumAddressRetention",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ApplicationSid": {
          "description": "The SID of the associated [TwiML Application](https://www.twilio.com/docs/usage/api/applications). [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url) are sent to the TwiML App's `message_status_callback` URL. Note that the `status_callback` parameter of a request takes priority over the `application_sid` parameter; if both are included `application_sid` is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Attempt": {
          "description": "Total number of attempts made (including this request) to send the message regardless of the provider used",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Body": {
          "description": "The text content of the outgoing message. Can be up to 1,600 characters in length. SMS only: If the `body` contains more than 160 [GSM-7](https://www.twilio.com/docs/glossary/what-is-gsm-7-character-encoding) characters (or 70 [UCS-2](https://www.twilio.com/docs/glossary/what-is-ucs-2-character-encoding) characters), the message is segmented and charged accordingly. For long `body` text, consider using the [send_as_mms parameter](https://www.twilio.com/blog/mms-for-long-text-messages).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ContentRetention": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessageEnumContentRetention",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ContentSid": {
          "description": "For [Content Editor/API](https://www.twilio.com/docs/content) only: The SID of the Content Template to be used with the Message, e.g., `HXXXXXXXXXXXXXXXXXXXXXXXXXXXXX`. If this parameter is not provided, a Content Template is not used. Find the SID in the Console on the Content Editor page. For Content API users, the SID is found in Twilio's response when [creating the Template](https://www.twilio.com/docs/content/content-api-resources#create-templates) or by [fetching your Templates](https://www.twilio.com/docs/content/content-api-resources#fetch-all-content-resources).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^HX[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ContentVariables": {
          "description": "For [Content Editor/API](https://www.twilio.com/docs/content) only: Key-value pairs of [Template variables](https://www.twilio.com/docs/content/using-variables-with-content-api) and their substitution values. `content_sid` parameter must also be provided. If values are not defined in the `content_variables` parameter, the [Template's default placeholder values](https://www.twilio.com/docs/content/content-api-resources#create-templates) are used.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ForceDelivery": {
          "description": "Reserved",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "From": {
          "description": "The sender's Twilio phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., `whatsapp:+15554449999`). The value of the `from` parameter must be a sender that is hosted within Twilio and belongs to the Account creating the Message. If you are using `messaging_service_sid`, this parameter can be empty (Twilio assigns a `from` value from the Messaging Service's Sender Pool) or you can provide a specific sender from your Sender Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "MaxPrice": {
          "description": "[OBSOLETE] This parameter will no longer have any effect as of 2024-06-03.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "MediaUrl": {
          "description": "The URL of media to include in the Message content. `jpeg`, `jpg`, `gif`, and `png` file types are fully supported by Twilio and content is formatted for delivery on destination devices. The media size limit is 5 MB for supported file types (`jpeg`, `jpg`, `png`, `gif`) and 500 KB for [other types](https://www.twilio.com/docs/messaging/guides/accepted-mime-types) of accepted media. To send more than one image in the message, provide multiple `media_url` parameters in the POST request. You can include up to ten `media_url` parameters per message. [International](https://support.twilio.com/hc/en-us/articles/223179808-Sending-and-receiving-MMS-messages) and [carrier](https://support.twilio.com/hc/en-us/articles/223133707-Is-MMS-supported-for-all-carriers-in-US-and-Canada-) limits apply.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "URI",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "uri"
            }
          }
        },
        "MessagingServiceSid": {
          "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services) you want to associate with the Message. When this parameter is provided and the `from` parameter is omitted, Twilio selects the optimal sender from the Messaging Service's Sender Pool. You may also provide a `from` parameter if you want to use a specific Sender from the Sender Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "PersistentAction": {
          "description": "Rich actions for non-SMS/MMS channels. Used for [sending location in WhatsApp messages](https://www.twilio.com/docs/whatsapp/message-features#location-messages-with-whatsapp).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ProvideFeedback": {
          "description": "Boolean indicating whether or not you intend to provide delivery confirmation feedback to Twilio (used in conjunction with the [Message Feedback subresource](https://www.twilio.com/docs/sms/api/message-feedback-resource)). Default value is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "RiskCheck": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessageEnumRiskCheck",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ScheduleType": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessageEnumScheduleType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SendAsMms": {
          "description": "If set to `true`, Twilio delivers the message as a single MMS message, regardless of the presence of media.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SendAt": {
          "description": "The time that Twilio will send the message. Must be in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "ShortenUrls": {
          "description": "For Messaging Services with [Link Shortening configured](https://www.twilio.com/docs/messaging/features/link-shortening) only: A Boolean indicating whether or not Twilio should shorten links in the `body` of the Message. Default value is `false`. If `true`, the `messaging_service_sid` parameter must also be provided.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SmartEncoded": {
          "description": "Whether to detect Unicode characters that have a similar GSM-7 character and replace them. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "StatusCallback": {
          "description": "The URL of the endpoint to which Twilio sends [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url). URL must contain a valid hostname and underscores are not allowed. If you include this parameter with the `messaging_service_sid`, Twilio uses this URL instead of the Status Callback URL of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "To": {
          "description": "The recipient's phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (for SMS/MMS) or [channel address](https://www.twilio.com/docs/messaging/channels), e.g. `whatsapp:+15552229999`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "ValidityPeriod": {
          "description": "The maximum length in seconds that the Message can remain in Twilio's outgoing message queue. If a queued Message exceeds the `validity_period`, the Message is not sent. Accepted values are integers from `1` to `36000`. Default value is `36000`. A `validity_period` greater than `5` is recommended. [Learn more about the validity period](https://www.twilio.com/blog/take-more-control-of-outbound-messages-using-validity-period-html)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "CreateMessageFeedbackBody": {
      "fields": {
        "Outcome": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessageFeedbackEnumOutcome",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateNewKeyBody": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateNewSigningKeyBody": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateParticipantBody": {
      "fields": {
        "AmdStatusCallback": {
          "description": "The URL that we should call using the `amd_status_callback_method` to notify customer application whether the call was answered by human, machine or fax.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "AmdStatusCallbackMethod": {
          "description": "The HTTP method we should use when calling the `amd_status_callback` URL. Can be: `GET` or `POST` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401AmdStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "Beep": {
          "description": "Whether to play a notification beep to the conference when the participant joins. Can be: `true`, `false`, `onEnter`, or `onExit`. The default value is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Byoc": {
          "description": "The SID of a BYOC (Bring Your Own Carrier) trunk to route this call with. Note that `byoc` is only meaningful when `to` is a phone number; it will otherwise be ignored. (Beta)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BY[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "CallReason": {
          "description": "The Reason for the outgoing call. Use it to specify the purpose of the call that is presented on the called party's phone. (Branded Calls Beta)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallSidToCoach": {
          "description": "The SID of the participant who is being `coached`. The participant being coached is the only participant who can hear the participant who is `coaching`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "CallToken": {
          "description": "A token string needed to invoke a forwarded call. A call_token is generated when an incoming call is received on a Twilio number. Pass an incoming call's call_token value to a forwarded call via the call_token parameter when creating a new call. A forwarded call should bear the same CallerID of the original incoming call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallerId": {
          "description": "The phone number, Client identifier, or username portion of SIP address that made this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). Client identifiers are formatted `client:name`. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `callerId` must also be a phone number. If `to` is sip address, this value of `callerId` should be a username portion to be used to populate the From header that is passed to the SIP endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Coaching": {
          "description": "Whether the participant is coaching another call. Can be: `true` or `false`. If not present, defaults to `false` unless `call_sid_to_coach` is defined. If `true`, `call_sid_to_coach` must be defined.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "ConferenceRecord": {
          "description": "Whether to record the conference the participant is joining. Can be: `true`, `false`, `record-from-start`, and `do-not-record`. The default value is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ConferenceRecordingStatusCallback": {
          "description": "The URL we should call using the `conference_recording_status_callback_method` when the conference recording is available.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ConferenceRecordingStatusCallbackEvent": {
          "description": "The conference recording state changes that generate a call to `conference_recording_status_callback`. Can be: `in-progress`, `completed`, `failed`, and `absent`. Separate multiple values with a space, ex: `'in-progress completed failed'`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ConferenceRecordingStatusCallbackMethod": {
          "description": "The HTTP method we should use to call `conference_recording_status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401ConferenceRecordingStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "ConferenceStatusCallback": {
          "description": "The URL we should call using the `conference_status_callback_method` when the conference events in `conference_status_callback_event` occur. Only the value set by the first participant to join the conference is used. Subsequent `conference_status_callback` values are ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ConferenceStatusCallbackEvent": {
          "description": "The conference state changes that should generate a call to `conference_status_callback`. Can be: `start`, `end`, `join`, `leave`, `mute`, `hold`, `modify`, `speaker`, and `announcement`. Separate multiple values with a space. Defaults to `start end`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ConferenceStatusCallbackMethod": {
          "description": "The HTTP method we should use to call `conference_status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401ConferenceStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "ConferenceTrim": {
          "description": "Whether to trim leading and trailing silence from the conference recording. Can be: `trim-silence` or `do-not-trim` and defaults to `trim-silence`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "EarlyMedia": {
          "description": "Whether to allow an agent to hear the state of the outbound call, including ringing or disconnect messages. Can be: `true` or `false` and defaults to `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "EndConferenceOnExit": {
          "description": "Whether to end the conference when the participant leaves. Can be: `true` or `false` and defaults to `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "From": {
          "description": "The phone number, Client identifier, or username portion of SIP address that made this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). Client identifiers are formatted `client:name`. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `from` must also be a phone number. If `to` is sip address, this value of `from` should be a username portion to be used to populate the P-Asserted-Identity header that is passed to the SIP endpoint.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "endpoint"
          }
        },
        "JitterBufferSize": {
          "description": "Jitter buffer size for the connecting participant. Twilio will use this setting to apply Jitter Buffer before participant's audio is mixed into the conference. Can be: `off`, `small`, `medium`, and `large`. Default to `large`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Label": {
          "description": "A label for this participant. If one is supplied, it may subsequently be used to fetch, update or delete the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MachineDetection": {
          "description": "Whether to detect if a human, answering machine, or fax has picked up the call. Can be: `Enable` or `DetectMessageEnd`. Use `Enable` if you would like us to return `AnsweredBy` as soon as the called party is identified. Use `DetectMessageEnd`, if you would like to leave a message on an answering machine. For more information, see [Answering Machine Detection](https://www.twilio.com/docs/voice/answering-machine-detection).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MachineDetectionSilenceTimeout": {
          "description": "The number of milliseconds of initial silence after which an `unknown` AnsweredBy result will be returned. Possible Values: 2000-10000. Default: 5000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "MachineDetectionSpeechEndThreshold": {
          "description": "The number of milliseconds of silence after speech activity at which point the speech activity is considered complete. Possible Values: 500-5000. Default: 1200.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "MachineDetectionSpeechThreshold": {
          "description": "The number of milliseconds that is used as the measuring stick for the length of the speech activity, where durations lower than this value will be interpreted as a human and longer than this value as a machine. Possible Values: 1000-6000. Default: 2400.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "MachineDetectionTimeout": {
          "description": "The number of seconds that we should attempt to detect an answering machine before timing out and sending a voice request with `AnsweredBy` of `unknown`. The default timeout is 30 seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "MaxParticipants": {
          "description": "The maximum number of participants in the conference. Can be a positive integer from `2` to `250`. The default value is `250`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Muted": {
          "description": "Whether the agent is muted in the conference. Can be `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "Record": {
          "description": "Whether to record the participant and their conferences, including the time between conferences. Can be `true` or `false` and the default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "RecordingChannels": {
          "description": "The recording channels for the final recording. Can be: `mono` or `dual` and the default is `mono`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RecordingStatusCallback": {
          "description": "The URL that we should call using the `recording_status_callback_method` when the recording status changes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "RecordingStatusCallbackEvent": {
          "description": "The recording state changes that should generate a call to `recording_status_callback`. Can be: `started`, `in-progress`, `paused`, `resumed`, `stopped`, `completed`, `failed`, and `absent`. Separate multiple values with a space, ex: `'in-progress completed failed'`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "RecordingStatusCallbackMethod": {
          "description": "The HTTP method we should use when we call `recording_status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401RecordingStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "RecordingTrack": {
          "description": "The audio track to record for the call. Can be: `inbound`, `outbound` or `both`. The default is `both`. `inbound` records the audio that is received by Twilio. `outbound` records the audio that is sent from Twilio. `both` records the audio that is received and sent by Twilio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Region": {
          "description": "The [region](https://support.twilio.com/hc/en-us/articles/223132167-How-global-low-latency-routing-and-region-selection-work-for-conferences-and-Client-calls) where we should mix the recorded audio. Can be:`us1`, `ie1`, `de1`, `sg1`, `br1`, `au1`, or `jp1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SipAuthPassword": {
          "description": "The SIP password for authentication.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SipAuthUsername": {
          "description": "The SIP username used for authentication.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StartConferenceOnEnter": {
          "description": "Whether to start the conference when the participant joins, if it has not already started. Can be: `true` or `false` and the default is `true`. If `false` and the conference has not started, the participant is muted and hears background music until another participant starts the conference.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackEvent": {
          "description": "The conference state changes that should generate a call to `status_callback`. Can be: `initiated`, `ringing`, `answered`, and `completed`. Separate multiple values with a space. The default value is `completed`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `GET` and `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "TimeLimit": {
          "description": "The maximum duration of the call in seconds. Constraints depend on account and configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Timeout": {
          "description": "The number of seconds that we should allow the phone to ring before assuming there is no answer. Can be an integer between `5` and `600`, inclusive. The default value is `60`. We always add a 5-second timeout buffer to outgoing calls, so  value of 10 would result in an actual timeout that was closer to 15 seconds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "To": {
          "description": "The phone number, SIP address, or Client identifier that received this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `sip:name@company.com`. Client identifiers are formatted `client:name`. [Custom parameters](https://www.twilio.com/docs/voice/api/conference-participant-resource#custom-parameters) may also be specified.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "endpoint"
          }
        },
        "Trim": {
          "description": "Whether to trim any leading and trailing silence from the participant recording. Can be: `trim-silence` or `do-not-trim` and the default is `trim-silence`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "WaitMethod": {
          "description": "The HTTP method we should use to call `wait_url`. Can be `GET` or `POST` and the default is `POST`. When using a static audio file, this should be `GET` so that we can cache the file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401WaitMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "WaitUrl": {
          "description": "The URL we should call using the `wait_method` for the music to play while participants are waiting for the conference to start. The default value is the URL of our standard hold music. [Learn more about hold music](https://www.twilio.com/labs/twimlets/holdmusic).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "CreatePaymentsBody": {
      "fields": {
        "BankAccountType": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentsEnumBankAccountType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ChargeAmount": {
          "description": "A positive decimal value less than 1,000,000 to charge against the credit card or bank account. Default currency can be overwritten with `currency` field. Leave blank or set to 0 to tokenize.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "Currency": {
          "description": "The currency of the `charge_amount`, formatted as [ISO 4127](http://www.iso.org/iso/home/standards/currency_codes.htm) format. The default value is `USD` and all values allowed from the Pay Connector are accepted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Description": {
          "description": "The description can be used to provide more details regarding the transaction. This information is submitted along with the payment details to the Payment Connector which are then posted on the transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IdempotencyKey": {
          "description": "A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions. This should be a unique string value per API call and can be a randomly generated.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Input": {
          "description": "A list of inputs that should be accepted. Currently only `dtmf` is supported. All digits captured during a pay session are redacted from the logs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MinPostalCodeLength": {
          "description": "A positive integer that is used to validate the length of the `PostalCode` inputted by the user. User must enter this many digits.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Parameter": {
          "description": "A single-level JSON object used to pass custom parameters to payment processors. (Required for ACH payments). The information that has to be included here depends on the  Connector. [Read more](https://www.twilio.com/console/voice/pay-connectors).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": null
          }
        },
        "PaymentConnector": {
          "description": "This is the unique name corresponding to the Pay Connector installed in the Twilio Add-ons. Learn more about [ Connectors](https://www.twilio.com/console/voice/pay-connectors). The default value is `Default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PaymentMethod": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentsEnumPaymentMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PostalCode": {
          "description": "Indicates whether the credit card postal code (zip code) is a required piece of payment information that must be provided by the caller. The default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SecurityCode": {
          "description": "Indicates whether the credit card security code is a required piece of payment information that must be provided by the caller. The default is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "StatusCallback": {
          "description": "Provide an absolute or relative URL to receive status updates regarding your Pay session. Read more about the [expected StatusCallback values](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback)",
          "type": {
            "name": "URI",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Timeout": {
          "description": "The number of seconds that  should wait for the caller to press a digit between each subsequent digit, after the first one, before moving on to validate the digits captured. The default is `5`, maximum is `600`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "TokenType": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentsEnumTokenType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ValidCardTypes": {
          "description": "Credit card types separated by space that Pay should accept. The default value is `visa mastercard amex`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateQueueBody": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you created to describe this resource. It can be up to 64 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MaxSize": {
          "description": "The maximum number of calls allowed to be in the queue. The default is 1000. The maximum is 5000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "CreateRealtimeTranscriptionBody": {
      "fields": {
        "EnableAutomaticPunctuation": {
          "description": "The provider will add punctuation to recognition result",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "Hints": {
          "description": "A Phrase contains words and phrase \"hints\" so that the speech recognition engine is more likely to recognize them.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "InboundTrackLabel": {
          "description": "Friendly name given to the Inbound Track",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "LanguageCode": {
          "description": "Language code used by the transcription engine, specified in [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) format",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Name": {
          "description": "The user-specified name of this Transcription, if one was given when the Transcription was created. This may be used to stop the Transcription.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "OutboundTrackLabel": {
          "description": "Friendly name given to the Outbound Track",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PartialResults": {
          "description": "Indicates if partial results are going to be sent to the customer",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "ProfanityFilter": {
          "description": "indicates if the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SpeechModel": {
          "description": "Recognition model used by the transcription engine, among those supported by the provider",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StatusCallbackMethod": {
          "description": "The http method for the status_callback (one of GET, POST).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "StatusCallbackUrl": {
          "description": "Absolute URL of the status callback.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Track": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RealtimeTranscriptionEnumTrack",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TranscriptionEngine": {
          "description": "Definition of the transcription engine to be used, among those supported by Twilio",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateSipAuthCallsCredentialListMappingBody": {
      "fields": {
        "CredentialListSid": {
          "description": "The SID of the CredentialList resource to map to the SIP domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "CreateSipAuthCallsIpAccessControlListMappingBody": {
      "fields": {
        "IpAccessControlListSid": {
          "description": "The SID of the IpAccessControlList resource to map to the SIP domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "CreateSipAuthRegistrationsCredentialListMappingBody": {
      "fields": {
        "CredentialListSid": {
          "description": "The SID of the CredentialList resource to map to the SIP domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "CreateSipCredentialBody": {
      "fields": {
        "Password": {
          "description": "The password that the username will use when authenticating SIP requests. The password must be a minimum of 12 characters, contain at least 1 digit, and have mixed case. (eg `IWasAtSignal2018`)",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Username": {
          "description": "The username that will be passed when authenticating SIP requests. The username should be sent in response to Twilio's challenge of the initial INVITE. It can be up to 32 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateSipCredentialListBody": {
      "fields": {
        "FriendlyName": {
          "description": "A human readable descriptive text that describes the CredentialList, up to 64 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateSipCredentialListMappingBody": {
      "fields": {
        "CredentialListSid": {
          "description": "A 34 character string that uniquely identifies the CredentialList resource to map to the SIP domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "CreateSipDomainBody": {
      "fields": {
        "ByocTrunkSid": {
          "description": "The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BY[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "DomainName": {
          "description": "The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \"-\" and must end with `sip.twilio.com`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "EmergencyCallerSid": {
          "description": "Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyCallingEnabled": {
          "description": "Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you created to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Secure": {
          "description": "Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SipRegistration": {
          "description": "Whether to allow SIP Endpoints to register with the domain to receive calls. Can be `true` or `false`. `true` allows SIP Endpoints to register with the domain to receive calls, `false` does not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "The URL that we should call when an error occurs while retrieving or executing the TwiML from `voice_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceStatusCallbackMethod": {
          "description": "The HTTP method we should use to call `voice_status_callback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceStatusCallbackUrl": {
          "description": "The URL that we should call to pass status parameters (such as call ended) to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceUrl": {
          "description": "The URL we should when the domain receives a call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "CreateSipIpAccessControlListBody": {
      "fields": {
        "FriendlyName": {
          "description": "A human readable descriptive text that describes the IpAccessControlList, up to 255 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateSipIpAccessControlListMappingBody": {
      "fields": {
        "IpAccessControlListSid": {
          "description": "The unique id of the IP access control list to map to the SIP domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "CreateSipIpAddressBody": {
      "fields": {
        "CidrPrefixLength": {
          "description": "An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "FriendlyName": {
          "description": "A human readable descriptive text for this resource, up to 255 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IpAddress": {
          "description": "An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateSiprecBody": {
      "fields": {
        "ConnectorName": {
          "description": "Unique name used when configuring the connector via Marketplace Add-on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Name": {
          "description": "The user-specified name of this Siprec, if one was given when the Siprec was created. This may be used to stop the Siprec.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter1.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter1.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter10.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter10.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter11.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter11.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter12.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter12.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter13.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter13.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter14.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter14.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter15.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter15.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter16.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter16.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter17.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter17.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter18.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter18.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter19.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter19.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter2.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter2.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter20.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter20.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter21.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter21.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter22.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter22.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter23.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter23.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter24.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter24.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter25.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter25.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter26.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter26.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter27.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter27.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter28.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter28.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter29.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter29.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter3.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter3.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter30.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter30.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter31.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter31.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter32.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter32.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter33.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter33.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter34.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter34.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter35.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter35.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter36.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter36.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter37.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter37.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter38.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter38.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter39.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter39.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter4.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter4.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter40.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter40.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter41.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter41.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter42.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter42.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter43.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter43.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter44.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter44.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter45.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter45.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter46.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter46.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter47.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter47.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter48.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter48.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter49.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter49.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter5.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter5.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter50.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter50.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter51.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter51.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter52.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter52.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter53.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter53.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter54.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter54.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter55.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter55.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter56.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter56.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter57.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter57.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter58.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter58.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter59.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter59.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter6.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter6.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter60.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter60.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter61.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter61.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter62.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter62.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter63.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter63.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter64.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter64.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter65.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter65.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter66.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter66.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter67.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter67.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter68.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter68.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter69.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter69.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter7.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter7.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter70.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter70.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter71.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter71.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter72.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter72.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter73.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter73.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter74.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter74.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter75.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter75.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter76.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter76.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter77.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter77.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter78.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter78.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter79.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter79.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter8.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter8.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter80.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter80.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter81.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter81.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter82.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter82.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter83.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter83.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter84.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter84.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter85.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter85.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter86.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter86.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter87.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter87.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter88.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter88.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter89.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter89.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter9.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter9.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter90.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter90.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter91.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter91.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter92.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter92.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter93.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter93.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter94.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter94.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter95.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter95.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter96.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter96.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter97.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter97.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter98.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter98.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter99.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter99.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StatusCallback": {
          "description": "Absolute URL of the status callback.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The http method for the status_callback (one of GET, POST).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "Track": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SiprecEnumTrack",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateStreamBody": {
      "fields": {
        "Name": {
          "description": "The user-specified name of this Stream, if one was given when the Stream was created. This can be used to stop the Stream.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter1.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter1.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter10.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter10.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter11.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter11.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter12.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter12.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter13.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter13.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter14.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter14.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter15.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter15.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter16.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter16.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter17.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter17.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter18.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter18.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter19.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter19.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter2.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter2.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter20.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter20.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter21.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter21.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter22.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter22.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter23.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter23.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter24.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter24.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter25.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter25.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter26.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter26.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter27.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter27.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter28.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter28.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter29.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter29.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter3.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter3.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter30.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter30.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter31.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter31.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter32.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter32.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter33.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter33.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter34.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter34.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter35.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter35.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter36.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter36.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter37.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter37.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter38.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter38.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter39.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter39.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter4.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter4.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter40.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter40.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter41.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter41.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter42.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter42.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter43.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter43.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter44.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter44.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter45.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter45.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter46.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter46.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter47.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter47.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter48.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter48.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter49.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter49.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter5.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter5.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter50.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter50.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter51.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter51.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter52.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter52.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter53.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter53.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter54.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter54.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter55.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter55.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter56.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter56.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter57.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter57.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter58.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter58.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter59.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter59.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter6.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter6.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter60.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter60.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter61.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter61.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter62.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter62.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter63.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter63.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter64.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter64.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter65.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter65.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter66.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter66.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter67.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter67.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter68.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter68.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter69.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter69.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter7.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter7.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter70.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter70.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter71.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter71.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter72.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter72.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter73.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter73.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter74.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter74.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter75.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter75.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter76.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter76.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter77.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter77.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter78.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter78.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter79.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter79.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter8.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter8.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter80.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter80.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter81.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter81.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter82.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter82.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter83.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter83.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter84.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter84.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter85.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter85.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter86.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter86.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter87.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter87.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter88.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter88.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter89.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter89.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter9.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter9.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter90.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter90.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter91.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter91.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter92.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter92.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter93.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter93.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter94.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter94.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter95.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter95.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter96.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter96.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter97.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter97.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter98.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter98.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter99.Name": {
          "description": "Parameter name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Parameter99.Value": {
          "description": "Parameter value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StatusCallback": {
          "description": "Absolute URL to which Twilio sends status callback HTTP requests.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method Twilio uses when sending `status_callback` requests. Possible values are `GET` and `POST`. Default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "Track": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StreamEnumTrack",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Url": {
          "description": "Relative or absolute URL where WebSocket connection will be established.",
          "type": {
            "name": "URI",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "CreateTokenBody": {
      "fields": {
        "Ttl": {
          "description": "The duration in seconds for which the generated credentials are valid. The default value is 86400 (24 hours).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "CreateUsageTriggerBody": {
      "fields": {
        "CallbackMethod": {
          "description": "The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401CallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "CallbackUrl": {
          "description": "The URL we should call using `callback_method` when the trigger fires.",
          "type": {
            "name": "URI",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Recurring": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageTriggerEnumRecurring",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TriggerBy": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UsageTriggerEnumTriggerField",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "TriggerValue": {
          "description": "The usage value at which the trigger should fire.  For convenience, you can use an offset value such as `+30` to specify a trigger_value that is 30 units more than the current usage value. Be sure to urlencode a `+` as `%2B`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UsageCategory": {
          "type": {
            "name": "UsageTriggerEnumUsageCategory",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateUserDefinedMessageBody": {
      "fields": {
        "Content": {
          "description": "The User Defined Message in the form of URL-encoded JSON string.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IdempotencyKey": {
          "description": "A unique string value to identify API call. This should be a unique string value per API call and can be a randomly generated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateUserDefinedMessageSubscriptionBody": {
      "fields": {
        "Callback": {
          "description": "The URL we should call using the `method` to send user defined events to your application. URLs must contain a valid hostname (underscores are not permitted).",
          "type": {
            "name": "URI",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "IdempotencyKey": {
          "description": "A unique string value to identify API call. This should be a unique string value per API call and can be a randomly generated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Method": {
          "description": "The HTTP method Twilio will use when requesting the above `Url`. Either `GET` or `POST`. Default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401Method",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        }
      }
    },
    "CreateValidationRequestBody": {
      "fields": {
        "CallDelay": {
          "description": "The number of seconds to delay before initiating the verification call. Can be an integer between `0` and `60`, inclusive. The default is `0`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Extension": {
          "description": "The digits to dial after connecting the verification call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the new caller ID resource. It can be up to 64 characters long. The default value is a formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PhoneNumber": {
          "description": "The phone number to verify in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone-number"
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information about the verification process to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST`, and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        }
      }
    },
    "ListAccountResult": {
      "fields": {
        "accounts": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010Account",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAddressResult": {
      "fields": {
        "addresses": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAddress",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListApplicationResult": {
      "fields": {
        "applications": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountApplication",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAuthorizedConnectAppResult": {
      "fields": {
        "authorized_connect_apps": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAuthorizedConnectApp",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAvailablePhoneNumberCountryResult": {
      "fields": {
        "countries": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAvailablePhoneNumberCountry",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAvailablePhoneNumberLocalResult": {
      "fields": {
        "available_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocal",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAvailablePhoneNumberMachineToMachineResult": {
      "fields": {
        "available_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberMachineToMachine",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAvailablePhoneNumberMobileResult": {
      "fields": {
        "available_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberMobile",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAvailablePhoneNumberNationalResult": {
      "fields": {
        "available_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberNational",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAvailablePhoneNumberSharedCostResult": {
      "fields": {
        "available_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberSharedCost",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAvailablePhoneNumberTollFreeResult": {
      "fields": {
        "available_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListAvailablePhoneNumberVoipResult": {
      "fields": {
        "available_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListCallEventResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "events": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountCallCallEvent",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListCallNotificationResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "notifications": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountCallCallNotification",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListCallRecordingResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "recordings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountCallCallRecording",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListCallResult": {
      "fields": {
        "calls": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountCall",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListConferenceRecordingResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "recordings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountConferenceConferenceRecording",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListConferenceResult": {
      "fields": {
        "conferences": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountConference",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListConnectAppResult": {
      "fields": {
        "connect_apps": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountConnectApp",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListDependentPhoneNumberResult": {
      "fields": {
        "dependent_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountAddressDependentPhoneNumber",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListIncomingPhoneNumberAssignedAddOnExtensionResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "extensions": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListIncomingPhoneNumberAssignedAddOnResult": {
      "fields": {
        "assigned_add_ons": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberAssignedAddOn",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListIncomingPhoneNumberLocalResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "incoming_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocal",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListIncomingPhoneNumberMobileResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "incoming_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobile",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListIncomingPhoneNumberResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "incoming_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountIncomingPhoneNumber",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListIncomingPhoneNumberTollFreeResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "incoming_phone_numbers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFree",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListKeyResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "keys": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountKey",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListMediaResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "media_list": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountMessageMedia",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListMemberResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "queue_members": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountQueueMember",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListMessageResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "messages": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountMessage",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListNotificationResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "notifications": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountNotification",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListOutgoingCallerIdResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "outgoing_caller_ids": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountOutgoingCallerId",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListParticipantResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "participants": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountConferenceParticipant",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListQueueResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "queues": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountQueue",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListRecordingAddOnResultPayloadResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "payloads": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListRecordingAddOnResultResult": {
      "fields": {
        "add_on_results": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountRecordingRecordingAddOnResult",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListRecordingResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "recordings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountRecording",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListRecordingTranscriptionResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "transcriptions": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountRecordingRecordingTranscription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListShortCodeResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "short_codes": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountShortCode",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSigningKeyResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "signing_keys": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSigningKey",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipAuthCallsCredentialListMappingResult": {
      "fields": {
        "contents": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipAuthCallsIpAccessControlListMappingResult": {
      "fields": {
        "contents": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipAuthRegistrationsCredentialListMappingResult": {
      "fields": {
        "contents": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipCredentialListMappingResult": {
      "fields": {
        "credential_list_mappings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipDomainSipCredentialListMapping",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipCredentialListResult": {
      "fields": {
        "credential_lists": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipCredentialList",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipCredentialResult": {
      "fields": {
        "credentials": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipCredentialListSipCredential",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipDomainResult": {
      "fields": {
        "domains": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipDomain",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipIpAccessControlListMappingResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ip_access_control_list_mappings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipDomainSipIpAccessControlListMapping",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipIpAccessControlListResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ip_access_control_lists": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipIpAccessControlList",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListSipIpAddressResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "ip_addresses": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountSipSipIpAccessControlListSipIpAddress",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListTranscriptionResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "transcriptions": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountTranscription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ListUsageRecordAllTimeResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageRecordUsageRecordAllTime",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "ListUsageRecordDailyResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageRecordUsageRecordDaily",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "ListUsageRecordLastMonthResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageRecordUsageRecordLastMonth",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "ListUsageRecordMonthlyResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageRecordUsageRecordMonthly",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "ListUsageRecordResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageRecord",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "ListUsageRecordThisMonthResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageRecordUsageRecordThisMonth",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "ListUsageRecordTodayResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageRecordUsageRecordToday",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "ListUsageRecordYearlyResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageRecordUsageRecordYearly",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "ListUsageRecordYesterdayResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageRecordUsageRecordYesterday",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "ListUsageTriggerResult": {
      "fields": {
        "end": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "first_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "next_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "start": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "uri": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "usage_triggers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ApiV2010AccountUsageUsageTrigger",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "UpdateAccountBody": {
      "fields": {
        "FriendlyName": {
          "description": "Update the human-readable description of this Account",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AccountEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateAddressBody": {
      "fields": {
        "AutoCorrectAddress": {
          "description": "Whether we should automatically correct the address. Can be: `true` or `false` and the default is `true`. If empty or `true`, we will correct the address you provide if necessary. If `false`, we won't alter the address you provide.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "City": {
          "description": "The city of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CustomerName": {
          "description": "The name to associate with the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "EmergencyEnabled": {
          "description": "Whether to enable emergency calling on the address. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the address. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PostalCode": {
          "description": "The postal code of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Region": {
          "description": "The state or region of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Street": {
          "description": "The number and street address of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StreetSecondary": {
          "description": "The additional number and street address of the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateApplicationBody": {
      "fields": {
        "ApiVersion": {
          "description": "The API version to use to start a new TwiML session. Can be: `2010-04-01` or `2008-08-01`. The default value is your account's default API version.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessageStatusCallback": {
          "description": "The URL we should call using a POST method to send message status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "PublicApplicationConnectEnabled": {
          "description": "Whether to allow other Twilio accounts to dial this applicaton using Dial verb. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SmsFallbackMethod": {
          "description": "The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsFallbackUrl": {
          "description": "The URL that we should call when an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsMethod": {
          "description": "The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsStatusCallback": {
          "description": "Same as message_status_callback: The URL we should call using a POST method to send status information about SMS messages sent by the application. Deprecated, included for backwards compatibility.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsUrl": {
          "description": "The URL we should call when the phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceCallerIdLookup": {
          "description": "Whether we should look up the caller's caller-ID name from the CNAM database (additional charges apply). Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceUrl": {
          "description": "The URL we should call when the phone number assigned to this application receives a call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "UpdateCallBody": {
      "fields": {
        "FallbackMethod": {
          "description": "The HTTP method that we should use to request the `fallback_url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401FallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "FallbackUrl": {
          "description": "The URL that we call using the `fallback_method` if an error occurs when requesting or executing the TwiML at `url`. If an `application_sid` parameter is present, this parameter is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Method": {
          "description": "The HTTP method we should use when calling the `url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401Method",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "Status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CallEnumUpdateStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application. If no `status_callback_event` is specified, we will send the `completed` status. If an `application_sid` parameter is present, this parameter is ignored. URLs must contain a valid hostname (underscores are not permitted).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use when requesting the `status_callback` URL. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "TimeLimit": {
          "description": "The maximum duration of the call in seconds. Constraints depend on account and configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Twiml": {
          "description": "TwiML instructions for the call Twilio will use without fetching Twiml from url. Twiml and url parameters are mutually exclusive",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "twiml"
          }
        },
        "Url": {
          "description": "The absolute URL that returns the TwiML instructions for the call. We will call this URL using the `method` when the call connects. For more information, see the [Url Parameter](https://www.twilio.com/docs/voice/make-calls#specify-a-url-parameter) section in [Making Calls](https://www.twilio.com/docs/voice/make-calls).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "UpdateCallRecordingBody": {
      "fields": {
        "PauseBehavior": {
          "description": "Whether to record during a pause. Can be: `skip` or `silence` and the default is `silence`. `skip` does not record during the pause period, while `silence` will replace the actual audio of the call with silence during the pause period. This parameter only applies when setting `status` is set to `paused`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Status": {
          "type": {
            "name": "CallRecordingEnumStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateConferenceBody": {
      "fields": {
        "AnnounceMethod": {
          "description": "The HTTP method used to call `announce_url`. Can be: `GET` or `POST` and the default is `POST`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401AnnounceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "AnnounceUrl": {
          "description": "The URL we should call to announce something into the conference. The URL may return an MP3 file, a WAV file, or a TwiML document that contains ``, ``, ``, or `` verbs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConferenceEnumUpdateStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateConferenceRecordingBody": {
      "fields": {
        "PauseBehavior": {
          "description": "Whether to record during a pause. Can be: `skip` or `silence` and the default is `silence`. `skip` does not record during the pause period, while `silence` will replace the actual audio of the call with silence during the pause period. This parameter only applies when setting `status` is set to `paused`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Status": {
          "type": {
            "name": "ConferenceRecordingEnumStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateConnectAppBody": {
      "fields": {
        "AuthorizeRedirectUrl": {
          "description": "The URL to redirect the user to after we authenticate the user and obtain authorization to access the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "CompanyName": {
          "description": "The company name to set for the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DeauthorizeCallbackMethod": {
          "description": "The HTTP method to use when calling `deauthorize_callback_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401DeauthorizeCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "DeauthorizeCallbackUrl": {
          "description": "The URL to call using the `deauthorize_callback_method` to de-authorize the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Description": {
          "description": "A description of the Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "HomepageUrl": {
          "description": "A public URL where users can obtain more information about this Connect App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Permissions": {
          "description": "A comma-separated list of the permissions you will request from the users of this ConnectApp.  Can include: `get-all` and `post-all`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConnectAppEnumPermission",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "UpdateIncomingPhoneNumberBody": {
      "fields": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "AddressSid": {
          "description": "The SID of the Address resource we should associate with the phone number. Some regions require addresses to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ApiVersion": {
          "description": "The API version to use for incoming calls made to the phone number. The default is `2010-04-01`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "BundleSid": {
          "description": "The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyAddressSid": {
          "description": "The SID of the emergency address configuration to use for emergency calling from this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyStatus": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberEnumEmergencyStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you created to describe this phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IdentitySid": {
          "description": "The SID of the Identity resource that we should associate with the phone number. Some regions require an identity to meet local regulations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "SmsApplicationSid": {
          "description": "The SID of the application that should handle SMS messages sent to the number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "SmsFallbackMethod": {
          "description": "The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsFallbackUrl": {
          "description": "The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsMethod": {
          "description": "The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsUrl": {
          "description": "The URL we should call when the phone number receives an incoming SMS message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallback": {
          "description": "The URL we should call using the `status_callback_method` to send status information to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "StatusCallbackMethod": {
          "description": "The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401StatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "TrunkSid": {
          "description": "The SID of the Trunk we should use to handle phone calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^TK[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceApplicationSid": {
          "description": "The SID of the application we should use to handle phone calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "VoiceCallerIdLookup": {
          "description": "Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceReceiveMode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncomingPhoneNumberEnumVoiceReceiveMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "VoiceUrl": {
          "description": "The URL that we should call to answer a call to the phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "UpdateKeyBody": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateMemberBody": {
      "fields": {
        "Method": {
          "description": "How to pass the update request data. Can be `GET` or `POST` and the default is `POST`. `POST` sends the data as encoded form data and `GET` sends the data as query parameters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401Method",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "Url": {
          "description": "The absolute URL of the Queue resource.",
          "type": {
            "name": "URI",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "UpdateMessageBody": {
      "fields": {
        "Body": {
          "description": "The new `body` of the Message resource. To redact the text content of a Message, this parameter's value must be an empty string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessageEnumUpdateStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateOutgoingCallerIdBody": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateParticipantBody": {
      "fields": {
        "AnnounceMethod": {
          "description": "The HTTP method we should use to call `announce_url`. Can be: `GET` or `POST` and defaults to `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401AnnounceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "AnnounceUrl": {
          "description": "The URL we call using the `announce_method` for an announcement to the participant. The URL may return an MP3 file, a WAV file, or a TwiML document that contains ``, ``, ``, or `` verbs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "BeepOnExit": {
          "description": "Whether to play a notification beep to the conference when the participant exits. Can be: `true` or `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "CallSidToCoach": {
          "description": "The SID of the participant who is being `coached`. The participant being coached is the only participant who can hear the participant who is `coaching`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CA[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Coaching": {
          "description": "Whether the participant is coaching another call. Can be: `true` or `false`. If not present, defaults to `false` unless `call_sid_to_coach` is defined. If `true`, `call_sid_to_coach` must be defined.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "EndConferenceOnExit": {
          "description": "Whether to end the conference when the participant leaves. Can be: `true` or `false` and defaults to `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "Hold": {
          "description": "Whether the participant should be on hold. Can be: `true` or `false`. `true` puts the participant on hold, and `false` lets them rejoin the conference.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "HoldMethod": {
          "description": "The HTTP method we should use to call `hold_url`. Can be: `GET` or `POST` and the default is `GET`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401HoldMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "HoldUrl": {
          "description": "The URL we call using the `hold_method` for music that plays when the participant is on hold. The URL may return an MP3 file, a WAV file, or a TwiML document that contains ``, ``, ``, or `` verbs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Muted": {
          "description": "Whether the participant should be muted. Can be `true` or `false`. `true` will mute the participant, and `false` will un-mute them. Anything value other than `true` or `false` is interpreted as `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "WaitMethod": {
          "description": "The HTTP method we should use to call `wait_url`. Can be `GET` or `POST` and the default is `POST`. When using a static audio file, this should be `GET` so that we can cache the file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401WaitMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "WaitUrl": {
          "description": "The URL we call using the `wait_method` for the music to play while participants are waiting for the conference to start. The URL may return an MP3 file, a WAV file, or a TwiML document that contains ``, ``, ``, or `` verbs. The default value is the URL of our standard hold music. [Learn more about hold music](https://www.twilio.com/labs/twimlets/holdmusic).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "UpdatePaymentsBody": {
      "fields": {
        "Capture": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentsEnumCapture",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IdempotencyKey": {
          "description": "A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions. This should be a unique string value per API call and can be a randomly generated.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentsEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "StatusCallback": {
          "description": "Provide an absolute or relative URL to receive status updates regarding your Pay session. Read more about the [Update](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback-update) and [Complete/Cancel](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback-cancelcomplete) POST requests.",
          "type": {
            "name": "URI",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "UpdateQueueBody": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you created to describe this resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MaxSize": {
          "description": "The maximum number of calls allowed to be in the queue. The default is 1000. The maximum is 5000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "UpdateRealtimeTranscriptionBody": {
      "fields": {
        "Status": {
          "type": {
            "name": "RealtimeTranscriptionEnumUpdateStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateShortCodeBody": {
      "fields": {
        "ApiVersion": {
          "description": "The API version to use to start a new TwiML session. Can be: `2010-04-01` or `2008-08-01`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you created to describe this resource. It can be up to 64 characters long. By default, the `FriendlyName` is the short code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "SmsFallbackMethod": {
          "description": "The HTTP method that we should use to call the `sms_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsFallbackUrl": {
          "description": "The URL that we should call if an error occurs while retrieving or executing the TwiML from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsMethod": {
          "description": "The HTTP method we should use when calling the `sms_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401SmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsUrl": {
          "description": "The URL we should call when receiving an incoming SMS message to this short code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "UpdateSigningKeyBody": {
      "fields": {
        "FriendlyName": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateSipCredentialBody": {
      "fields": {
        "Password": {
          "description": "The password that the username will use when authenticating SIP requests. The password must be a minimum of 12 characters, contain at least 1 digit, and have mixed case. (eg `IWasAtSignal2018`)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateSipCredentialListBody": {
      "fields": {
        "FriendlyName": {
          "description": "A human readable descriptive text for a CredentialList, up to 64 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateSipDomainBody": {
      "fields": {
        "ByocTrunkSid": {
          "description": "The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BY[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "DomainName": {
          "description": "The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \"-\" and must end with `sip.twilio.com`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "EmergencyCallerSid": {
          "description": "Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "EmergencyCallingEnabled": {
          "description": "Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you created to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Secure": {
          "description": "Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "SipRegistration": {
          "description": "Whether to allow SIP Endpoints to register with the domain to receive calls. Can be `true` or `false`. `true` allows SIP Endpoints to register with the domain to receive calls, `false` does not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "The URL that we should call when an error occurs while retrieving or executing the TwiML requested by `voice_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "The HTTP method we should use to call `voice_url`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceStatusCallbackMethod": {
          "description": "The HTTP method we should use to call `voice_status_callback_url`. Can be: `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401VoiceStatusCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceStatusCallbackUrl": {
          "description": "The URL that we should call to pass status parameters (such as call ended) to your application.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceUrl": {
          "description": "The URL we should call when the domain receives a call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "UpdateSipIpAccessControlListBody": {
      "fields": {
        "FriendlyName": {
          "description": "A human readable descriptive text, up to 255 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateSipIpAddressBody": {
      "fields": {
        "CidrPrefixLength": {
          "description": "An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "FriendlyName": {
          "description": "A human readable descriptive text for this resource, up to 255 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "IpAddress": {
          "description": "An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateSiprecBody": {
      "fields": {
        "Status": {
          "type": {
            "name": "SiprecEnumUpdateStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateStreamBody": {
      "fields": {
        "Status": {
          "type": {
            "name": "StreamEnumUpdateStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateUsageTriggerBody": {
      "fields": {
        "CallbackMethod": {
          "description": "The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "20100401CallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "CallbackUrl": {
          "description": "The URL we should call using `callback_method` when the trigger fires.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    }
  },
  "procedures": {
    "CreateAccount": {
      "request": {
        "url": "/2010-04-01/Accounts.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateAccountBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new Twilio Subaccount from the account making the request",
      "result_type": {
        "name": "ApiV2010Account",
        "type": "named"
      }
    },
    "CreateAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Addresses.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Address resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Addresses.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateAddressBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/Addresses.json",
      "result_type": {
        "name": "ApiV2010AccountAddress",
        "type": "named"
      }
    },
    "CreateApplication": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Applications.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Applications.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateApplicationBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new application within your account",
      "result_type": {
        "name": "ApiV2010AccountApplication",
        "type": "named"
      }
    },
    "CreateCall": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateCallBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new outgoing call to phones, SIP-enabled endpoints or Twilio Client connections",
      "result_type": {
        "name": "ApiV2010AccountCall",
        "type": "named"
      }
    },
    "CreateCallRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) to associate the resource with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateCallRecordingBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a recording for the call",
      "result_type": {
        "name": "ApiV2010AccountCallCallRecording",
        "type": "named"
      }
    },
    "CreateIncomingPhoneNumber": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateIncomingPhoneNumberBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Purchase a phone-number for the account.",
      "result_type": {
        "name": "ApiV2010AccountIncomingPhoneNumber",
        "type": "named"
      }
    },
    "CreateIncomingPhoneNumberAssignedAddOn": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ResourceSid": {
          "description": "The SID of the Phone Number to assign the Add-on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ResourceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateIncomingPhoneNumberAssignedAddOnBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Assign an Add-on installation to the Number specified.",
      "result_type": {
        "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberAssignedAddOn",
        "type": "named"
      }
    },
    "CreateIncomingPhoneNumberLocal": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateIncomingPhoneNumberLocalBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json",
      "result_type": {
        "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocal",
        "type": "named"
      }
    },
    "CreateIncomingPhoneNumberMobile": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateIncomingPhoneNumberMobileBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json",
      "result_type": {
        "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobile",
        "type": "named"
      }
    },
    "CreateIncomingPhoneNumberTollFree": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateIncomingPhoneNumberTollFreeBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json",
      "result_type": {
        "name": "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFree",
        "type": "named"
      }
    },
    "CreateMessage": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Messages.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) creating the Message resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Messages.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateMessageBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Send a message",
      "result_type": {
        "name": "ApiV2010AccountMessage",
        "type": "named"
      }
    },
    "CreateMessageFeedback": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Feedback.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource for which to create MessageFeedback.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "MessageSid": {
          "description": "The SID of the Message resource for which to create MessageFeedback.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessageSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Feedback.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateMessageFeedbackBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create Message Feedback to confirm a tracked user action was performed by the recipient of the associated Message",
      "result_type": {
        "name": "ApiV2010AccountMessageMessageFeedback",
        "type": "named"
      }
    },
    "CreateNewKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Keys.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Key resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Keys.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateNewKeyBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/Keys.json",
      "result_type": {
        "name": "ApiV2010AccountNewKey",
        "type": "named"
      }
    },
    "CreateNewSigningKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SigningKeys.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Key resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SigningKeys.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateNewSigningKeyBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new Signing Key for the account making the request.",
      "result_type": {
        "name": "ApiV2010AccountNewSigningKey",
        "type": "named"
      }
    },
    "CreateParticipant": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConferenceSid": {
          "description": "The SID of the participant's conference.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateParticipantBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json",
      "result_type": {
        "name": "ApiV2010AccountConferenceParticipant",
        "type": "named"
      }
    },
    "CreatePayments": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Payments.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the call that will create the resource. Call leg associated with this sid is expected to provide payment information thru DTMF.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Payments.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreatePaymentsBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "create an instance of payments. This will start a new payments session",
      "result_type": {
        "name": "ApiV2010AccountCallPayments",
        "type": "named"
      }
    },
    "CreateQueue": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Queues.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Queues.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateQueueBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a queue",
      "result_type": {
        "name": "ApiV2010AccountQueue",
        "type": "named"
      }
    },
    "CreateRealtimeTranscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Transcriptions.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Transcription resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Transcription resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Transcriptions.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateRealtimeTranscriptionBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a Transcription",
      "result_type": {
        "name": "ApiV2010AccountCallRealtimeTranscription",
        "type": "named"
      }
    },
    "CreateSipAuthCallsCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that will contain the new resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipAuthCallsCredentialListMappingBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new credential list mapping resource",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping",
        "type": "named"
      }
    },
    "CreateSipAuthCallsIpAccessControlListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that will contain the new resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipAuthCallsIpAccessControlListMappingBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new IP Access Control List mapping",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping",
        "type": "named"
      }
    },
    "CreateSipAuthRegistrationsCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that will contain the new resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipAuthRegistrationsCredentialListMappingBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new credential list mapping resource",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping",
        "type": "named"
      }
    },
    "CreateSipCredential": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CredentialListSid": {
          "description": "The unique id that identifies the credential list to include the created credential.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CredentialListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipCredentialBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new credential resource.",
      "result_type": {
        "name": "ApiV2010AccountSipSipCredentialListSipCredential",
        "type": "named"
      }
    },
    "CreateSipCredentialList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipCredentialListBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a Credential List",
      "result_type": {
        "name": "ApiV2010AccountSipSipCredentialList",
        "type": "named"
      }
    },
    "CreateSipCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "A 34 character string that uniquely identifies the SIP Domain for which the CredentialList resource will be mapped.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipCredentialListMappingBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a CredentialListMapping resource for an account.",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipCredentialListMapping",
        "type": "named"
      }
    },
    "CreateSipDomain": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/Domains.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipDomainBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new Domain",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomain",
        "type": "named"
      }
    },
    "CreateSipIpAccessControlList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipIpAccessControlListBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new IpAccessControlList resource",
      "result_type": {
        "name": "ApiV2010AccountSipSipIpAccessControlList",
        "type": "named"
      }
    },
    "CreateSipIpAccessControlListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "A 34 character string that uniquely identifies the SIP domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipIpAccessControlListMappingBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new IpAccessControlListMapping resource.",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomainSipIpAccessControlListMapping",
        "type": "named"
      }
    },
    "CreateSipIpAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "IpAccessControlListSid": {
          "description": "The IpAccessControlList Sid with which to associate the created IpAddress resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "IpAccessControlListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSipIpAddressBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new IpAddress resource.",
      "result_type": {
        "name": "ApiV2010AccountSipSipIpAccessControlListSipIpAddress",
        "type": "named"
      }
    },
    "CreateSiprec": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Siprec.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Siprec resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Siprec resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Siprec.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSiprecBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a Siprec",
      "result_type": {
        "name": "ApiV2010AccountCallSiprec",
        "type": "named"
      }
    },
    "CreateStream": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Streams.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Stream resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Stream resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Streams.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateStreamBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a Stream",
      "result_type": {
        "name": "ApiV2010AccountCallStream",
        "type": "named"
      }
    },
    "CreateToken": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Tokens.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Tokens.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateTokenBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new token for ICE servers",
      "result_type": {
        "name": "ApiV2010AccountToken",
        "type": "named"
      }
    },
    "CreateUsageTrigger": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateUsageTriggerBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new UsageTrigger",
      "result_type": {
        "name": "ApiV2010AccountUsageUsageTrigger",
        "type": "named"
      }
    },
    "CreateUserDefinedMessage": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/UserDefinedMessages.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created User Defined Message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Message is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/UserDefinedMessages.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateUserDefinedMessageBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a new User Defined Message for the given Call SID.",
      "result_type": {
        "name": "ApiV2010AccountCallUserDefinedMessage",
        "type": "named"
      }
    },
    "CreateUserDefinedMessageSubscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/UserDefinedMessageSubscriptions.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Messages subscription is associated with. This refers to the Call SID that is producing the user defined messages.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/UserDefinedMessageSubscriptions.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateUserDefinedMessageSubscriptionBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Subscribe to User Defined Messages for a given Call SID.",
      "result_type": {
        "name": "ApiV2010AccountCallUserDefinedMessageSubscription",
        "type": "named"
      }
    },
    "CreateValidationRequest": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for the new caller ID resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateValidationRequestBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json",
      "result_type": {
        "name": "ApiV2010AccountValidationRequest",
        "type": "named"
      }
    },
    "DeleteAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Address resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteApplication": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Application resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete the application by the specified application sid",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteCall": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided Call SID that uniquely identifies the Call resource to delete",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a Call record from your account. Once the record is deleted, it will no longer appear in the API and Account Portal logs.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteCallRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Recording resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a recording from your account",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteConferenceRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConferenceSid": {
          "description": "The Conference SID that identifies the conference associated with the recording to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Conference Recording resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a recording from your account",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteConnectApp": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the ConnectApp resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete an instance of a connect-app",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteIncomingPhoneNumber": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a phone-numbers belonging to the account used to make the request.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteIncomingPhoneNumberAssignedAddOn": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ResourceSid": {
          "description": "The SID of the Phone Number to which the Add-on is assigned.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ResourceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Remove the assignment of an Add-on installation from the Number specified.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Key resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteMedia": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is associated with the Media resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "MessageSid": {
          "description": "The SID of the Message resource that is associated with the Media resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessageSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The unique identifier of the to-be-deleted Media resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^ME[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete the Media resource.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteMessage": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Message resource you wish to delete",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Deletes a Message resource from your account",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteOutgoingCallerId": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete the caller-id specified from the account",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteParticipant": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to delete. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ConferenceSid": {
          "description": "The SID of the conference with the participants to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Kick a participant from a given conference",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteQueue": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Queue resource to delete",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Remove an empty queue",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Recording resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a recording from your account",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteRecordingAddOnResult": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ReferenceSid": {
          "description": "The SID of the recording to which the result to delete belongs.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ReferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Recording AddOnResult resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a result and purge all associated Payloads",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteRecordingAddOnResultPayload": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "AddOnResultSid": {
          "description": "The SID of the AddOnResult to which the payloads to delete belongs.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AddOnResultSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ReferenceSid": {
          "description": "The SID of the recording to which the AddOnResult resource that contains the payloads to delete belongs.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ReferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Recording AddOnResult Payload resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^XH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a payload from the result along with all associated Data",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteRecordingTranscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "RecordingSid": {
          "description": "The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcription to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "RecordingSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Transcription resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions/{Sid}.json",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSigningKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipAuthCallsCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that contains the resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the CredentialListMapping resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a credential list mapping from the requested domain",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipAuthCallsIpAccessControlListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that contains the resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the IpAccessControlListMapping resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete an IP Access Control List mapping from the requested domain",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipAuthRegistrationsCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "The SID of the SIP domain that contains the resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the CredentialListMapping resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a credential list mapping from the requested domain",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipCredential": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CredentialListSid": {
          "description": "The unique id that identifies the credential list that contains the desired credentials.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CredentialListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The unique id that identifies the resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a credential resource.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipCredentialList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The credential list Sid that uniquely identifies this resource",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a Credential List",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipCredentialListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "A 34 character string that uniquely identifies the SIP Domain that includes the resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies the resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a CredentialListMapping resource from an account.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipDomain": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the SipDomain resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete an instance of a Domain",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipIpAccessControlList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies the resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete an IpAccessControlList from the requested account",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipIpAccessControlListMapping": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "DomainSid": {
          "description": "A 34 character string that uniquely identifies the SIP domain.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "DomainSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies the resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete an IpAccessControlListMapping resource.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSipIpAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "IpAccessControlListSid": {
          "description": "The IpAccessControlList Sid that identifies the IpAddress resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "IpAccessControlListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies the resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete an IpAddress resource.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteTranscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Transcriptions/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Transcription resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a transcription from the account used to make the request",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteUsageTrigger": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the UsageTrigger resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^UT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "DELETE /2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteUserDefinedMessageSubscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/UserDefinedMessageSubscriptions/{Sid}.json",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Message Subscription is associated with. This refers to the Call SID that is producing the User Defined Messages.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID that uniquely identifies this User Defined Message Subscription.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^ZY[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a specific User Defined Message Subscription.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "UpdateAccount": {
      "request": {
        "url": "/2010-04-01/Accounts/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The Account Sid that uniquely identifies the account to update",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateAccountBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Modify the properties of a given Account",
      "result_type": {
        "name": "ApiV2010Account",
        "type": "named"
      }
    },
    "UpdateAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Address resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateAddressBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json",
      "result_type": {
        "name": "ApiV2010AccountAddress",
        "type": "named"
      }
    },
    "UpdateApplication": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Application resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateApplicationBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Updates the application's properties",
      "result_type": {
        "name": "ApiV2010AccountApplication",
        "type": "named"
      }
    },
    "UpdateCall": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Call resource to update",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateCallBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Initiates a call redirect or terminates a call",
      "result_type": {
        "name": "ApiV2010AccountCall",
        "type": "named"
      }
    },
    "UpdateCallRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Recording resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateCallRecordingBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Changes the status of the recording to paused, stopped, or in-progress. Note: Pass `Twilio.CURRENT` instead of recording sid to reference current active recording.",
      "result_type": {
        "name": "ApiV2010AccountCallCallRecording",
        "type": "named"
      }
    },
    "UpdateConference": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Conference resource to update",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Conferences/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateConferenceBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/Conferences/{Sid}.json",
      "result_type": {
        "name": "ApiV2010AccountConference",
        "type": "named"
      }
    },
    "UpdateConferenceRecording": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConferenceSid": {
          "description": "The Conference SID that identifies the conference associated with the recording to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Conference Recording resource to update. Use `Twilio.CURRENT` to reference the current active recording.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateConferenceRecordingBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Changes the status of the recording to paused, stopped, or in-progress. Note: To use `Twilio.CURRENT`, pass it as recording sid.",
      "result_type": {
        "name": "ApiV2010AccountConferenceConferenceRecording",
        "type": "named"
      }
    },
    "UpdateConnectApp": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the ConnectApp resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateConnectAppBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update a connect-app with the specified parameters",
      "result_type": {
        "name": "ApiV2010AccountConnectApp",
        "type": "named"
      }
    },
    "UpdateIncomingPhoneNumber": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateIncomingPhoneNumberBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update an incoming-phone-number instance.",
      "result_type": {
        "name": "ApiV2010AccountIncomingPhoneNumber",
        "type": "named"
      }
    },
    "UpdateKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Key resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateKeyBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json",
      "result_type": {
        "name": "ApiV2010AccountKey",
        "type": "named"
      }
    },
    "UpdateMember": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource(s) to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "QueueSid": {
          "description": "The SID of the Queue in which to find the members to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "QueueSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateMemberBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Dequeue a member from a queue and have the member's call begin executing the TwiML document at that URL",
      "result_type": {
        "name": "ApiV2010AccountQueueMember",
        "type": "named"
      }
    },
    "UpdateMessage": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Message resource to be updated",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateMessageBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update a Message resource (used to redact Message `body` text and to cancel not-yet-sent messages)",
      "result_type": {
        "name": "ApiV2010AccountMessage",
        "type": "named"
      }
    },
    "UpdateOutgoingCallerId": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateOutgoingCallerIdBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Updates the caller-id",
      "result_type": {
        "name": "ApiV2010AccountOutgoingCallerId",
        "type": "named"
      }
    },
    "UpdateParticipant": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to update. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ConferenceSid": {
          "description": "The SID of the conference with the participant to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConferenceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateParticipantBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update the properties of the participant",
      "result_type": {
        "name": "ApiV2010AccountConferenceParticipant",
        "type": "named"
      }
    },
    "UpdatePayments": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Payments/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will update the resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the call that will update the resource. This should be the same call sid that was used to create payments resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of Payments session that needs to be updated.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^PK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Payments/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdatePaymentsBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "update an instance of payments with different phases of payment flows.",
      "result_type": {
        "name": "ApiV2010AccountCallPayments",
        "type": "named"
      }
    },
    "UpdateQueue": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the Queue resource to update",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateQueueBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update the queue with the new parameters",
      "result_type": {
        "name": "ApiV2010AccountQueue",
        "type": "named"
      }
    },
    "UpdateRealtimeTranscription": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Transcriptions/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Transcription resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Transcription resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Transcription resource, or the `name` used when creating the resource",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Transcriptions/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateRealtimeTranscriptionBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Stop a Transcription using either the SID of the Transcription resource or the `name` used when creating the resource",
      "result_type": {
        "name": "ApiV2010AccountCallRealtimeTranscription",
        "type": "named"
      }
    },
    "UpdateShortCode": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the ShortCode resource to update",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateShortCodeBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update a short code with the following parameters",
      "result_type": {
        "name": "ApiV2010AccountShortCode",
        "type": "named"
      }
    },
    "UpdateSigningKey": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateSigningKeyBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "POST /2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json",
      "result_type": {
        "name": "ApiV2010AccountSigningKey",
        "type": "named"
      }
    },
    "UpdateSipCredential": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CredentialListSid": {
          "description": "The unique id that identifies the credential list that includes this credential.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CredentialListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The unique id that identifies the resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateSipCredentialBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update a credential resource.",
      "result_type": {
        "name": "ApiV2010AccountSipSipCredentialListSipCredential",
        "type": "named"
      }
    },
    "UpdateSipCredentialList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the Account that is responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The credential list Sid that uniquely identifies this resource",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateSipCredentialListBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update a Credential List",
      "result_type": {
        "name": "ApiV2010AccountSipSipCredentialList",
        "type": "named"
      }
    },
    "UpdateSipDomain": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the SipDomain resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateSipDomainBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update the attributes of a domain",
      "result_type": {
        "name": "ApiV2010AccountSipSipDomain",
        "type": "named"
      }
    },
    "UpdateSipIpAccessControlList": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies the resource to udpate.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateSipIpAccessControlListBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Rename an IpAccessControlList",
      "result_type": {
        "name": "ApiV2010AccountSipSipIpAccessControlList",
        "type": "named"
      }
    },
    "UpdateSipIpAddress": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "IpAccessControlListSid": {
          "description": "The IpAccessControlList Sid that identifies the IpAddress resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "IpAccessControlListSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that identifies the IpAddress resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateSipIpAddressBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update an IpAddress resource.",
      "result_type": {
        "name": "ApiV2010AccountSipSipIpAccessControlListSipIpAddress",
        "type": "named"
      }
    },
    "UpdateSiprec": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Siprec/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Siprec resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Siprec resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Siprec resource, or the `name` used when creating the resource",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Siprec/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateSiprecBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Stop a Siprec using either the SID of the Siprec resource or the `name` used when creating the resource",
      "result_type": {
        "name": "ApiV2010AccountCallSiprec",
        "type": "named"
      }
    },
    "UpdateStream": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Streams/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Stream resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "CallSid": {
          "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Stream resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "CallSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID or the `name` of the Stream resource to be stopped",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Streams/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateStreamBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Stop a Stream using either the SID of the Stream resource or the `name` used when creating the resource",
      "result_type": {
        "name": "ApiV2010AccountCallStream",
        "type": "named"
      }
    },
    "UpdateUsageTrigger": {
      "request": {
        "url": "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "AccountSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The Twilio-provided string that uniquely identifies the UsageTrigger resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^UT[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateUsageTriggerBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Update an instance of a usage trigger",
      "result_type": {
        "name": "ApiV2010AccountUsageUsageTrigger",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "20100401AmdStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401AnnounceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401AsyncAmdStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401CallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401ConferenceRecordingStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401ConferenceStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401DeauthorizeCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401FallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401HoldMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401Method": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401RecordingStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401SmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401SmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401StatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401VoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401VoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401VoiceStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "20100401WaitMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "AccountEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "active",
          "suspended",
          "closed"
        ],
        "type": "enum"
      }
    },
    "AccountEnumType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "Trial",
          "Full"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountAddressDependentPhoneNumberSmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountAddressDependentPhoneNumberSmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountAddressDependentPhoneNumberStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountAddressDependentPhoneNumberVoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountAddressDependentPhoneNumberVoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountApplicationSmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountApplicationSmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountApplicationStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountApplicationVoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountApplicationVoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountCallCallNotificationInstanceRequestMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountCallCallNotificationRequestMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountConnectAppDeauthorizeCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalSmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalSmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalVoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocalVoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileSmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileSmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileVoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberMobileVoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeSmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeSmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeVoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFreeVoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberSmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberSmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberVoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountIncomingPhoneNumberVoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountNotificationInstanceRequestMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountNotificationRequestMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountShortCodeSmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountShortCodeSmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountSipSipDomainVoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountSipSipDomainVoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountSipSipDomainVoiceStatusCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ApiV2010AccountUsageUsageTriggerCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "AuthorizedConnectAppEnumPermission": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "get-all",
          "post-all"
        ],
        "type": "enum"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "CallEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "queued",
          "ringing",
          "in-progress",
          "completed",
          "busy",
          "failed",
          "no-answer",
          "canceled"
        ],
        "type": "enum"
      }
    },
    "CallEnumUpdateStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "canceled",
          "completed"
        ],
        "type": "enum"
      }
    },
    "CallRecordingEnumSource": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DialVerb",
          "Conference",
          "OutboundAPI",
          "Trunking",
          "RecordVerb",
          "StartCallRecordingAPI",
          "StartConferenceRecordingAPI"
        ],
        "type": "enum"
      }
    },
    "CallRecordingEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "in-progress",
          "paused",
          "stopped",
          "processing",
          "completed",
          "absent"
        ],
        "type": "enum"
      }
    },
    "ConferenceEnumReasonConferenceEnded": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "conference-ended-via-api",
          "participant-with-end-conference-on-exit-left",
          "participant-with-end-conference-on-exit-kicked",
          "last-participant-kicked",
          "last-participant-left"
        ],
        "type": "enum"
      }
    },
    "ConferenceEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "init",
          "in-progress",
          "completed"
        ],
        "type": "enum"
      }
    },
    "ConferenceEnumUpdateStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "completed"
        ],
        "type": "enum"
      }
    },
    "ConferenceRecordingEnumSource": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DialVerb",
          "Conference",
          "OutboundAPI",
          "Trunking",
          "RecordVerb",
          "StartCallRecordingAPI",
          "StartConferenceRecordingAPI"
        ],
        "type": "enum"
      }
    },
    "ConferenceRecordingEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "in-progress",
          "paused",
          "stopped",
          "processing",
          "completed",
          "absent"
        ],
        "type": "enum"
      }
    },
    "ConnectAppEnumPermission": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "get-all",
          "post-all"
        ],
        "type": "enum"
      }
    },
    "Date": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "date"
      }
    },
    "DependentPhoneNumberEnumAddressRequirement": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "any",
          "local",
          "foreign"
        ],
        "type": "enum"
      }
    },
    "DependentPhoneNumberEnumEmergencyStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "Active",
          "Inactive"
        ],
        "type": "enum"
      }
    },
    "Float64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "float64"
      }
    },
    "IncomingPhoneNumberEnumAddressRequirement": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "any",
          "local",
          "foreign"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberEnumEmergencyAddressStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "registered",
          "unregistered",
          "pending-registration",
          "registration-failure",
          "pending-unregistration",
          "unregistration-failure"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberEnumEmergencyStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "Active",
          "Inactive"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberEnumVoiceReceiveMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "voice",
          "fax"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberLocalEnumAddressRequirement": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "any",
          "local",
          "foreign"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberLocalEnumEmergencyAddressStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "registered",
          "unregistered",
          "pending-registration",
          "registration-failure",
          "pending-unregistration",
          "unregistration-failure"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberLocalEnumEmergencyStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "Active",
          "Inactive"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberLocalEnumVoiceReceiveMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "voice",
          "fax"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberMobileEnumAddressRequirement": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "any",
          "local",
          "foreign"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberMobileEnumEmergencyAddressStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "registered",
          "unregistered",
          "pending-registration",
          "registration-failure",
          "pending-unregistration",
          "unregistration-failure"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberMobileEnumEmergencyStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "Active",
          "Inactive"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberMobileEnumVoiceReceiveMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "voice",
          "fax"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberTollFreeEnumAddressRequirement": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "any",
          "local",
          "foreign"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberTollFreeEnumEmergencyAddressStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "registered",
          "unregistered",
          "pending-registration",
          "registration-failure",
          "pending-unregistration",
          "unregistration-failure"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberTollFreeEnumEmergencyStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "Active",
          "Inactive"
        ],
        "type": "enum"
      }
    },
    "IncomingPhoneNumberTollFreeEnumVoiceReceiveMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "voice",
          "fax"
        ],
        "type": "enum"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "MessageEnumAddressRetention": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "retain",
          "obfuscate"
        ],
        "type": "enum"
      }
    },
    "MessageEnumContentRetention": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "retain",
          "discard"
        ],
        "type": "enum"
      }
    },
    "MessageEnumDirection": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inbound",
          "outbound-api",
          "outbound-call",
          "outbound-reply"
        ],
        "type": "enum"
      }
    },
    "MessageEnumRiskCheck": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "enable",
          "disable"
        ],
        "type": "enum"
      }
    },
    "MessageEnumScheduleType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "fixed"
        ],
        "type": "enum"
      }
    },
    "MessageEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "queued",
          "sending",
          "sent",
          "failed",
          "delivered",
          "undelivered",
          "receiving",
          "received",
          "accepted",
          "scheduled",
          "read",
          "partially_delivered",
          "canceled"
        ],
        "type": "enum"
      }
    },
    "MessageEnumUpdateStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "canceled"
        ],
        "type": "enum"
      }
    },
    "MessageFeedbackEnumOutcome": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "confirmed",
          "unconfirmed"
        ],
        "type": "enum"
      }
    },
    "ParticipantEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "queued",
          "connecting",
          "ringing",
          "connected",
          "complete",
          "failed"
        ],
        "type": "enum"
      }
    },
    "PaymentsEnumBankAccountType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "consumer-checking",
          "consumer-savings",
          "commercial-checking"
        ],
        "type": "enum"
      }
    },
    "PaymentsEnumCapture": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "payment-card-number",
          "expiration-date",
          "security-code",
          "postal-code",
          "bank-routing-number",
          "bank-account-number"
        ],
        "type": "enum"
      }
    },
    "PaymentsEnumPaymentMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "credit-card",
          "ach-debit"
        ],
        "type": "enum"
      }
    },
    "PaymentsEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "complete",
          "cancel"
        ],
        "type": "enum"
      }
    },
    "PaymentsEnumTokenType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "one-time",
          "reusable",
          "payment-method"
        ],
        "type": "enum"
      }
    },
    "RealtimeTranscriptionEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "in-progress",
          "stopped"
        ],
        "type": "enum"
      }
    },
    "RealtimeTranscriptionEnumTrack": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inbound_track",
          "outbound_track",
          "both_tracks"
        ],
        "type": "enum"
      }
    },
    "RealtimeTranscriptionEnumUpdateStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "stopped"
        ],
        "type": "enum"
      }
    },
    "RecordingAddOnResultEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "canceled",
          "completed",
          "deleted",
          "failed",
          "in-progress",
          "init",
          "processing",
          "queued"
        ],
        "type": "enum"
      }
    },
    "RecordingEnumSource": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DialVerb",
          "Conference",
          "OutboundAPI",
          "Trunking",
          "RecordVerb",
          "StartCallRecordingAPI",
          "StartConferenceRecordingAPI"
        ],
        "type": "enum"
      }
    },
    "RecordingEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "in-progress",
          "paused",
          "stopped",
          "processing",
          "completed",
          "absent",
          "deleted"
        ],
        "type": "enum"
      }
    },
    "RecordingTranscriptionEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "in-progress",
          "completed",
          "failed"
        ],
        "type": "enum"
      }
    },
    "SiprecEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "in-progress",
          "stopped"
        ],
        "type": "enum"
      }
    },
    "SiprecEnumTrack": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inbound_track",
          "outbound_track",
          "both_tracks"
        ],
        "type": "enum"
      }
    },
    "SiprecEnumUpdateStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "stopped"
        ],
        "type": "enum"
      }
    },
    "StreamEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "in-progress",
          "stopped"
        ],
        "type": "enum"
      }
    },
    "StreamEnumTrack": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inbound_track",
          "outbound_track",
          "both_tracks"
        ],
        "type": "enum"
      }
    },
    "StreamEnumUpdateStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "stopped"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "TranscriptionEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "in-progress",
          "completed",
          "failed"
        ],
        "type": "enum"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "UsageRecordAllTimeEnumCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    },
    "UsageRecordDailyEnumCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    },
    "UsageRecordEnumCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    },
    "UsageRecordLastMonthEnumCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    },
    "UsageRecordMonthlyEnumCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    },
    "UsageRecordThisMonthEnumCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    },
    "UsageRecordTodayEnumCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    },
    "UsageRecordYearlyEnumCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    },
    "UsageRecordYesterdayEnumCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    },
    "UsageTriggerEnumRecurring": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "daily",
          "monthly",
          "yearly",
          "alltime"
        ],
        "type": "enum"
      }
    },
    "UsageTriggerEnumTriggerField": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "count",
          "usage",
          "price"
        ],
        "type": "enum"
      }
    },
    "UsageTriggerEnumUsageCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a2p-registration-fees",
          "agent-conference",
          "amazon-polly",
          "answering-machine-detection",
          "authy-authentications",
          "authy-calls-outbound",
          "authy-monthly-fees",
          "authy-phone-intelligence",
          "authy-phone-verifications",
          "authy-sms-outbound",
          "call-progess-events",
          "calleridlookups",
          "calls",
          "calls-client",
          "calls-globalconference",
          "calls-inbound",
          "calls-inbound-local",
          "calls-inbound-mobile",
          "calls-inbound-tollfree",
          "calls-outbound",
          "calls-pay-verb-transactions",
          "calls-recordings",
          "calls-sip",
          "calls-sip-inbound",
          "calls-sip-outbound",
          "calls-transfers",
          "carrier-lookups",
          "conversations",
          "conversations-api-requests",
          "conversations-conversation-events",
          "conversations-endpoint-connectivity",
          "conversations-events",
          "conversations-participant-events",
          "conversations-participants",
          "cps",
          "flex-usage",
          "fraud-lookups",
          "group-rooms",
          "group-rooms-data-track",
          "group-rooms-encrypted-media-recorded",
          "group-rooms-media-downloaded",
          "group-rooms-media-recorded",
          "group-rooms-media-routed",
          "group-rooms-media-stored",
          "group-rooms-participant-minutes",
          "group-rooms-recorded-minutes",
          "imp-v1-usage",
          "lookups",
          "marketplace",
          "marketplace-algorithmia-named-entity-recognition",
          "marketplace-cadence-transcription",
          "marketplace-cadence-translation",
          "marketplace-capio-speech-to-text",
          "marketplace-convriza-ababa",
          "marketplace-deepgram-phrase-detector",
          "marketplace-digital-segment-business-info",
          "marketplace-facebook-offline-conversions",
          "marketplace-google-speech-to-text",
          "marketplace-ibm-watson-message-insights",
          "marketplace-ibm-watson-message-sentiment",
          "marketplace-ibm-watson-recording-analysis",
          "marketplace-ibm-watson-tone-analyzer",
          "marketplace-icehook-systems-scout",
          "marketplace-infogroup-dataaxle-bizinfo",
          "marketplace-keen-io-contact-center-analytics",
          "marketplace-marchex-cleancall",
          "marketplace-marchex-sentiment-analysis-for-sms",
          "marketplace-marketplace-nextcaller-social-id",
          "marketplace-mobile-commons-opt-out-classifier",
          "marketplace-nexiwave-voicemail-to-text",
          "marketplace-nextcaller-advanced-caller-identification",
          "marketplace-nomorobo-spam-score",
          "marketplace-payfone-tcpa-compliance",
          "marketplace-remeeting-automatic-speech-recognition",
          "marketplace-tcpa-defense-solutions-blacklist-feed",
          "marketplace-telo-opencnam",
          "marketplace-truecnam-true-spam",
          "marketplace-twilio-caller-name-lookup-us",
          "marketplace-twilio-carrier-information-lookup",
          "marketplace-voicebase-pci",
          "marketplace-voicebase-transcription",
          "marketplace-voicebase-transcription-custom-vocabulary",
          "marketplace-whitepages-pro-caller-identification",
          "marketplace-whitepages-pro-phone-intelligence",
          "marketplace-whitepages-pro-phone-reputation",
          "marketplace-wolfarm-spoken-results",
          "marketplace-wolfram-short-answer",
          "marketplace-ytica-contact-center-reporting-analytics",
          "mediastorage",
          "mms",
          "mms-inbound",
          "mms-inbound-longcode",
          "mms-inbound-shortcode",
          "mms-messages-carrierfees",
          "mms-outbound",
          "mms-outbound-longcode",
          "mms-outbound-shortcode",
          "monitor-reads",
          "monitor-storage",
          "monitor-writes",
          "notify",
          "notify-actions-attempts",
          "notify-channels",
          "number-format-lookups",
          "pchat",
          "pchat-users",
          "peer-to-peer-rooms-participant-minutes",
          "pfax",
          "pfax-minutes",
          "pfax-minutes-inbound",
          "pfax-minutes-outbound",
          "pfax-pages",
          "phonenumbers",
          "phonenumbers-cps",
          "phonenumbers-emergency",
          "phonenumbers-local",
          "phonenumbers-mobile",
          "phonenumbers-setups",
          "phonenumbers-tollfree",
          "premiumsupport",
          "proxy",
          "proxy-active-sessions",
          "pstnconnectivity",
          "pv",
          "pv-composition-media-downloaded",
          "pv-composition-media-encrypted",
          "pv-composition-media-stored",
          "pv-composition-minutes",
          "pv-recording-compositions",
          "pv-room-participants",
          "pv-room-participants-au1",
          "pv-room-participants-br1",
          "pv-room-participants-ie1",
          "pv-room-participants-jp1",
          "pv-room-participants-sg1",
          "pv-room-participants-us1",
          "pv-room-participants-us2",
          "pv-rooms",
          "pv-sip-endpoint-registrations",
          "recordings",
          "recordingstorage",
          "rooms-group-bandwidth",
          "rooms-group-minutes",
          "rooms-peer-to-peer-minutes",
          "shortcodes",
          "shortcodes-customerowned",
          "shortcodes-mms-enablement",
          "shortcodes-mps",
          "shortcodes-random",
          "shortcodes-uk",
          "shortcodes-vanity",
          "small-group-rooms",
          "small-group-rooms-data-track",
          "small-group-rooms-participant-minutes",
          "sms",
          "sms-inbound",
          "sms-inbound-longcode",
          "sms-inbound-shortcode",
          "sms-messages-carrierfees",
          "sms-messages-features",
          "sms-messages-features-senderid",
          "sms-outbound",
          "sms-outbound-content-inspection",
          "sms-outbound-longcode",
          "sms-outbound-shortcode",
          "speech-recognition",
          "studio-engagements",
          "sync",
          "sync-actions",
          "sync-endpoint-hours",
          "sync-endpoint-hours-above-daily-cap",
          "taskrouter-tasks",
          "totalprice",
          "transcriptions",
          "trunking-cps",
          "trunking-emergency-calls",
          "trunking-origination",
          "trunking-origination-local",
          "trunking-origination-mobile",
          "trunking-origination-tollfree",
          "trunking-recordings",
          "trunking-secure",
          "trunking-termination",
          "tts-google",
          "turnmegabytes",
          "turnmegabytes-australia",
          "turnmegabytes-brasil",
          "turnmegabytes-germany",
          "turnmegabytes-india",
          "turnmegabytes-ireland",
          "turnmegabytes-japan",
          "turnmegabytes-singapore",
          "turnmegabytes-useast",
          "turnmegabytes-uswest",
          "twilio-interconnect",
          "verify-push",
          "verify-totp",
          "verify-whatsapp-conversations-business-initiated",
          "video-recordings",
          "virtual-agent",
          "voice-insights",
          "voice-insights-client-insights-on-demand-minute",
          "voice-insights-ptsn-insights-on-demand-minute",
          "voice-insights-sip-interface-insights-on-demand-minute",
          "voice-insights-sip-trunking-insights-on-demand-minute",
          "voice-intelligence",
          "voice-intelligence-transcription",
          "voice-intelligence-operators",
          "wireless",
          "wireless-orders",
          "wireless-orders-artwork",
          "wireless-orders-bulk",
          "wireless-orders-esim",
          "wireless-orders-starter",
          "wireless-usage",
          "wireless-usage-commands",
          "wireless-usage-commands-africa",
          "wireless-usage-commands-asia",
          "wireless-usage-commands-centralandsouthamerica",
          "wireless-usage-commands-europe",
          "wireless-usage-commands-home",
          "wireless-usage-commands-northamerica",
          "wireless-usage-commands-oceania",
          "wireless-usage-commands-roaming",
          "wireless-usage-data",
          "wireless-usage-data-africa",
          "wireless-usage-data-asia",
          "wireless-usage-data-centralandsouthamerica",
          "wireless-usage-data-custom-additionalmb",
          "wireless-usage-data-custom-first5mb",
          "wireless-usage-data-domestic-roaming",
          "wireless-usage-data-europe",
          "wireless-usage-data-individual-additionalgb",
          "wireless-usage-data-individual-firstgb",
          "wireless-usage-data-international-roaming-canada",
          "wireless-usage-data-international-roaming-india",
          "wireless-usage-data-international-roaming-mexico",
          "wireless-usage-data-northamerica",
          "wireless-usage-data-oceania",
          "wireless-usage-data-pooled",
          "wireless-usage-data-pooled-downlink",
          "wireless-usage-data-pooled-uplink",
          "wireless-usage-mrc",
          "wireless-usage-mrc-custom",
          "wireless-usage-mrc-individual",
          "wireless-usage-mrc-pooled",
          "wireless-usage-mrc-suspended",
          "wireless-usage-sms",
          "wireless-usage-voice"
        ],
        "type": "enum"
      }
    }
  }
}
