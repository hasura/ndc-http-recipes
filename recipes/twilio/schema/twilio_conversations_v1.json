{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://conversations.twilio.com",
          "env": "TWILIO_CONVERSATIONS_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "basic",
        "header": "",
        "username": {
          "env": "TWILIO_API_KEY"
        },
        "password": {
          "env": "TWILIO_API_SECRET"
        }
      }
    },
    "security": [
      {
        "accountSid_authToken": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "conversationsFetchConfiguration": {
      "request": {
        "url": "/v1/Configuration",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "Fetch the global configuration of conversations on your account",
      "result_type": {
        "name": "ConversationsConversationsV1Configuration",
        "type": "named"
      }
    },
    "conversationsFetchConfigurationAddress": {
      "request": {
        "url": "/v1/Configuration/Addresses/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Address Configuration resource. This value can be either the `sid` or the `address` of the configuration",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch an address configuration",
      "result_type": {
        "name": "ConversationsConversationsV1ConfigurationAddress",
        "type": "named"
      }
    },
    "conversationsFetchConfigurationWebhook": {
      "request": {
        "url": "/v1/Configuration/Webhooks",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "GET /v1/Configuration/Webhooks",
      "result_type": {
        "name": "ConversationsConversationsV1ConfigurationConfigurationWebhook",
        "type": "named"
      }
    },
    "conversationsFetchConversation": {
      "request": {
        "url": "/v1/Conversations/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch a conversation from your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1Conversation",
        "type": "named"
      }
    },
    "conversationsFetchConversationMessage": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Messages/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a message from the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationMessage",
        "type": "named"
      }
    },
    "conversationsFetchConversationMessageReceipt": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Messages/{MessageSid}/Receipts/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MessageSid": {
          "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessageSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DY[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch the delivery and read receipts of the conversation message",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationMessageConversationMessageReceipt",
        "type": "named"
      }
    },
    "conversationsFetchConversationParticipant": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Participants/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant's `identity` rather than the SID.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch a participant of the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationParticipant",
        "type": "named"
      }
    },
    "conversationsFetchConversationScopedWebhook": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Webhooks/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch the configuration of a conversation-scoped webhook",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationScopedWebhook",
        "type": "named"
      }
    },
    "conversationsFetchCredential": {
      "request": {
        "url": "/v1/Credentials/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a push notification credential from your account",
      "result_type": {
        "name": "ConversationsConversationsV1Credential",
        "type": "named"
      }
    },
    "conversationsFetchRole": {
      "request": {
        "url": "/v1/Roles/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Role resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a user role from your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1Role",
        "type": "named"
      }
    },
    "conversationsFetchService": {
      "request": {
        "url": "/v1/Services/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a conversation service from your account",
      "result_type": {
        "name": "ConversationsConversationsV1Service",
        "type": "named"
      }
    },
    "conversationsFetchServiceBinding": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Bindings/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a push notification binding from the conversation service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceBinding",
        "type": "named"
      }
    },
    "conversationsFetchServiceConfiguration": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Configuration",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the Service configuration resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch the configuration of a conversation service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConfiguration",
        "type": "named"
      }
    },
    "conversationsFetchServiceConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch a conversation from your service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversation",
        "type": "named"
      }
    },
    "conversationsFetchServiceConversationMessage": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a message from the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationMessage",
        "type": "named"
      }
    },
    "conversationsFetchServiceConversationMessageReceipt": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages/{MessageSid}/Receipts/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Message resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MessageSid": {
          "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessageSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DY[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch the delivery and read receipts of the conversation message",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceipt",
        "type": "named"
      }
    },
    "conversationsFetchServiceConversationParticipant": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant's `identity` rather than the SID.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch a participant of the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationParticipant",
        "type": "named"
      }
    },
    "conversationsFetchServiceConversationScopedWebhook": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Webhooks/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch the configuration of a conversation-scoped webhook",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationScopedWebhook",
        "type": "named"
      }
    },
    "conversationsFetchServiceNotification": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Configuration/Notifications",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch push notification service settings",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConfigurationServiceNotification",
        "type": "named"
      }
    },
    "conversationsFetchServiceRole": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Roles/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to fetch the Role resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Role resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a user role from your service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceRole",
        "type": "named"
      }
    },
    "conversationsFetchServiceUser": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Users/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to fetch the User resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the User resource to fetch. This value can be either the `sid` or the `identity` of the User resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch a conversation user from your service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceUser",
        "type": "named"
      }
    },
    "conversationsFetchServiceUserConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Users/{UserSid}/Conversations/{ConversationSid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UserSid": {
          "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "UserSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch a specific User Conversation.",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceUserServiceUserConversation",
        "type": "named"
      }
    },
    "conversationsFetchServiceWebhookConfiguration": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Configuration/Webhooks",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a specific service webhook configuration.",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration",
        "type": "named"
      }
    },
    "conversationsFetchUser": {
      "request": {
        "url": "/v1/Users/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the User resource to fetch. This value can be either the `sid` or the `identity` of the User resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch a conversation user from your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1User",
        "type": "named"
      }
    },
    "conversationsFetchUserConversation": {
      "request": {
        "url": "/v1/Users/{UserSid}/Conversations/{ConversationSid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UserSid": {
          "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "UserSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch a specific User Conversation.",
      "result_type": {
        "name": "ConversationsConversationsV1UserUserConversation",
        "type": "named"
      }
    },
    "conversationsListConfigurationAddress": {
      "request": {
        "url": "/v1/Configuration/Addresses",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Type": {
          "description": "Filter the address configurations by its type. This value can be one of: `whatsapp`, `sms`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Type",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of address configurations for an account",
      "result_type": {
        "name": "ConversationsListConfigurationAddressResult",
        "type": "named"
      }
    },
    "conversationsListConversation": {
      "request": {
        "url": "/v1/Conversations",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EndDate": {
          "description": "Defines the end of the date range for filtering conversations by their creation date. Only conversations that were created on or before this date will appear in the results.  The date must be in ISO8601 format, specifically capturing up to the end of the specified date (YYYY-MM-DDT23:59:59Z), to ensure that conversations from the entire end day are included. This parameter can be combined with other filters. If this filter is used, the returned list is sorted by latest conversation creation date in descending order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Specifies the beginning of the date range for filtering Conversations based on their creation date. Conversations that were created on or after this date will be included in the results. The date must be in ISO8601 format, specifically starting at the beginning of the specified date (YYYY-MM-DDT00:00:00Z), for precise filtering. This parameter can be combined with other filters. If this filter is used, the returned list is sorted by latest conversation creation date in descending order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "State": {
          "description": "State for sorting and filtering list of Conversations. Can be `active`, `inactive` or `closed`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "name": "State",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of conversations in your account's default service",
      "result_type": {
        "name": "ConversationsListConversationResult",
        "type": "named"
      }
    },
    "conversationsListConversationMessage": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Messages",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for messages.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Order": {
          "description": "The sort order of the returned messages. Can be: `asc` (ascending) or `desc` (descending), with `asc` as the default.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationMessageEnumOrderType",
              "type": "named"
            }
          },
          "http": {
            "name": "Order",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all messages in the conversation",
      "result_type": {
        "name": "ConversationsListConversationMessageResult",
        "type": "named"
      }
    },
    "conversationsListConversationMessageReceipt": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Messages/{MessageSid}/Receipts",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MessageSid": {
          "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessageSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all delivery and read receipts of the conversation message",
      "result_type": {
        "name": "ConversationsListConversationMessageReceiptResult",
        "type": "named"
      }
    },
    "conversationsListConversationParticipant": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Participants",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all participants of the conversation",
      "result_type": {
        "name": "ConversationsListConversationParticipantResult",
        "type": "named"
      }
    },
    "conversationsListConversationScopedWebhook": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Webhooks",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all webhooks scoped to the conversation",
      "result_type": {
        "name": "ConversationsListConversationScopedWebhookResult",
        "type": "named"
      }
    },
    "conversationsListCredential": {
      "request": {
        "url": "/v1/Credentials",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all push notification credentials on your account",
      "result_type": {
        "name": "ConversationsListCredentialResult",
        "type": "named"
      }
    },
    "conversationsListParticipantConversation": {
      "request": {
        "url": "/v1/ParticipantConversations",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Address": {
          "description": "A unique string identifier for the conversation participant who's not a Conversation User. This parameter could be found in messaging_binding.address field of Participant resource. It should be url-encoded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Address",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Identity",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all Conversations that this Participant belongs to by identity or by address. Only one parameter should be specified.",
      "result_type": {
        "name": "ConversationsListParticipantConversationResult",
        "type": "named"
      }
    },
    "conversationsListRole": {
      "request": {
        "url": "/v1/Roles",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all user roles in your account's default service",
      "result_type": {
        "name": "ConversationsListRoleResult",
        "type": "named"
      }
    },
    "conversationsListService": {
      "request": {
        "url": "/v1/Services",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all conversation services on your account",
      "result_type": {
        "name": "ConversationsListServiceResult",
        "type": "named"
      }
    },
    "conversationsListServiceBinding": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Bindings",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "BindingType": {
          "description": "The push technology used by the Binding resources to read.  Can be: `apn`, `gcm`, or `fcm`.  See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsServiceBindingEnumBindingType",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "name": "BindingType",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Identity": {
          "description": "The identity of a [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) this binding belongs to. See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "name": "Identity",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all push notification bindings in the conversation service",
      "result_type": {
        "name": "ConversationsListServiceBindingResult",
        "type": "named"
      }
    },
    "conversationsListServiceConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "EndDate": {
          "description": "Defines the end of the date range for filtering conversations by their creation date. Only conversations that were created on or before this date will appear in the results.  The date must be in ISO8601 format, specifically capturing up to the end of the specified date (YYYY-MM-DDT23:59:59Z), to ensure that conversations from the entire end day are included. This parameter can be combined with other filters. If this filter is used, the returned list is sorted by latest conversation creation date in descending order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "StartDate": {
          "description": "Specifies the beginning of the date range for filtering Conversations based on their creation date. Conversations that were created on or after this date will be included in the results. The date must be in ISO8601 format, specifically starting at the beginning of the specified date (YYYY-MM-DDT00:00:00Z), for precise filtering. This parameter can be combined with other filters. If this filter is used, the returned list is sorted by latest conversation creation date in descending order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "State": {
          "description": "State for sorting and filtering list of Conversations. Can be `active`, `inactive` or `closed`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "name": "State",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of conversations in your service",
      "result_type": {
        "name": "ConversationsListServiceConversationResult",
        "type": "named"
      }
    },
    "conversationsListServiceConversationMessage": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for messages.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Order": {
          "description": "The sort order of the returned messages. Can be: `asc` (ascending) or `desc` (descending), with `asc` as the default.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationMessageEnumOrderType",
              "type": "named"
            }
          },
          "http": {
            "name": "Order",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all messages in the conversation",
      "result_type": {
        "name": "ConversationsListServiceConversationMessageResult",
        "type": "named"
      }
    },
    "conversationsListServiceConversationMessageReceipt": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages/{MessageSid}/Receipts",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Message resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "MessageSid": {
          "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "MessageSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all delivery and read receipts of the conversation message",
      "result_type": {
        "name": "ConversationsListServiceConversationMessageReceiptResult",
        "type": "named"
      }
    },
    "conversationsListServiceConversationParticipant": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all participants of the conversation",
      "result_type": {
        "name": "ConversationsListServiceConversationParticipantResult",
        "type": "named"
      }
    },
    "conversationsListServiceConversationScopedWebhook": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Webhooks",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all webhooks scoped to the conversation",
      "result_type": {
        "name": "ConversationsListServiceConversationScopedWebhookResult",
        "type": "named"
      }
    },
    "conversationsListServiceParticipantConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/ParticipantConversations",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Address": {
          "description": "A unique string identifier for the conversation participant who's not a Conversation User. This parameter could be found in messaging_binding.address field of Participant resource. It should be url-encoded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Address",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant Conversations resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Identity",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all Conversations that this Participant belongs to by identity or by address. Only one parameter should be specified.",
      "result_type": {
        "name": "ConversationsListServiceParticipantConversationResult",
        "type": "named"
      }
    },
    "conversationsListServiceRole": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Roles",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to read the Role resources from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all user roles in your service",
      "result_type": {
        "name": "ConversationsListServiceRoleResult",
        "type": "named"
      }
    },
    "conversationsListServiceUser": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Users",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to read the User resources from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all conversation users in your service",
      "result_type": {
        "name": "ConversationsListServiceUserResult",
        "type": "named"
      }
    },
    "conversationsListServiceUserConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Users/{UserSid}/Conversations",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UserSid": {
          "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "UserSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all User Conversations for the User.",
      "result_type": {
        "name": "ConversationsListServiceUserConversationResult",
        "type": "named"
      }
    },
    "conversationsListUser": {
      "request": {
        "url": "/v1/Users",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all conversation users in your account's default service",
      "result_type": {
        "name": "ConversationsListUserResult",
        "type": "named"
      }
    },
    "conversationsListUserConversation": {
      "request": {
        "url": "/v1/Users/{UserSid}/Conversations",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UserSid": {
          "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "UserSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a list of all User Conversations for the User.",
      "result_type": {
        "name": "ConversationsListUserConversationResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "ConversationsConversationsV1Configuration": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "default_chat_service_sid": {
          "description": "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "default_closed_timer": {
          "description": "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "default_inactive_timer": {
          "description": "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "default_messaging_service_sid": {
          "description": "The SID of the default [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) used when creating a conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "links": {
          "description": "Contains absolute API resource URLs to access the webhook and default service configurations.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "url": {
          "description": "An absolute API resource URL for this global configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.configuration"
    },
    "ConversationsConversationsV1ConfigurationAddress": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "address": {
          "description": "The unique address to be configured. The address can be a whatsapp address or phone number",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_country": {
          "description": "An ISO 3166-1 alpha-2n country code which the address belongs to. This is currently only applicable to short code addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "auto_creation": {
          "description": "Auto Creation configuration for the address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The human-readable name of this configuration, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "type": {
          "description": "Type of Address, value can be `whatsapp` or `sms`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this address configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.configuration_address"
    },
    "ConversationsConversationsV1ConfigurationConfigurationWebhook": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "filters": {
          "description": "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConfigurationWebhookEnumMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "post_webhook_url": {
          "description": "The absolute url the post-event webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "pre_webhook_url": {
          "description": "The absolute url the pre-event webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "target": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConfigurationWebhookEnumTarget",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource API resource URL for this webhook.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.configuration.configuration_webhook"
    },
    "ConversationsConversationsV1Conversation": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "bindings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "chat_service_sid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "messaging_service_sid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "timers": {
          "description": "Timer date values representing state update for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.conversation"
    },
    "ConversationsConversationsV1ConversationConversationMessage": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "author": {
          "description": "The channel specific identifier of the message's author. Defaults to `system`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "body": {
          "description": "The content of the message, can be up to 1,600 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "content_sid": {
          "description": "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content) template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^HX[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated. `null` if the message has not been edited.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "delivery": {
          "description": "An object that contains the summary of delivery statuses for the message to non-chat participants.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "index": {
          "description": "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "links": {
          "description": "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "media": {
          "description": "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {}
          }
        },
        "participant_sid": {
          "description": "The unique ID of messages's author participant. Null in case of `system` sent message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "An absolute API resource API URL for this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.conversation.conversation_message"
    },
    "ConversationsConversationsV1ConversationConversationMessageConversationMessageReceipt": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "channel_message_sid": {
          "description": "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "error_code": {
          "description": "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status,",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "message_sid": {
          "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "participant_sid": {
          "description": "The unique ID of the participant the delivery receipt belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DY[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationMessageReceiptEnumDeliveryStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this delivery receipt.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.conversation.conversation_message.conversation_message_receipt"
    },
    "ConversationsConversationsV1ConversationConversationParticipant": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "last_read_message_index": {
          "description": "Index of last read message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "last_read_timestamp": {
          "description": "Timestamp of last read message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "messaging_binding": {
          "description": "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "role_sid": {
          "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "An absolute API resource URL for this participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.conversation.conversation_participant"
    },
    "ConversationsConversationsV1ConversationConversationScopedWebhook": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "configuration": {
          "description": "The configuration of this webhook. Is defined based on target.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "target": {
          "description": "The target of this webhook: `webhook`, `studio`, `trigger`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this webhook.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.conversation.conversation_scoped_webhook"
    },
    "ConversationsConversationsV1ConversationWithParticipants": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "bindings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "chat_service_sid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "messaging_service_sid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationWithParticipantsEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "timers": {
          "description": "Timer date values representing state update for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.conversation_with_participants"
    },
    "ConversationsConversationsV1Credential": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The human-readable name of this credential, limited to 64 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sandbox": {
          "description": "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCredentialEnumPushType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this credential.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.credential"
    },
    "ConversationsConversationsV1ParticipantConversation": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "chat_service_sid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "conversation_created_by": {
          "description": "Identity of the creator of this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "conversation_date_created": {
          "description": "The date that this conversation was created, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "conversation_date_updated": {
          "description": "The date that this conversation was last updated, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "conversation_friendly_name": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) this Participant belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsParticipantConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "conversation_timers": {
          "description": "Timer date values representing state update for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "conversation_unique_name": {
          "description": "An application-defined string that uniquely identifies the Conversation resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "participant_identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "participant_messaging_binding": {
          "description": "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "participant_sid": {
          "description": "The unique ID of the [Participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "participant_user_sid": {
          "description": "The unique string that identifies the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^US[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      },
      "alias": "conversations.v1.participant_conversation"
    },
    "ConversationsConversationsV1Role": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "permissions": {
          "description": "An array of the permissions the role has been granted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Role resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsRoleEnumRoleType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this user role.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.role"
    },
    "ConversationsConversationsV1Service": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The human-readable name of this service, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "Contains absolute API resource URLs to access conversations, users, roles, bindings and configuration of this service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "An absolute API resource URL for this service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service"
    },
    "ConversationsConversationsV1ServiceServiceBinding": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this binding.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "binding_type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceBindingEnumBindingType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "credential_sid": {
          "description": "The SID of the [Credential](https://www.twilio.com/docs/conversations/api/credential-resource) for the binding. See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "endpoint": {
          "description": "The unique endpoint identifier for the Binding. The format of this value depends on the `binding_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "identity": {
          "description": "The application-defined string that uniquely identifies the [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more info.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "message_types": {
          "description": "The [Conversation message types](https://www.twilio.com/docs/chat/push-notification-configuration#push-types) the binding is subscribed to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^BS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "An absolute API resource URL for this binding.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_binding"
    },
    "ConversationsConversationsV1ServiceServiceConfiguration": {
      "fields": {
        "chat_service_sid": {
          "description": "The unique string that we created to identify the Service configuration resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "default_chat_service_role_sid": {
          "description": "The service-level role assigned to users when they are added to the service. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "default_conversation_creator_role_sid": {
          "description": "The conversation-level role assigned to a conversation creator when they join a new conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "default_conversation_role_sid": {
          "description": "The conversation-level role assigned to users when they are added to a conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "links": {
          "description": "Contains an absolute API resource URL to access the push notifications configuration of this service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "reachability_enabled": {
          "description": "Whether the [Reachability Indicator](https://www.twilio.com/docs/conversations/reachability) is enabled for this Conversations Service. The default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this service configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_configuration"
    },
    "ConversationsConversationsV1ServiceServiceConfigurationServiceNotification": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "added_to_conversation": {
          "description": "The Push Notification configuration for being added to a Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "log_enabled": {
          "description": "Weather the notification logging is enabled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "new_message": {
          "description": "The Push Notification configuration for New Messages.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "removed_from_conversation": {
          "description": "The Push Notification configuration for being removed from a Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "url": {
          "description": "An absolute API resource URL for this configuration.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_configuration.service_notification"
    },
    "ConversationsConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "chat_service_sid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "filters": {
          "description": "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceWebhookConfigurationEnumMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "post_webhook_url": {
          "description": "The absolute url the post-event webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "pre_webhook_url": {
          "description": "The absolute url the pre-event webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "description": "An absolute API resource URL for this webhook.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_configuration.service_webhook_configuration"
    },
    "ConversationsConversationsV1ServiceServiceConversation": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "bindings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "chat_service_sid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "messaging_service_sid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "timers": {
          "description": "Timer date values representing state update for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_conversation"
    },
    "ConversationsConversationsV1ServiceServiceConversationServiceConversationMessage": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "author": {
          "description": "The channel specific identifier of the message's author. Defaults to `system`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "body": {
          "description": "The content of the message, can be up to 1,600 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "content_sid": {
          "description": "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content) template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^HX[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated. `null` if the message has not been edited.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "delivery": {
          "description": "An object that contains the summary of delivery statuses for the message to non-chat participants.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "index": {
          "description": "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "links": {
          "description": "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "media": {
          "description": "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "JSON",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {}
          }
        },
        "participant_sid": {
          "description": "The unique ID of messages's author participant. Null in case of `system` sent message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "An absolute API resource URL for this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_conversation.service_conversation_message"
    },
    "ConversationsConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceipt": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "channel_message_sid": {
          "description": "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Message resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "error_code": {
          "description": "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status,",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "message_sid": {
          "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "participant_sid": {
          "description": "The unique ID of the participant the delivery receipt belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DY[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationMessageReceiptEnumDeliveryStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this delivery receipt.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_conversation.service_conversation_message.service_conversation_message_receipt"
    },
    "ConversationsConversationsV1ServiceServiceConversationServiceConversationParticipant": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set `{}` will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date on which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date on which this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "last_read_message_index": {
          "description": "Index of last read message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "last_read_timestamp": {
          "description": "Timestamp of last read message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "messaging_binding": {
          "description": "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "role_sid": {
          "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "An absolute API resource URL for this participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_conversation.service_conversation_participant"
    },
    "ConversationsConversationsV1ServiceServiceConversationServiceConversationScopedWebhook": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "configuration": {
          "description": "The configuration of this webhook. Is defined based on target.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "target": {
          "description": "The target of this webhook: `webhook`, `studio`, `trigger`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this webhook.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_conversation.service_conversation_scoped_webhook"
    },
    "ConversationsConversationsV1ServiceServiceConversationWithParticipants": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "bindings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "chat_service_sid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "messaging_service_sid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationWithParticipantsEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "timers": {
          "description": "Timer date values representing state update for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_conversation_with_participants"
    },
    "ConversationsConversationsV1ServiceServiceParticipantConversation": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "chat_service_sid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "conversation_created_by": {
          "description": "Identity of the creator of this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "conversation_date_created": {
          "description": "The date that this conversation was created, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "conversation_date_updated": {
          "description": "The date that this conversation was last updated, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "conversation_friendly_name": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) this Participant belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceParticipantConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "conversation_timers": {
          "description": "Timer date values representing state update for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "conversation_unique_name": {
          "description": "An application-defined string that uniquely identifies the Conversation resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "participant_identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "participant_messaging_binding": {
          "description": "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "participant_sid": {
          "description": "The unique ID of the [Participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "participant_user_sid": {
          "description": "The unique string that identifies the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^US[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      },
      "alias": "conversations.v1.service.service_participant_conversation"
    },
    "ConversationsConversationsV1ServiceServiceRole": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "permissions": {
          "description": "An array of the permissions the role has been granted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Role resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceRoleEnumRoleType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "An absolute API resource URL for this user role.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_role"
    },
    "ConversationsConversationsV1ServiceServiceUser": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "identity": {
          "description": "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_notifiable": {
          "description": "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_online": {
          "description": "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "links": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "role_sid": {
          "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the User resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^US[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "An absolute API resource URL for this user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.service.service_user"
    },
    "ConversationsConversationsV1ServiceServiceUserServiceUserConversation": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "chat_service_sid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceUserConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_by": {
          "description": "Identity of the creator of this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date that this conversation was created, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this conversation was last updated, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "last_read_message_index": {
          "description": "The index of the last Message in the Conversation that the Participant has read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "links": {
          "description": "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "notification_level": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceUserConversationEnumNotificationLevel",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "participant_sid": {
          "description": "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "timers": {
          "description": "Timer date values representing state update for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "unread_messages_count": {
          "description": "The number of unread Messages in the Conversation for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "user_sid": {
          "description": "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^US[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      },
      "alias": "conversations.v1.service.service_user.service_user_conversation"
    },
    "ConversationsConversationsV1User": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "chat_service_sid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "identity": {
          "description": "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_notifiable": {
          "description": "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_online": {
          "description": "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "links": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "role_sid": {
          "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the User resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^US[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "url": {
          "description": "An absolute API resource URL for this user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "conversations.v1.user"
    },
    "ConversationsConversationsV1UserUserConversation": {
      "fields": {
        "account_sid": {
          "description": "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "chat_service_sid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_sid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "conversation_state": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUserConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_by": {
          "description": "Identity of the creator of this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date that this conversation was created, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date that this conversation was last updated, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "last_read_message_index": {
          "description": "The index of the last Message in the Conversation that the Participant has read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "links": {
          "description": "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "notification_level": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUserConversationEnumNotificationLevel",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "participant_sid": {
          "description": "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "timers": {
          "description": "Timer date values representing state update for this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "unread_messages_count": {
          "description": "The number of unread Messages in the Conversation for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "user_sid": {
          "description": "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^US[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      },
      "alias": "conversations.v1.user.user_conversation"
    },
    "ConversationsCreateConfigurationAddressBodyInput": {
      "fields": {
        "Address": {
          "description": "The unique address to be configured. The address can be a whatsapp address or phone number",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "AddressCountry": {
          "description": "An ISO 3166-1 alpha-2n country code which the address belongs to. This is currently only applicable to short code addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "AutoCreation.ConversationServiceSid": {
          "description": "Conversation Service for the auto-created conversation. If not set, the conversation is created in the default service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "AutoCreation.Enabled": {
          "description": "Enable/Disable auto-creating conversations for messages to this address",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "AutoCreation.StudioFlowSid": {
          "description": "For type `studio`, the studio flow SID where the webhook should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "AutoCreation.StudioRetryCount": {
          "description": "For type `studio`, number of times to retry the webhook request",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "AutoCreation.Type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConfigurationAddressEnumAutoCreationType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "AutoCreation.WebhookFilters": {
          "description": "The list of events, firing webhook event for this Conversation. Values can be any of the following: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationStateUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`, `onDeliveryUpdated`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "AutoCreation.WebhookMethod": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConfigurationAddressEnumMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "AutoCreation.WebhookUrl": {
          "description": "For type `webhook`, the url for the webhook request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "The human-readable name of this configuration, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Type": {
          "type": {
            "name": "ConversationsConfigurationAddressEnumType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateConversationBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Address": {
          "description": "The default email address that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Name": {
          "description": "The default name that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "FriendlyName": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingServiceSid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Closed": {
          "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Inactive": {
          "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateConversationMessageBodyInput": {
      "fields": {
        "Attributes": {
          "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Author": {
          "description": "The channel specific identifier of the message's author. Defaults to `system`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Body": {
          "description": "The content of the message, can be up to 1,600 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ContentSid": {
          "description": "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content) template, required for template-generated messages.  **Note** that if this field is set, `Body` and `MediaSid` parameters are ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^HX[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ContentVariables": {
          "description": "A structurally valid JSON string that contains values to resolve Rich Content template variables.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated. `null` if the message has not been edited.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "MediaSid": {
          "description": "The Media SID to be attached to the new Message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^ME[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Subject": {
          "description": "The subject of the message, can be up to 256 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateConversationParticipantBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "Identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.Address": {
          "description": "The address of the participant's device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with proxy_address) is only null when the participant is interacting from an SDK endpoint (see the 'identity' field).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.ProjectedAddress": {
          "description": "The address of the Twilio phone number that is used in Group MMS. Communication mask for the Conversation participant with Identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.ProxyAddress": {
          "description": "The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the 'identity' field).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RoleSid": {
          "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ConversationsCreateConversationScopedWebhookBodyInput": {
      "fields": {
        "Configuration.Filters": {
          "description": "The list of events, firing webhook event for this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Configuration.FlowSid": {
          "description": "The studio flow SID, where the webhook should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Configuration.Method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationScopedWebhookEnumMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Configuration.ReplayAfter": {
          "description": "The message index for which and it's successors the webhook will be replayed. Not set by default",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Configuration.Triggers": {
          "description": "The list of keywords, firing webhook event for this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Configuration.Url": {
          "description": "The absolute url the webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Target": {
          "type": {
            "name": "ConversationsConversationScopedWebhookEnumTarget",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateConversationWithParticipantsBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Address": {
          "description": "The default email address that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Name": {
          "description": "The default name that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "FriendlyName": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingServiceSid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Participant": {
          "description": "The participant to be added to the conversation in JSON format. The parameters are as in [Participant Resource](https://www.twilio.com/docs/conversations/api/conversation-participant-resource). The maximum number of participants that can be added in a single request is 10.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationWithParticipantsEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Closed": {
          "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Inactive": {
          "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateCredentialBodyInput": {
      "fields": {
        "ApiKey": {
          "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Certificate": {
          "description": "[APN only] The URL encoded representation of the certificate. For example,  `-----BEGIN CERTIFICATE----- MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEF.....A== -----END CERTIFICATE-----`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the new resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PrivateKey": {
          "description": "[APN only] The URL encoded representation of the private key. For example, `-----BEGIN RSA PRIVATE KEY----- MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fG... -----END RSA PRIVATE KEY-----`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Sandbox": {
          "description": "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "Secret": {
          "description": "[FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Type": {
          "type": {
            "name": "ConversationsCredentialEnumPushType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateRoleBodyInput": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the new resource. It can be up to 64 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Permission": {
          "description": "A permission that you grant to the new role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. The values for this parameter depend on the role's `type`.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Type": {
          "type": {
            "name": "ConversationsRoleEnumRoleType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateServiceBodyInput": {
      "fields": {
        "FriendlyName": {
          "description": "The human-readable name of this service, limited to 256 characters. Optional.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateServiceConversationBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Address": {
          "description": "The default email address that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Name": {
          "description": "The default name that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "FriendlyName": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingServiceSid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Closed": {
          "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Inactive": {
          "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateServiceConversationMessageBodyInput": {
      "fields": {
        "Attributes": {
          "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Author": {
          "description": "The channel specific identifier of the message's author. Defaults to `system`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Body": {
          "description": "The content of the message, can be up to 1,600 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ContentSid": {
          "description": "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content) template, required for template-generated messages.  **Note** that if this field is set, `Body` and `MediaSid` parameters are ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^HX[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ContentVariables": {
          "description": "A structurally valid JSON string that contains values to resolve Rich Content template variables.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated. `null` if the message has not been edited.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "MediaSid": {
          "description": "The Media SID to be attached to the new Message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^ME[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Subject": {
          "description": "The subject of the message, can be up to 256 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateServiceConversationParticipantBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set `{}` will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date on which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date on which this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "Identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.Address": {
          "description": "The address of the participant's device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with `proxy_address`) is only null when the participant is interacting from an SDK endpoint (see the `identity` field).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.ProjectedAddress": {
          "description": "The address of the Twilio phone number that is used in Group MMS.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.ProxyAddress": {
          "description": "The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the `identity` field).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RoleSid": {
          "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ConversationsCreateServiceConversationScopedWebhookBodyInput": {
      "fields": {
        "Configuration.Filters": {
          "description": "The list of events, firing webhook event for this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Configuration.FlowSid": {
          "description": "The studio flow SID, where the webhook should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Configuration.Method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationScopedWebhookEnumMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Configuration.ReplayAfter": {
          "description": "The message index for which and it's successors the webhook will be replayed. Not set by default",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "Configuration.Triggers": {
          "description": "The list of keywords, firing webhook event for this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Configuration.Url": {
          "description": "The absolute url the webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Target": {
          "type": {
            "name": "ConversationsServiceConversationScopedWebhookEnumTarget",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateServiceConversationWithParticipantsBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Address": {
          "description": "The default email address that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Name": {
          "description": "The default name that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "FriendlyName": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingServiceSid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Participant": {
          "description": "The participant to be added to the conversation in JSON format. The parameters are as in [Participant Resource](https://www.twilio.com/docs/conversations/api/conversation-participant-resource). The maximum number of participants that can be added in a single request is 10.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationWithParticipantsEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Closed": {
          "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Inactive": {
          "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateServiceRoleBodyInput": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the new resource. It can be up to 64 characters long.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Permission": {
          "description": "A permission that you grant to the new role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. The values for this parameter depend on the role's `type`.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Type": {
          "type": {
            "name": "ConversationsServiceRoleEnumRoleType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsCreateServiceUserBodyInput": {
      "fields": {
        "Attributes": {
          "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Identity": {
          "description": "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RoleSid": {
          "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ConversationsCreateUserBodyInput": {
      "fields": {
        "Attributes": {
          "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Identity": {
          "description": "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RoleSid": {
          "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ConversationsListConfigurationAddressResult": {
      "fields": {
        "address_configurations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ConfigurationAddress",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListConfigurationAddressResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListConfigurationAddressResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListConversationMessageReceiptResult": {
      "fields": {
        "delivery_receipts": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ConversationConversationMessageConversationMessageReceipt",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListConversationMessageReceiptResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListConversationMessageReceiptResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListConversationMessageResult": {
      "fields": {
        "messages": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ConversationConversationMessage",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListConversationMessageResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListConversationMessageResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListConversationParticipantResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListConversationParticipantResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "participants": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ConversationConversationParticipant",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ConversationsListConversationParticipantResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListConversationResult": {
      "fields": {
        "conversations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1Conversation",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListConversationResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListConversationResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListConversationScopedWebhookResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListConversationScopedWebhookResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "webhooks": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ConversationConversationScopedWebhook",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ConversationsListConversationScopedWebhookResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListCredentialResult": {
      "fields": {
        "credentials": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1Credential",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListCredentialResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListCredentialResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListParticipantConversationResult": {
      "fields": {
        "conversations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ParticipantConversation",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListParticipantConversationResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListParticipantConversationResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListRoleResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListRoleResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "roles": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1Role",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ConversationsListRoleResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceBindingResult": {
      "fields": {
        "bindings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceBinding",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceBindingResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListServiceBindingResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceConversationMessageReceiptResult": {
      "fields": {
        "delivery_receipts": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationMessageServiceConversationMessageReceipt",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceConversationMessageReceiptResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListServiceConversationMessageReceiptResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceConversationMessageResult": {
      "fields": {
        "messages": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationMessage",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceConversationMessageResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListServiceConversationMessageResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceConversationParticipantResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceConversationParticipantResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "participants": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationParticipant",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ConversationsListServiceConversationParticipantResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceConversationResult": {
      "fields": {
        "conversations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceConversation",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceConversationResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListServiceConversationResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceConversationScopedWebhookResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceConversationScopedWebhookResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "webhooks": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationScopedWebhook",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ConversationsListServiceConversationScopedWebhookResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceParticipantConversationResult": {
      "fields": {
        "conversations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceParticipantConversation",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceParticipantConversationResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListServiceParticipantConversationResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "services": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1Service",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ConversationsListServiceResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceRoleResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceRoleResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "roles": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceRole",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ConversationsListServiceRoleResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceUserConversationResult": {
      "fields": {
        "conversations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceUserServiceUserConversation",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceUserConversationResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListServiceUserConversationResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListServiceUserResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListServiceUserResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "users": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1ServiceServiceUser",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ConversationsListServiceUserResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListUserConversationResult": {
      "fields": {
        "conversations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1UserUserConversation",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListUserConversationResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ConversationsListUserConversationResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsListUserResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsListUserResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "users": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ConversationsConversationsV1User",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ConversationsListUserResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsUpdateConfigurationAddressBodyInput": {
      "fields": {
        "AutoCreation.ConversationServiceSid": {
          "description": "Conversation Service for the auto-created conversation. If not set, the conversation is created in the default service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "AutoCreation.Enabled": {
          "description": "Enable/Disable auto-creating conversations for messages to this address",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "AutoCreation.StudioFlowSid": {
          "description": "For type `studio`, the studio flow SID where the webhook should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "AutoCreation.StudioRetryCount": {
          "description": "For type `studio`, number of times to retry the webhook request",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "AutoCreation.Type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConfigurationAddressEnumAutoCreationType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "AutoCreation.WebhookFilters": {
          "description": "The list of events, firing webhook event for this Conversation. Values can be any of the following: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationStateUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`, `onDeliveryUpdated`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "AutoCreation.WebhookMethod": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConfigurationAddressEnumMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "AutoCreation.WebhookUrl": {
          "description": "For type `webhook`, the url for the webhook request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "The human-readable name of this configuration, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateConfigurationBodyInput": {
      "fields": {
        "DefaultChatServiceSid": {
          "description": "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to use when creating a conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "DefaultClosedTimer": {
          "description": "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DefaultInactiveTimer": {
          "description": "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DefaultMessagingServiceSid": {
          "description": "The SID of the default [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) to use when creating a conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ConversationsUpdateConfigurationWebhookBodyInput": {
      "fields": {
        "Filters": {
          "description": "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Method": {
          "description": "The HTTP method to be used when sending a webhook request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PostWebhookUrl": {
          "description": "The absolute url the post-event webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PreWebhookUrl": {
          "description": "The absolute url the pre-event webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Target": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConfigurationWebhookEnumTarget",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateConversationBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Address": {
          "description": "The default email address that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Name": {
          "description": "The default name that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "FriendlyName": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingServiceSid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Closed": {
          "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Inactive": {
          "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateConversationMessageBodyInput": {
      "fields": {
        "Attributes": {
          "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Author": {
          "description": "The channel specific identifier of the message's author. Defaults to `system`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Body": {
          "description": "The content of the message, can be up to 1,600 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated. `null` if the message has not been edited.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "Subject": {
          "description": "The subject of the message, can be up to 256 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateConversationParticipantBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "Identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "LastReadMessageIndex": {
          "description": "Index of last read message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "LastReadTimestamp": {
          "description": "Timestamp of last read message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.ProjectedAddress": {
          "description": "The address of the Twilio phone number that is used in Group MMS. 'null' value will remove it.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.ProxyAddress": {
          "description": "The address of the Twilio phone number that the participant is in contact with. 'null' value will remove it.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RoleSid": {
          "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ConversationsUpdateConversationScopedWebhookBodyInput": {
      "fields": {
        "Configuration.Filters": {
          "description": "The list of events, firing webhook event for this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Configuration.FlowSid": {
          "description": "The studio flow SID, where the webhook should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Configuration.Method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationScopedWebhookEnumMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Configuration.Triggers": {
          "description": "The list of keywords, firing webhook event for this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Configuration.Url": {
          "description": "The absolute url the webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateCredentialBodyInput": {
      "fields": {
        "ApiKey": {
          "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Certificate": {
          "description": "[APN only] The URL encoded representation of the certificate. For example,  `-----BEGIN CERTIFICATE----- MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEF.....A== -----END CERTIFICATE-----`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the new resource. It can be up to 64 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PrivateKey": {
          "description": "[APN only] The URL encoded representation of the private key. For example, `-----BEGIN RSA PRIVATE KEY----- MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fG... -----END RSA PRIVATE KEY-----`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Sandbox": {
          "description": "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "Secret": {
          "description": "[FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCredentialEnumPushType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateRoleBodyInput": {
      "fields": {
        "Permission": {
          "description": "A permission that you grant to the role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. Note that the update action replaces all previously assigned permissions with those defined in the update action. To remove a permission, do not include it in the subsequent update action. The values for this parameter depend on the role's `type`.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "ConversationsUpdateServiceConfigurationBodyInput": {
      "fields": {
        "DefaultChatServiceRoleSid": {
          "description": "The service-level role assigned to users when they are added to the service. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "DefaultConversationCreatorRoleSid": {
          "description": "The conversation-level role assigned to a conversation creator when they join a new conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "DefaultConversationRoleSid": {
          "description": "The conversation-level role assigned to users when they are added to a conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "ReachabilityEnabled": {
          "description": "Whether the [Reachability Indicator](https://www.twilio.com/docs/conversations/reachability) is enabled for this Conversations Service. The default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "ConversationsUpdateServiceConversationBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Address": {
          "description": "The default email address that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Bindings.Email.Name": {
          "description": "The default name that will be used when sending outbound emails in this conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "FriendlyName": {
          "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingServiceSid": {
          "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationEnumState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Closed": {
          "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Timers.Inactive": {
          "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateServiceConversationMessageBodyInput": {
      "fields": {
        "Attributes": {
          "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Author": {
          "description": "The channel specific identifier of the message's author. Defaults to `system`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Body": {
          "description": "The content of the message, can be up to 1,600 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date that this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date that this resource was last updated. `null` if the message has not been edited.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "Subject": {
          "description": "The subject of the message, can be up to 256 characters long.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateServiceConversationParticipantBodyInput": {
      "fields": {
        "Attributes": {
          "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set `{}` will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "DateCreated": {
          "description": "The date on which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "DateUpdated": {
          "description": "The date on which this resource was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "Identity": {
          "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "LastReadMessageIndex": {
          "description": "Index of last read message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "LastReadTimestamp": {
          "description": "Timestamp of last read message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.ProjectedAddress": {
          "description": "The address of the Twilio phone number that is used in Group MMS. 'null' value will remove it.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "MessagingBinding.ProxyAddress": {
          "description": "The address of the Twilio phone number that the participant is in contact with. 'null' value will remove it.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RoleSid": {
          "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ConversationsUpdateServiceConversationScopedWebhookBodyInput": {
      "fields": {
        "Configuration.Filters": {
          "description": "The list of events, firing webhook event for this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Configuration.FlowSid": {
          "description": "The studio flow SID, where the webhook should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^FW[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "Configuration.Method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationScopedWebhookEnumMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Configuration.Triggers": {
          "description": "The list of keywords, firing webhook event for this Conversation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Configuration.Url": {
          "description": "The absolute url the webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateServiceNotificationBodyInput": {
      "fields": {
        "AddedToConversation.Enabled": {
          "description": "Whether to send a notification when a participant is added to a conversation. The default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "AddedToConversation.Sound": {
          "description": "The name of the sound to play when a participant is added to a conversation and `added_to_conversation.enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "AddedToConversation.Template": {
          "description": "The template to use to create the notification text displayed when a participant is added to a conversation and `added_to_conversation.enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "LogEnabled": {
          "description": "Weather the notification logging is enabled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "NewMessage.BadgeCountEnabled": {
          "description": "Whether the new message badge is enabled. The default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "NewMessage.Enabled": {
          "description": "Whether to send a notification when a new message is added to a conversation. The default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "NewMessage.Sound": {
          "description": "The name of the sound to play when a new message is added to a conversation and `new_message.enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "NewMessage.Template": {
          "description": "The template to use to create the notification text displayed when a new message is added to a conversation and `new_message.enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "NewMessage.WithMedia.Enabled": {
          "description": "Whether to send a notification when a new message with media/file attachments is added to a conversation. The default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "NewMessage.WithMedia.Template": {
          "description": "The template to use to create the notification text displayed when a new message with media/file attachments is added to a conversation and `new_message.attachments.enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RemovedFromConversation.Enabled": {
          "description": "Whether to send a notification to a user when they are removed from a conversation. The default is `false`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "RemovedFromConversation.Sound": {
          "description": "The name of the sound to play to a user when they are removed from a conversation and `removed_from_conversation.enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RemovedFromConversation.Template": {
          "description": "The template to use to create the notification text displayed to a user when they are removed from a conversation and `removed_from_conversation.enabled` is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateServiceRoleBodyInput": {
      "fields": {
        "Permission": {
          "description": "A permission that you grant to the role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. Note that the update action replaces all previously assigned permissions with those defined in the update action. To remove a permission, do not include it in the subsequent update action. The values for this parameter depend on the role's `type`.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "ConversationsUpdateServiceUserBodyInput": {
      "fields": {
        "Attributes": {
          "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RoleSid": {
          "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ConversationsUpdateServiceUserConversationBodyInput": {
      "fields": {
        "LastReadMessageIndex": {
          "description": "The index of the last Message in the Conversation that the Participant has read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "LastReadTimestamp": {
          "description": "The date of the last message read in conversation by the user, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "NotificationLevel": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceUserConversationEnumNotificationLevel",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ConversationsUpdateServiceWebhookConfigurationBodyInput": {
      "fields": {
        "Filters": {
          "description": "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Method": {
          "description": "The HTTP method to be used when sending a webhook request. One of `GET` or `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "PostWebhookUrl": {
          "description": "The absolute url the post-event webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "PreWebhookUrl": {
          "description": "The absolute url the pre-event webhook request should be sent to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ConversationsUpdateUserBodyInput": {
      "fields": {
        "Attributes": {
          "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RoleSid": {
          "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        }
      }
    },
    "ConversationsUpdateUserConversationBodyInput": {
      "fields": {
        "LastReadMessageIndex": {
          "description": "The index of the last Message in the Conversation that the Participant has read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "LastReadTimestamp": {
          "description": "The date of the last message read in conversation by the user, given in ISO 8601 format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "NotificationLevel": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUserConversationEnumNotificationLevel",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    }
  },
  "procedures": {
    "conversationsCreateConfigurationAddress": {
      "request": {
        "url": "/v1/Configuration/Addresses",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Configuration/Addresses",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateConfigurationAddressBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new address configuration",
      "result_type": {
        "name": "ConversationsConversationsV1ConfigurationAddress",
        "type": "named"
      }
    },
    "conversationsCreateConversation": {
      "request": {
        "url": "/v1/Conversations",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Conversations",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateConversationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new conversation in your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1Conversation",
        "type": "named"
      }
    },
    "conversationsCreateConversationMessage": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Messages",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationMessageEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Conversations/{ConversationSid}/Messages",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateConversationMessageBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Add a new message to the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationMessage",
        "type": "named"
      }
    },
    "conversationsCreateConversationParticipant": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Participants",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationParticipantEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Conversations/{ConversationSid}/Participants",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateConversationParticipantBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Add a new participant to the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationParticipant",
        "type": "named"
      }
    },
    "conversationsCreateConversationScopedWebhook": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Webhooks",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Conversations/{ConversationSid}/Webhooks",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateConversationScopedWebhookBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new webhook scoped to the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationScopedWebhook",
        "type": "named"
      }
    },
    "conversationsCreateConversationWithParticipants": {
      "request": {
        "url": "/v1/ConversationWithParticipants",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationWithParticipantsEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/ConversationWithParticipants",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateConversationWithParticipantsBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new conversation with the list of participants in your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationWithParticipants",
        "type": "named"
      }
    },
    "conversationsCreateCredential": {
      "request": {
        "url": "/v1/Credentials",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Credentials",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateCredentialBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Add a new push notification credential to your account",
      "result_type": {
        "name": "ConversationsConversationsV1Credential",
        "type": "named"
      }
    },
    "conversationsCreateRole": {
      "request": {
        "url": "/v1/Roles",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Roles",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateRoleBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new user role in your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1Role",
        "type": "named"
      }
    },
    "conversationsCreateService": {
      "request": {
        "url": "/v1/Services",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Services",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateServiceBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new conversation service on your account",
      "result_type": {
        "name": "ConversationsConversationsV1Service",
        "type": "named"
      }
    },
    "conversationsCreateServiceConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Conversations",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateServiceConversationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new conversation in your service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversation",
        "type": "named"
      }
    },
    "conversationsCreateServiceConversationMessage": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationMessageEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateServiceConversationMessageBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Add a new message to the conversation in a specific service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationMessage",
        "type": "named"
      }
    },
    "conversationsCreateServiceConversationParticipant": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationParticipantEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateServiceConversationParticipantBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Add a new participant to the conversation in a specific service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationParticipant",
        "type": "named"
      }
    },
    "conversationsCreateServiceConversationScopedWebhook": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Webhooks",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Webhooks",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateServiceConversationScopedWebhookBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new webhook scoped to the conversation in a specific service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationScopedWebhook",
        "type": "named"
      }
    },
    "conversationsCreateServiceConversationWithParticipants": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/ConversationWithParticipants",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationWithParticipantsEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/ConversationWithParticipants",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateServiceConversationWithParticipantsBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new conversation with the list of participants in your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationWithParticipants",
        "type": "named"
      }
    },
    "conversationsCreateServiceRole": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Roles",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to create the Role resource under.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Roles",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateServiceRoleBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a new user role in your service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceRole",
        "type": "named"
      }
    },
    "conversationsCreateServiceUser": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Users",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceUserEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Users",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateServiceUserBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Add a new conversation user to your service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceUser",
        "type": "named"
      }
    },
    "conversationsCreateUser": {
      "request": {
        "url": "/v1/Users",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUserEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Users",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsCreateUserBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Add a new conversation user to your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1User",
        "type": "named"
      }
    },
    "conversationsDeleteConfigurationAddress": {
      "request": {
        "url": "/v1/Configuration/Addresses/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Address Configuration resource. This value can be either the `sid` or the `address` of the configuration",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove an existing address configuration",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteConversation": {
      "request": {
        "url": "/v1/Conversations/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a conversation from your account's default service",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteConversationMessage": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Messages/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationMessageEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a message from the conversation",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteConversationParticipant": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Participants/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationParticipantEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a participant from the conversation",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteConversationScopedWebhook": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Webhooks/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Remove an existing webhook scoped to the conversation",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteCredential": {
      "request": {
        "url": "/v1/Credentials/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Remove a push notification credential from your account",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteRole": {
      "request": {
        "url": "/v1/Roles/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Role resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Remove a user role from your account's default service",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteService": {
      "request": {
        "url": "/v1/Services/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Remove a conversation service with all its nested resources from your account",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteServiceBinding": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Bindings/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to delete the Binding resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Binding resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Remove a push notification binding from the conversation service",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteServiceConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a conversation from your service",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteServiceConversationMessage": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationMessageEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a message from the conversation",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteServiceConversationParticipant": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationParticipantEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a participant from the conversation",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteServiceConversationScopedWebhook": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Webhooks/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Remove an existing webhook scoped to the conversation",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteServiceRole": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Roles/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to delete the Role resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Role resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Remove a user role from your service",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteServiceUser": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Users/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to delete the User resource from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the User resource to delete. This value can be either the `sid` or the `identity` of the User resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceUserEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a conversation user from your service",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteServiceUserConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Users/{UserSid}/Conversations/{ConversationSid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UserSid": {
          "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "UserSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a specific User Conversation.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteUser": {
      "request": {
        "url": "/v1/Users/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the User resource to delete. This value can be either the `sid` or the `identity` of the User resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUserEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a conversation user from your account's default service",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsDeleteUserConversation": {
      "request": {
        "url": "/v1/Users/{UserSid}/Conversations/{ConversationSid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UserSid": {
          "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "UserSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a specific User Conversation.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "conversationsUpdateConfiguration": {
      "request": {
        "url": "/v1/Configuration",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Configuration",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateConfigurationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update the global configuration of conversations on your account",
      "result_type": {
        "name": "ConversationsConversationsV1Configuration",
        "type": "named"
      }
    },
    "conversationsUpdateConfigurationAddress": {
      "request": {
        "url": "/v1/Configuration/Addresses/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Address Configuration resource. This value can be either the `sid` or the `address` of the configuration",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Configuration/Addresses/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateConfigurationAddressBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing address configuration",
      "result_type": {
        "name": "ConversationsConversationsV1ConfigurationAddress",
        "type": "named"
      }
    },
    "conversationsUpdateConfigurationWebhook": {
      "request": {
        "url": "/v1/Configuration/Webhooks",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Configuration/Webhooks",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateConfigurationWebhookBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "POST /v1/Configuration/Webhooks",
      "result_type": {
        "name": "ConversationsConversationsV1ConfigurationConfigurationWebhook",
        "type": "named"
      }
    },
    "conversationsUpdateConversation": {
      "request": {
        "url": "/v1/Conversations/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Conversations/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateConversationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing conversation in your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1Conversation",
        "type": "named"
      }
    },
    "conversationsUpdateConversationMessage": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Messages/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationMessageEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Conversations/{ConversationSid}/Messages/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateConversationMessageBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing message in the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationMessage",
        "type": "named"
      }
    },
    "conversationsUpdateConversationParticipant": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Participants/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsConversationParticipantEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Conversations/{ConversationSid}/Participants/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateConversationParticipantBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing participant in the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationParticipant",
        "type": "named"
      }
    },
    "conversationsUpdateConversationScopedWebhook": {
      "request": {
        "url": "/v1/Conversations/{ConversationSid}/Webhooks/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Conversations/{ConversationSid}/Webhooks/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateConversationScopedWebhookBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing conversation-scoped webhook",
      "result_type": {
        "name": "ConversationsConversationsV1ConversationConversationScopedWebhook",
        "type": "named"
      }
    },
    "conversationsUpdateCredential": {
      "request": {
        "url": "/v1/Credentials/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Credentials/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateCredentialBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing push notification credential on your account",
      "result_type": {
        "name": "ConversationsConversationsV1Credential",
        "type": "named"
      }
    },
    "conversationsUpdateRole": {
      "request": {
        "url": "/v1/Roles/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Role resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Roles/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateRoleBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing user role in your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1Role",
        "type": "named"
      }
    },
    "conversationsUpdateServiceConfiguration": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Configuration",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the Service configuration resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Configuration",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceConfigurationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update configuration settings of a conversation service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConfiguration",
        "type": "named"
      }
    },
    "conversationsUpdateServiceConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Conversations/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceConversationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing conversation in your service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversation",
        "type": "named"
      }
    },
    "conversationsUpdateServiceConversationMessage": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationMessageEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceConversationMessageBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing message in the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationMessage",
        "type": "named"
      }
    },
    "conversationsUpdateServiceConversationParticipant": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceConversationParticipantEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceConversationParticipantBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing participant in the conversation",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationParticipant",
        "type": "named"
      }
    },
    "conversationsUpdateServiceConversationScopedWebhook": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Webhooks/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sid": {
          "description": "A 34 character string that uniquely identifies this resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Webhooks/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceConversationScopedWebhookBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing conversation-scoped webhook",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConversationServiceConversationScopedWebhook",
        "type": "named"
      }
    },
    "conversationsUpdateServiceNotification": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Configuration/Notifications",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Configuration/Notifications",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceNotificationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update push notification service settings",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConfigurationServiceNotification",
        "type": "named"
      }
    },
    "conversationsUpdateServiceRole": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Roles/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to update the Role resource in.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the Role resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Roles/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceRoleBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing user role in your service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceRole",
        "type": "named"
      }
    },
    "conversationsUpdateServiceUser": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Users/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "Sid": {
          "description": "The SID of the User resource to update. This value can be either the `sid` or the `identity` of the User resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsServiceUserEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Users/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceUserBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing conversation user in your service",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceUser",
        "type": "named"
      }
    },
    "conversationsUpdateServiceUserConversation": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Users/{UserSid}/Conversations/{ConversationSid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "ConversationSid": {
          "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UserSid": {
          "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "UserSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Users/{UserSid}/Conversations/{ConversationSid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceUserConversationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update a specific User Conversation.",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceUserServiceUserConversation",
        "type": "named"
      }
    },
    "conversationsUpdateServiceWebhookConfiguration": {
      "request": {
        "url": "/v1/Services/{ChatServiceSid}/Configuration/Webhooks",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ChatServiceSid": {
          "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ChatServiceSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Services/{ChatServiceSid}/Configuration/Webhooks",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateServiceWebhookConfigurationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update a specific Webhook.",
      "result_type": {
        "name": "ConversationsConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration",
        "type": "named"
      }
    },
    "conversationsUpdateUser": {
      "request": {
        "url": "/v1/Users/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the User resource to update. This value can be either the `sid` or the `identity` of the User resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "X-Twilio-Webhook-Enabled": {
          "description": "The X-Twilio-Webhook-Enabled HTTP request header",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUserEnumWebhookEnabledType",
              "type": "named"
            }
          },
          "http": {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Users/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateUserBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update an existing conversation user in your account's default service",
      "result_type": {
        "name": "ConversationsConversationsV1User",
        "type": "named"
      }
    },
    "conversationsUpdateUserConversation": {
      "request": {
        "url": "/v1/Users/{UserSid}/Conversations/{ConversationSid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ConversationSid": {
          "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ConversationSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "UserSid": {
          "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "UserSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Users/{UserSid}/Conversations/{ConversationSid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConversationsUpdateUserConversationBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Update a specific User Conversation.",
      "result_type": {
        "name": "ConversationsConversationsV1UserUserConversation",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "ConversationsConfigurationAddressEnumAutoCreationType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "webhook",
          "studio",
          "default"
        ],
        "type": "enum"
      }
    },
    "ConversationsConfigurationAddressEnumMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ConversationsConfigurationAddressEnumType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "sms",
          "whatsapp",
          "messenger",
          "gbm",
          "email"
        ],
        "type": "enum"
      }
    },
    "ConversationsConfigurationWebhookEnumMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ConversationsConfigurationWebhookEnumTarget": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "webhook",
          "flex"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationEnumState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inactive",
          "active",
          "closed"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationMessageEnumOrderType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "asc",
          "desc"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationMessageEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationMessageReceiptEnumDeliveryStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "read",
          "failed",
          "delivered",
          "undelivered",
          "sent"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationParticipantEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationScopedWebhookEnumMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationScopedWebhookEnumTarget": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "webhook",
          "trigger",
          "studio"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationWithParticipantsEnumState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inactive",
          "active",
          "closed"
        ],
        "type": "enum"
      }
    },
    "ConversationsConversationWithParticipantsEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "ConversationsCredentialEnumPushType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "apn",
          "gcm",
          "fcm"
        ],
        "type": "enum"
      }
    },
    "ConversationsParticipantConversationEnumState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inactive",
          "active",
          "closed"
        ],
        "type": "enum"
      }
    },
    "ConversationsRoleEnumRoleType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "conversation",
          "service"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceBindingEnumBindingType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "apn",
          "gcm",
          "fcm"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationEnumState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inactive",
          "active",
          "closed"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationMessageEnumOrderType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "asc",
          "desc"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationMessageEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationMessageReceiptEnumDeliveryStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "read",
          "failed",
          "delivered",
          "undelivered",
          "sent"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationParticipantEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationScopedWebhookEnumMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationScopedWebhookEnumTarget": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "webhook",
          "trigger",
          "studio"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationWithParticipantsEnumState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inactive",
          "active",
          "closed"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceConversationWithParticipantsEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceParticipantConversationEnumState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inactive",
          "active",
          "closed"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceRoleEnumRoleType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "conversation",
          "service"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceUserConversationEnumNotificationLevel": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "default",
          "muted"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceUserConversationEnumState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inactive",
          "active",
          "closed"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceUserEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "ConversationsServiceWebhookConfigurationEnumMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "ConversationsUserConversationEnumNotificationLevel": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "default",
          "muted"
        ],
        "type": "enum"
      }
    },
    "ConversationsUserConversationEnumState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "inactive",
          "active",
          "closed"
        ],
        "type": "enum"
      }
    },
    "ConversationsUserEnumWebhookEnabledType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "true",
          "false"
        ],
        "type": "enum"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
