{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://wireless.twilio.com",
          "env": "TWILIO_WIRELESS_SERVER_URL"
        }
      }
    ],
    "argumentPresets": [
      {
        "path": "body.AccountSid",
        "value": {
          "type": "env",
          "name": "TWILIO_ACCOUNT_SID"
        },
        "targets": null
      }
    ],
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "basic",
        "header": "",
        "username": {
          "env": "TWILIO_API_KEY"
        },
        "password": {
          "env": "TWILIO_API_SECRET"
        }
      }
    },
    "security": [
      {
        "accountSid_authToken": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "wirelessFetchCommand": {
      "request": {
        "url": "/v1/Commands/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Command resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Fetch a Command instance from your account.",
      "result_type": {
        "name": "WirelessWirelessV1Command",
        "type": "named"
      }
    },
    "wirelessFetchRatePlan": {
      "request": {
        "url": "/v1/RatePlans/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the RatePlan resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/RatePlans/{Sid}",
      "result_type": {
        "name": "WirelessWirelessV1RatePlan",
        "type": "named"
      }
    },
    "wirelessFetchSim": {
      "request": {
        "url": "/v1/Sims/{Sid}",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID or the `unique_name` of the Sim resource to fetch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Fetch a Sim resource on your Account.",
      "result_type": {
        "name": "WirelessWirelessV1Sim",
        "type": "named"
      }
    },
    "wirelessListAccountUsageRecord": {
      "request": {
        "url": "/v1/UsageRecords",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "End": {
          "description": "Only include usage that has occurred on or before this date. Format is [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "End",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Granularity": {
          "description": "How to summarize the usage by time. Can be: `daily`, `hourly`, or `all`. A value of `all` returns one Usage Record that describes the usage for the entire period.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessAccountUsageRecordEnumGranularity",
              "type": "named"
            }
          },
          "http": {
            "name": "Granularity",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "account_usage_record_enum_granularity"
              }
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Start": {
          "description": "Only include usage that has occurred on or after this date. Format is [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "Start",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        }
      },
      "description": "GET /v1/UsageRecords",
      "result_type": {
        "name": "WirelessListAccountUsageRecordResult",
        "type": "named"
      }
    },
    "wirelessListCommand": {
      "request": {
        "url": "/v1/Commands",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Direction": {
          "description": "Only return Commands with this direction value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCommandEnumDirection",
              "type": "named"
            }
          },
          "http": {
            "name": "Direction",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "command_enum_direction"
              }
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Sim": {
          "description": "The `sid` or `unique_name` of the [Sim resources](https://www.twilio.com/docs/iot/wireless/api/sim-resource) to read.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Sim",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Status": {
          "description": "The status of the resources to read. Can be: `queued`, `sent`, `delivered`, `received`, or `failed`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCommandEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "command_enum_status"
              }
            }
          }
        },
        "Transport": {
          "description": "Only return Commands with this transport value. Can be: `sms` or `ip`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCommandEnumTransport",
              "type": "named"
            }
          },
          "http": {
            "name": "Transport",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "command_enum_transport"
              }
            }
          }
        }
      },
      "description": "Retrieve a list of Commands from your account.",
      "result_type": {
        "name": "WirelessListCommandResult",
        "type": "named"
      }
    },
    "wirelessListDataSession": {
      "request": {
        "url": "/v1/Sims/{SimSid}/DataSessions",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SimSid": {
          "description": "The SID of the [Sim resource](https://www.twilio.com/docs/iot/wireless/api/sim-resource) with the Data Sessions to read.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "SimSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/Sims/{SimSid}/DataSessions",
      "result_type": {
        "name": "WirelessListDataSessionResult",
        "type": "named"
      }
    },
    "wirelessListRatePlan": {
      "request": {
        "url": "/v1/RatePlans",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET /v1/RatePlans",
      "result_type": {
        "name": "WirelessListRatePlanResult",
        "type": "named"
      }
    },
    "wirelessListSim": {
      "request": {
        "url": "/v1/Sims",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "EId": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "EId",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Iccid": {
          "description": "Only return Sim resources with this ICCID. This will return a list with a maximum size of 1.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Iccid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "RatePlan": {
          "description": "The SID or unique name of a [RatePlan resource](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource). Only return Sim resources assigned to this RatePlan resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "RatePlan",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SimRegistrationCode": {
          "description": "Only return Sim resources with this registration code. This will return a list with a maximum size of 1.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "SimRegistrationCode",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Status": {
          "description": "Only return Sim resources with this status.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessSimEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "sim_enum_status"
              }
            }
          }
        }
      },
      "description": "Retrieve a list of Sim resources on your Account.",
      "result_type": {
        "name": "WirelessListSimResult",
        "type": "named"
      }
    },
    "wirelessListUsageRecord": {
      "request": {
        "url": "/v1/Sims/{SimSid}/UsageRecords",
        "method": "get",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "End": {
          "description": "Only include usage that occurred on or before this date, specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html). The default is the current time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "End",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "Granularity": {
          "description": "How to summarize the usage by time. Can be: `daily`, `hourly`, or `all`. The default is `all`. A value of `all` returns one Usage Record that describes the usage for the entire period.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessUsageRecordEnumGranularity",
              "type": "named"
            }
          },
          "http": {
            "name": "Granularity",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "xml": {
                "name": "usage_record_enum_granularity"
              }
            }
          }
        },
        "Page": {
          "description": "The page index. This value is simply for client state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "PageSize": {
          "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 1
            }
          }
        },
        "PageToken": {
          "description": "The page token. This is provided by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PageToken",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "SimSid": {
          "description": "The SID of the [Sim resource](https://www.twilio.com/docs/iot/wireless/api/sim-resource)  to read the usage from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "SimSid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "Start": {
          "description": "Only include usage that has occurred on or after this date, specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html). The default is one month before the `end` parameter value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "Start",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        }
      },
      "description": "GET /v1/Sims/{SimSid}/UsageRecords",
      "result_type": {
        "name": "WirelessListUsageRecordResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "WirelessCreateCommandBodyInput": {
      "fields": {
        "CallbackMethod": {
          "description": "The HTTP method we use to call `callback_url`. Can be: `POST` or `GET`, and the default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCreateCommandBodyCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "CallbackUrl": {
          "description": "The URL we call using the `callback_url` when the Command has finished sending, whether the command was delivered or it failed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Command": {
          "description": "The message body of the Command. Can be plain text in text mode or a Base64 encoded byte string in binary mode.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CommandMode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCommandEnumCommandMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "command_enum_command_mode"
            }
          }
        },
        "DeliveryReceiptRequested": {
          "description": "Whether to request delivery receipt from the recipient. For Commands that request delivery receipt, the Command state transitions to 'delivered' once the server has received a delivery receipt from the device. The default value is `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "IncludeSid": {
          "description": "Whether to include the SID of the command in the message body. Can be: `none`, `start`, or `end`, and the default behavior is `none`. When sending a Command to a SIM in text mode, we can automatically include the SID of the Command in the message body, which could be used to ensure that the device does not process the same Command more than once.  A value of `start` will prepend the message with the Command SID, and `end` will append it to the end, separating the Command SID from the message body with a space. The length of the Command SID is included in the 160 character limit so the SMS body must be 128 characters or less before the Command SID is included.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "Sim": {
          "description": "The `sid` or `unique_name` of the [SIM](https://www.twilio.com/docs/iot/wireless/api/sim-resource) to send the Command to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "CreateCommand"
      }
    },
    "WirelessCreateRatePlanBodyInput": {
      "fields": {
        "DataEnabled": {
          "description": "Whether SIMs can use GPRS/3G/4G/LTE data connectivity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "DataLimit": {
          "description": "The total data usage (download and upload combined) in Megabytes that the Network allows during one month on the home network (T-Mobile USA). The metering period begins the day of activation and ends on the same day in the following month. Can be up to 2TB and the default value is `1000`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "DataMetering": {
          "description": "The model used to meter data usage. Can be: `payg` and `quota-1`, `quota-10`, and `quota-50`. Learn more about the available [data metering models](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource#payg-vs-quota-data-plans).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It does not have to be unique.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "InternationalRoaming": {
          "description": "The list of services that SIMs capable of using GPRS/3G/4G/LTE data connectivity can use outside of the United States. Can contain: `data` and `messaging`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "InternationalRoamingDataLimit": {
          "description": "The total data usage (download and upload combined) in Megabytes that the Network allows during one month when roaming outside the United States. Can be up to 2TB.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "MessagingEnabled": {
          "description": "Whether SIMs can make, send, and receive SMS using [Commands](https://www.twilio.com/docs/iot/wireless/api/command-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "NationalRoamingDataLimit": {
          "description": "The total data usage (download and upload combined) in Megabytes that the Network allows during one month on non-home networks in the United States. The metering period begins the day of activation and ends on the same day in the following month. Can be up to 2TB. See [national roaming](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource#national-roaming) for more info.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "NationalRoamingEnabled": {
          "description": "Whether SIMs can roam on networks other than the home network (T-Mobile USA) in the United States. See [national roaming](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource#national-roaming).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "VoiceEnabled": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "xml": {
        "name": "CreateRatePlan"
      }
    },
    "WirelessListAccountUsageRecordResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessListAccountUsageRecordResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WirelessWirelessV1AccountUsageRecord",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "wireless.v1.account_usage_record"
              }
            }
          }
        }
      },
      "xml": {
        "name": "ListAccountUsageRecord"
      }
    },
    "WirelessListAccountUsageRecordResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "ListAccountUsageRecord"
      }
    },
    "WirelessListCommandResult": {
      "fields": {
        "commands": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WirelessWirelessV1Command",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "wireless.v1.command"
              }
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessListCommandResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "ListCommand"
      }
    },
    "WirelessListCommandResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "ListCommand"
      }
    },
    "WirelessListDataSessionResult": {
      "fields": {
        "data_sessions": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WirelessWirelessV1SimDataSession",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "wireless.v1.sim.data_session"
              }
            }
          }
        },
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessListDataSessionResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "ListDataSession"
      }
    },
    "WirelessListDataSessionResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "ListDataSession"
      }
    },
    "WirelessListRatePlanResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessListRatePlanResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "rate_plans": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WirelessWirelessV1RatePlan",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "wireless.v1.rate_plan"
              }
            }
          }
        }
      },
      "xml": {
        "name": "ListRatePlan"
      }
    },
    "WirelessListRatePlanResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "ListRatePlan"
      }
    },
    "WirelessListSimResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessListSimResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "sims": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WirelessWirelessV1Sim",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "wireless.v1.sim"
              }
            }
          }
        }
      },
      "xml": {
        "name": "ListSim"
      }
    },
    "WirelessListSimResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "ListSim"
      }
    },
    "WirelessListUsageRecordResult": {
      "fields": {
        "meta": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessListUsageRecordResultMeta",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "usage_records": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WirelessWirelessV1SimUsageRecord",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "wireless.v1.sim.usage_record"
              }
            }
          }
        }
      },
      "xml": {
        "name": "ListUsageRecord"
      }
    },
    "WirelessListUsageRecordResultMeta": {
      "fields": {
        "first_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "next_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "page": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "previous_page_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "ListUsageRecord"
      }
    },
    "WirelessUpdateRatePlanBodyInput": {
      "fields": {
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the resource. It does not have to be unique.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "UpdateRatePlan"
      }
    },
    "WirelessUpdateSimBodyInput": {
      "fields": {
        "AccountSid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) to which the Sim resource should belong. The Account SID can only be that of the requesting Account or that of a [Subaccount](https://www.twilio.com/docs/iam/api/subaccounts) of the requesting Account. Only valid when the Sim resource's status is `new`. For more information, see the [Move SIMs between Subaccounts documentation](https://www.twilio.com/docs/iot/wireless/api/sim-resource#move-sims-between-subaccounts).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "CallbackMethod": {
          "description": "The HTTP method we should use to call `callback_url`. Can be: `POST` or `GET`. The default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessUpdateSimBodyCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "CallbackUrl": {
          "description": "The URL we should call using the `callback_url` when the SIM has finished updating. When the SIM transitions from `new` to `ready` or from any status to `deactivated`, we call this URL when the status changes to an intermediate status (`ready` or `deactivated`) and again when the status changes to its final status (`active` or `canceled`).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "CommandsCallbackMethod": {
          "description": "The HTTP method we should use to call `commands_callback_url`. Can be: `POST` or `GET`. The default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessUpdateSimBodyCommandsCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "CommandsCallbackUrl": {
          "description": "The URL we should call using the `commands_callback_method` when the SIM sends a [Command](https://www.twilio.com/docs/iot/wireless/api/command-resource). Your server should respond with an HTTP status code in the 200 range; any response body is ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "FriendlyName": {
          "description": "A descriptive string that you create to describe the Sim resource. It does not need to be unique.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "RatePlan": {
          "description": "The SID or unique name of the [RatePlan resource](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource) to which the Sim resource should be assigned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ResetStatus": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessSimEnumResetStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "sim_enum_reset_status"
            }
          }
        },
        "SmsFallbackMethod": {
          "description": "The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`. Default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessUpdateSimBodySmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsFallbackUrl": {
          "description": "The URL we should call using the `sms_fallback_method` when an error occurs while retrieving or executing the TwiML requested from `sms_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "SmsMethod": {
          "description": "The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`. Default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessUpdateSimBodySmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "SmsUrl": {
          "description": "The URL we should call using the `sms_method` when the SIM-connected device sends an SMS message that is not a [Command](https://www.twilio.com/docs/iot/wireless/api/command-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "Status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessSimEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "sim_enum_status"
            }
          }
        },
        "UniqueName": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used in place of the `sid` in the URL path to address the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "VoiceFallbackMethod": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessUpdateSimBodyVoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceFallbackUrl": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "VoiceMethod": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessUpdateSimBodyVoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "VoiceUrl": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "UpdateSim"
      }
    },
    "WirelessWirelessV1AccountUsageRecord": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AccountUsageRecord resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "commands": {
          "description": "An object that describes the aggregated Commands usage for all SIMs during the specified period. See [Commands Usage Object](https://www.twilio.com/docs/iot/wireless/api/account-usagerecord-resource#commands-usage-object).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "data": {
          "description": "An object that describes the aggregated Data usage for all SIMs over the period. See [Data Usage Object](https://www.twilio.com/docs/iot/wireless/api/account-usagerecord-resource#data-usage-object).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "period": {
          "description": "The time period for which usage is reported. Contains `start` and `end` properties that describe the period using GMT date-time values specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        }
      },
      "xml": {
        "name": "wireless.v1.account_usage_record"
      }
    },
    "WirelessWirelessV1Command": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Command resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "command": {
          "description": "The message being sent to or from the SIM. For text mode messages, this can be up to 160 characters. For binary mode messages, this is a series of up to 140 bytes of data encoded using base64.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "command_mode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCommandEnumCommandMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "delivery_receipt_requested": {
          "description": "Whether to request a delivery receipt.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "direction": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCommandEnumDirection",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Command resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sim_sid": {
          "description": "The SID of the [Sim resource](https://www.twilio.com/docs/iot/wireless/api/sim-resource) that the Command was sent to or from.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCommandEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "transport": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCommandEnumTransport",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "wireless.v1.command"
      }
    },
    "WirelessWirelessV1RatePlan": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the RatePlan resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "data_enabled": {
          "description": "Whether SIMs can use GPRS/3G/4G/LTE data connectivity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "data_limit": {
          "description": "The total data usage (download and upload combined) in Megabytes that the Network allows during one month on the home network (T-Mobile USA). The metering period begins the day of activation and ends on the same day in the following month. Can be up to 2TB.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "data_metering": {
          "description": "The model used to meter data usage. Can be: `payg` and `quota-1`, `quota-10`, and `quota-50`. Learn more about the available [data metering models](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource#payg-vs-quota-data-plans).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "international_roaming": {
          "description": "The list of services that SIMs capable of using GPRS/3G/4G/LTE data connectivity can use outside of the United States. Can contain: `data` and `messaging`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "international_roaming_data_limit": {
          "description": "The total data usage (download and upload combined) in Megabytes that the Network allows during one month when roaming outside the United States. Can be up to 2TB.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "messaging_enabled": {
          "description": "Whether SIMs can make, send, and receive SMS using [Commands](https://www.twilio.com/docs/iot/wireless/api/command-resource).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "national_roaming_data_limit": {
          "description": "The total data usage (download and upload combined) in Megabytes that the Network allows during one month on non-home networks in the United States. The metering period begins the day of activation and ends on the same day in the following month. Can be up to 2TB.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "national_roaming_enabled": {
          "description": "Whether SIMs can roam on networks other than the home network (T-Mobile USA) in the United States. See [national roaming](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource#national-roaming).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the RatePlan resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_enabled": {
          "description": "Deprecated. Whether SIMs can make and receive voice calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "xml": {
        "name": "wireless.v1.rate_plan"
      }
    },
    "WirelessWirelessV1Sim": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) to which the Sim resource belongs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "commands_callback_method": {
          "description": "The HTTP method we use to call `commands_callback_url`.  Can be: `POST` or `GET`. Default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessWirelessV1SimCommandsCallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "commands_callback_url": {
          "description": "The URL we call using the `commands_callback_method` when the SIM originates a machine-to-machine [Command](https://www.twilio.com/docs/iot/wireless/api/command-resource). Your server should respond with an HTTP status code in the 200 range; any response body will be ignored.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "date_created": {
          "description": "The date and time in GMT when the resource was created specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "date_updated": {
          "description": "The date and time in GMT when the Sim resource was last updated specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "e_id": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "friendly_name": {
          "description": "The string that you assigned to describe the Sim resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "iccid": {
          "description": "The [ICCID](https://en.wikipedia.org/wiki/SIM_card#ICCID) associated with the SIM.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ip_address": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "The URLs of related subresources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "format": "uri-map"
          }
        },
        "rate_plan_sid": {
          "description": "The SID of the [RatePlan resource](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource) to which the Sim resource is assigned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^WP[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "reset_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessSimEnumResetStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the Sim resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "sms_fallback_method": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessWirelessV1SimSmsFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_fallback_url": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "sms_method": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessWirelessV1SimSmsMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "sms_url": {
          "description": "Deprecated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessSimEnumStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "unique_name": {
          "description": "An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The absolute URL of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_fallback_method": {
          "description": "Deprecated. The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`. Default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessWirelessV1SimVoiceFallbackMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_fallback_url": {
          "description": "Deprecated. The URL we call using the `voice_fallback_method` when an error occurs while retrieving or executing the TwiML requested from `voice_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "voice_method": {
          "description": "Deprecated. The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`. Default is `POST`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessWirelessV1SimVoiceMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "http-method"
          }
        },
        "voice_url": {
          "description": "Deprecated. The URL we call using the `voice_method` when the SIM-connected device makes a voice call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "wireless.v1.sim"
      }
    },
    "WirelessWirelessV1SimDataSession": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the DataSession resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "cell_id": {
          "description": "The unique ID of the cellular tower that the device was attached to at the moment when the Data Session was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "cell_location_estimate": {
          "description": "An object that describes the estimated location in latitude and longitude where the device's Data Session took place. The location is derived from the `cell_id` when the Data Session was last updated. See [Cell Location Estimate Object](https://www.twilio.com/docs/iot/wireless/api/datasession-resource#cell-location-estimate-object).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "end": {
          "description": "The date that the record ended, given as GMT in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "imei": {
          "description": "The 'international mobile equipment identity' is the unique ID of the device using the SIM to connect. An IMEI is a 15-digit string: 14 digits for the device identifier plus a check digit calculated using the Luhn formula.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "last_updated": {
          "description": "The date that the resource was last updated, given as GMT in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "operator_country": {
          "description": "The three letter country code representing where the device's Data Session took place. This is determined by looking up the `operator_mcc`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "operator_mcc": {
          "description": "The 'mobile country code' is the unique ID of the home country where the Data Session took place. See: [MCC/MNC lookup](http://mcc-mnc.com/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "operator_mnc": {
          "description": "The 'mobile network code' is the unique ID specific to the mobile operator network where the Data Session took place.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "operator_name": {
          "description": "The friendly name of the mobile operator network that the [SIM](https://www.twilio.com/docs/iot/wireless/api/sim-resource)-connected device is attached to. This is determined by looking up the `operator_mnc`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "packets_downloaded": {
          "description": "The number of packets downloaded by the device between the `start` time and when the Data Session was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "packets_uploaded": {
          "description": "The number of packets uploaded by the device between the `start` time and when the Data Session was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "radio_link": {
          "description": "The generation of wireless technology that the device was using.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sid": {
          "description": "The unique string that we created to identify the DataSession resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sim_sid": {
          "description": "The SID of the [Sim resource](https://www.twilio.com/docs/iot/wireless/api/sim-resource) that the Data Session is for.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start": {
          "description": "The date that the Data Session started, given as GMT in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      },
      "xml": {
        "name": "wireless.v1.sim.data_session"
      }
    },
    "WirelessWirelessV1SimUsageRecord": {
      "fields": {
        "account_sid": {
          "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "maxLength": 34,
            "minLength": 34
          }
        },
        "commands": {
          "description": "An object that describes the SIM's usage of Commands during the specified period. See [Commands Usage Object](https://www.twilio.com/docs/iot/wireless/api/sim-usagerecord-resource#commands-usage-object).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "data": {
          "description": "An object that describes the SIM's data usage during the specified period. See [Data Usage Object](https://www.twilio.com/docs/iot/wireless/api/sim-usagerecord-resource#data-usage-object).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "period": {
          "description": "The time period for which the usage is reported. Contains `start` and `end` datetime values given as GMT in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "sim_sid": {
          "description": "The SID of the [Sim resource](https://www.twilio.com/docs/iot/wireless/api/sim-resource) that this Usage Record is for.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "wireless.v1.sim.usage_record"
      }
    }
  },
  "procedures": {
    "wirelessCreateCommand": {
      "request": {
        "url": "/v1/Commands",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/Commands",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCreateCommandBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Send a Command to a Sim.",
      "result_type": {
        "name": "WirelessWirelessV1Command",
        "type": "named"
      }
    },
    "wirelessCreateRatePlan": {
      "request": {
        "url": "/v1/RatePlans",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/RatePlans",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessCreateRatePlanBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "POST /v1/RatePlans",
      "result_type": {
        "name": "WirelessWirelessV1RatePlan",
        "type": "named"
      }
    },
    "wirelessDeleteCommand": {
      "request": {
        "url": "/v1/Commands/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the Command resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^DC[0-9a-fA-F]{32}$",
              "maxLength": 34,
              "minLength": 34
            }
          }
        }
      },
      "description": "Delete a Command instance from your account.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "wirelessDeleteRatePlan": {
      "request": {
        "url": "/v1/RatePlans/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the RatePlan resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "DELETE /v1/RatePlans/{Sid}",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "wirelessDeleteSim": {
      "request": {
        "url": "/v1/Sims/{Sid}",
        "method": "delete",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID or the `unique_name` of the Sim resource to delete.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a Sim resource on your Account.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "wirelessUpdateRatePlan": {
      "request": {
        "url": "/v1/RatePlans/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID of the RatePlan resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/RatePlans/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessUpdateRatePlanBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "POST /v1/RatePlans/{Sid}",
      "result_type": {
        "name": "WirelessWirelessV1RatePlan",
        "type": "named"
      }
    },
    "wirelessUpdateSim": {
      "request": {
        "url": "/v1/Sims/{Sid}",
        "method": "post",
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "requestBody": {
          "contentType": "application/x-www-form-urlencoded"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Sid": {
          "description": "The SID or the `unique_name` of the Sim resource to update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Sid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of POST /v1/Sims/{Sid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WirelessUpdateSimBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Updates the given properties of a Sim resource on your Account.",
      "result_type": {
        "name": "WirelessWirelessV1Sim",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "WirelessAccountUsageRecordEnumGranularity": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "hourly",
          "daily",
          "all"
        ],
        "type": "enum"
      }
    },
    "WirelessCommandEnumCommandMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "text",
          "binary"
        ],
        "type": "enum"
      }
    },
    "WirelessCommandEnumDirection": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "from_sim",
          "to_sim"
        ],
        "type": "enum"
      }
    },
    "WirelessCommandEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "queued",
          "sent",
          "delivered",
          "received",
          "failed"
        ],
        "type": "enum"
      }
    },
    "WirelessCommandEnumTransport": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "sms",
          "ip"
        ],
        "type": "enum"
      }
    },
    "WirelessCreateCommandBodyCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessSimEnumResetStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "resetting"
        ],
        "type": "enum"
      }
    },
    "WirelessSimEnumStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "new",
          "ready",
          "active",
          "suspended",
          "deactivated",
          "canceled",
          "scheduled",
          "updating"
        ],
        "type": "enum"
      }
    },
    "WirelessUpdateSimBodyCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessUpdateSimBodyCommandsCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessUpdateSimBodySmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessUpdateSimBodySmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessUpdateSimBodyVoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessUpdateSimBodyVoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessUsageRecordEnumGranularity": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "hourly",
          "daily",
          "all"
        ],
        "type": "enum"
      }
    },
    "WirelessWirelessV1SimCommandsCallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessWirelessV1SimSmsFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessWirelessV1SimSmsMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessWirelessV1SimVoiceFallbackMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    },
    "WirelessWirelessV1SimVoiceMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST"
        ],
        "type": "enum"
      }
    }
  }
}
