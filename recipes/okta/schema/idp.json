{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "env": "OKTA_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/oauth2/v1/authorize",
            "tokenUrl": {
              "value": "/oauth2/v1/token",
              "env": "OKTA_OAUTH2_TOKEN_URL"
            },
            "scopes": {
              "okta.myAccount.appAuthenticator.maintenance.manage": "Write access to non-sensitive attributes of user app authenticator enrollments",
              "okta.myAccount.appAuthenticator.maintenance.read": "Read access to non-sensitive attributes of user app authenticator enrollments",
              "okta.myAccount.appAuthenticator.manage": "Write access to user app authenticator enrollments",
              "okta.myAccount.appAuthenticator.read": "Read access to user app authenticator enrollments",
              "okta.myAccount.authenticators.read": "Read access to user authenticator configurations and enrollments",
              "okta.myAccount.email.manage": "Write access to user emails",
              "okta.myAccount.email.read": "Read access to user emails",
              "okta.myAccount.oktaApplications.read": "Read access to the Okta apps list",
              "okta.myAccount.organization.read": "Read access to org details",
              "okta.myAccount.password.manage": "Write access to user password",
              "okta.myAccount.password.read": "Read access to user password metadata",
              "okta.myAccount.phone.manage": "Write access to user phones",
              "okta.myAccount.phone.read": "Read access to user phones",
              "okta.myAccount.profile.manage": "Write access to user profile and schema",
              "okta.myAccount.profile.read": "Read access to user profile and schema",
              "okta.myAccount.sessions.manage": "Write access to user sessions"
            }
          }
        }
      }
    },
    "version": "2024.08.3"
  },
  "functions": {
    "idpGetAuthenticator": {
      "request": {
        "url": "/idp/myaccount/authenticators/{authenticatorId}",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.authenticators.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "authenticatorId": {
          "description": "`id` of the Authenticator",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "authenticatorId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "expand": {
          "description": "Optional additional items to return in the `_embedded` object. Currently supports the value `enrollments`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve an Authenticator",
      "result_type": {
        "name": "IdpAuthenticator",
        "type": "named"
      }
    },
    "idpGetEmail": {
      "request": {
        "url": "/idp/myaccount/emails/{id}",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.email.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "id": {
          "description": "The email ID Use `GET /idp/myaccount/emails` or `POST /idp/myaccount/emails` operations to obtain the email ID when adding a new email address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve an Email",
      "result_type": {
        "name": "Email",
        "type": "named"
      }
    },
    "idpGetEnrollment": {
      "request": {
        "url": "/idp/myaccount/authenticators/{authenticatorId}/enrollments/{enrollmentId}",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.authenticators.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "authenticatorId": {
          "description": "`id` of the Authenticator",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "authenticatorId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "enrollmentId": {
          "description": "`id` of the authenticator Enrollment",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "enrollmentId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve an Enrollment",
      "result_type": {
        "name": "IdpAuthenticatorEnrollment",
        "type": "named"
      }
    },
    "idpGetOrganization": {
      "request": {
        "url": "/idp/myaccount/organization",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.organization.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {},
      "description": "Retrieve the Org details",
      "result_type": {
        "name": "IdpOrganization",
        "type": "named"
      }
    },
    "idpGetPassword": {
      "request": {
        "url": "/idp/myaccount/password",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.password.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {},
      "description": "Retrieve a Password",
      "result_type": {
        "name": "IdpPasswordResponse",
        "type": "named"
      }
    },
    "idpGetPhone": {
      "request": {
        "url": "/idp/myaccount/phones/{id}",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.phone.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "id": {
          "description": "The ID of the phone. Obtain the ID of the phone through `GET /idp/myaccount/phones` or `POST /idp/myaccount/phones` when adding a new phone.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a Phone",
      "result_type": {
        "name": "IdpPhone",
        "type": "named"
      }
    },
    "idpGetProfile": {
      "request": {
        "url": "/idp/myaccount/profile",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.profile.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {},
      "description": "Retrieve my Profile",
      "result_type": {
        "name": "IdpProfile",
        "type": "named"
      }
    },
    "idpGetProfileSchema": {
      "request": {
        "url": "/idp/myaccount/profile/schema",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.profile.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {},
      "description": "Retrieve my Profile Schema",
      "result_type": {
        "name": "IdpSchema",
        "type": "named"
      }
    },
    "idpListAppAuthenticatorPendingPushNotificationChallenges": {
      "request": {
        "url": "/idp/myaccount/app-authenticators/{enrollmentId}/push/notifications",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.appAuthenticator.maintenance.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "enrollmentId": {
          "description": "Id of the user's app authenticator enrollment",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "enrollmentId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "List all pending push notification challenges",
      "result_type": {
        "element_type": {
          "name": "IdpPushNotificationChallenge",
          "type": "named"
        },
        "type": "array"
      }
    },
    "idpListAuthenticators": {
      "request": {
        "url": "/idp/myaccount/authenticators",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.authenticators.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "expand": {
          "description": "Optional additional items to return in the `_embedded` object. Currently supports the value `enrollments`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "List all Authenticators",
      "result_type": {
        "element_type": {
          "name": "IdpAuthenticator",
          "type": "named"
        },
        "type": "array"
      }
    },
    "idpListEmails": {
      "request": {
        "url": "/idp/myaccount/emails",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.email.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {},
      "description": "List all Emails",
      "result_type": {
        "element_type": {
          "name": "Email",
          "type": "named"
        },
        "type": "array"
      }
    },
    "idpListEnrollments": {
      "request": {
        "url": "/idp/myaccount/authenticators/{authenticatorId}/enrollments",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.authenticators.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "authenticatorId": {
          "description": "`id` of the Authenticator",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "authenticatorId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "List all Enrollments",
      "result_type": {
        "element_type": {
          "name": "IdpAuthenticatorEnrollment",
          "type": "named"
        },
        "type": "array"
      }
    },
    "idpListOktaApplications": {
      "request": {
        "url": "/idp/myaccount/okta-applications",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.oktaApplications.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {},
      "description": "List all Okta apps",
      "result_type": {
        "element_type": {
          "name": "IdpOktaApplication",
          "type": "named"
        },
        "type": "array"
      }
    },
    "idpListPhones": {
      "request": {
        "url": "/idp/myaccount/phones",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.phone.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {},
      "description": "List all Phones",
      "result_type": {
        "element_type": {
          "name": "IdpPhone",
          "type": "named"
        },
        "type": "array"
      }
    },
    "idpPollChallengeForEmailMagicLink": {
      "request": {
        "url": "/idp/myaccount/emails/{id}/challenge/{challengeId}",
        "method": "get",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.email.read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "challengeId": {
          "description": "The `challengeId` of the email  Use the `POST /idp/myaccount/emails/{id}/challenge/` operation to obtain the `challengeId` when creating a new challenge.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "challengeId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "id": {
          "description": "The email ID  Use the `GET /idp/myaccount/emails` or `POST /idp/myaccount/emails` operations to obtain the ID when adding a new email address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Poll the Challenge for Email Magic Link",
      "result_type": {
        "name": "IdpPollChallengeForEmailMagicLinkResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "IdpAppAuthenticatorEnrollment": {
      "description": "App authenticator enrollment object",
      "fields": {
        "authenticatorId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "createdDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "device": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentDevice",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "lastUpdated": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "links": {
          "description": "Discoverable resources related to the app authenticator",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "methods": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentMethods",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "user": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentUser",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentDevice": {
      "fields": {
        "clientInstanceId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "createdDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "lastUpdated": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentDeviceStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentLinks": {
      "description": "Discoverable resources related to the app authenticator",
      "fields": {
        "self": {
          "description": "Link to the resource (app authenticator)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentLinksSelf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentLinksSelf": {
      "description": "Link to the resource (app authenticator)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentLinksSelfHints",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentLinksSelfHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpAppAuthenticatorEnrollmentLinksSelfHintsAllow",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentMethods": {
      "fields": {
        "push": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentMethodsPush",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentMethodsPush": {
      "fields": {
        "createdDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "lastUpdated": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "links": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentMethodsPushLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentMethodsPushLinks": {
      "fields": {
        "pending": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentMethodsPushLinksPending",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentMethodsPushLinksPending": {
      "fields": {
        "hints": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentMethodsPushLinksPendingHints",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentMethodsPushLinksPendingHints": {
      "fields": {
        "allow": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpAppAuthenticatorEnrollmentMethodsPushLinksPendingHintsAllow",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorEnrollmentRequestDeviceInput": {
      "fields": {
        "clientInstanceBundleId": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "clientInstanceDeviceSdkVersion": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "clientInstanceKey": {
          "type": {
            "name": "IdpKeyObjectInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "clientInstanceVersion": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "deviceAttestation": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "displayName": {
          "description": "The device's display name",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "manufacturer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "model": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "osVersion": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "platform": {
          "type": {
            "name": "IdpAppAuthenticatorEnrollmentRequestDevicePlatform",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "secureHardwarePresent": {
          "description": "Indicates if the device is equipped with TPM storage for storing signing keys",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "udid": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollmentRequest"
      }
    },
    "IdpAppAuthenticatorEnrollmentRequestInput": {
      "description": "App Authenticator enrollment request",
      "fields": {
        "authenticatorId": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "device": {
          "type": {
            "name": "IdpAppAuthenticatorEnrollmentRequestDeviceInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "methods": {
          "type": {
            "name": "IdpAppAuthenticatorEnrollmentRequestMethodsInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollmentRequest"
      }
    },
    "IdpAppAuthenticatorEnrollmentRequestMethodsInput": {
      "fields": {
        "push": {
          "type": {
            "name": "IdpAppAuthenticatorEnrollmentRequestMethodsPushInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollmentRequest"
      }
    },
    "IdpAppAuthenticatorEnrollmentRequestMethodsPushInput": {
      "fields": {
        "apsEnvironment": {
          "description": "Target APS type that application registers to. Required for iOS enrollments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentRequestMethodsPushApsEnvironment",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "keys": {
          "type": {
            "name": "IdpAppAuthenticatorEnrollmentRequestMethodsPushKeysInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "pushToken": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollmentRequest"
      }
    },
    "IdpAppAuthenticatorEnrollmentRequestMethodsPushKeysInput": {
      "fields": {
        "capabilities": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorMethodCapabilitiesInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "proofOfPossession": {
          "type": {
            "name": "IdpKeyObjectInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "userVerification": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpKeyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollmentRequest"
      }
    },
    "IdpAppAuthenticatorEnrollmentUser": {
      "fields": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "username": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorEnrollment"
      }
    },
    "IdpAppAuthenticatorMethodCapabilitiesInput": {
      "fields": {
        "transactionTypes": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpAppAuthenticatorMethodCapabilitiesTransactionTypes",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "AppAuthenticatorMethodCapabilities"
      }
    },
    "IdpAuthenticator": {
      "description": "A specific Authenticator of the current user",
      "fields": {
        "_embedded": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAuthenticatorEmbedded",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "_links": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAuthenticatorLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "enrollable": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "key": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAuthenticatorKey",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "Authenticator"
      }
    },
    "IdpAuthenticatorEmbedded": {
      "fields": {
        "enrollments": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpAuthenticatorEnrollment",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "Authenticator"
      }
    },
    "IdpAuthenticatorEnrollment": {
      "description": "Authenticator Enrollment of the current user",
      "fields": {
        "_links": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAuthenticatorEnrollmentLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "canReset": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "canUnenroll": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "created": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "lastChallenged": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "profile": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AuthenticatorEnrollment"
      }
    },
    "IdpAuthenticatorEnrollmentLinks": {
      "fields": {
        "authenticator": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpHrefObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "self": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpHrefObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "AuthenticatorEnrollment"
      }
    },
    "IdpAuthenticatorLinks": {
      "fields": {
        "enrollments": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpHrefObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "self": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpHrefObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "Authenticator"
      }
    },
    "IdpCreateEmailBodyInput": {
      "fields": {
        "profile": {
          "description": "Defines the email address on the profile",
          "type": {
            "name": "IdpCreateEmailBodyProfileInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "role": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpCreateEmailBodyRole",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sendEmail": {
          "description": "Specifies whether Okta or the application sends an email to the end user",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "state": {
          "description": "Any application state that the client wishes to persist across the email challenge flow, and receive at the callback URL. Define the callback URL in the OIDC app configuration. This parameter proves to the client that the email link is verified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "createEmail"
      }
    },
    "IdpCreateEmailBodyProfileInput": {
      "description": "Defines the email address on the profile",
      "fields": {
        "email": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        }
      },
      "xml": {
        "name": "createEmail"
      }
    },
    "IdpCreatePasswordBodyInput": {
      "fields": {
        "profile": {
          "description": "Defines the password on the profile",
          "type": {
            "name": "IdpCreatePasswordBodyProfileInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "createPassword"
      }
    },
    "IdpCreatePasswordBodyProfileInput": {
      "description": "Defines the password on the profile",
      "fields": {
        "password": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "createPassword"
      }
    },
    "IdpCreatePhoneBodyInput": {
      "fields": {
        "method": {
          "description": "The method of the challenge sent to the newly added phone. Applicable when sendCode is true.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpCreatePhoneBodyMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "profile": {
          "description": "Defines the phone number on the profile",
          "type": {
            "name": "IdpCreatePhoneBodyProfileInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "sendCode": {
          "description": "Whether to send a challenge to the newly added phone",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "xml": {
        "name": "createPhone"
      }
    },
    "IdpCreatePhoneBodyProfileInput": {
      "description": "Defines the phone number on the profile",
      "fields": {
        "phoneNumber": {
          "description": "The newly added phone number",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "createPhone"
      }
    },
    "IdpHrefObject": {
      "fields": {
        "hints": {
          "description": "Describes allowed HTTP verbs for the `href`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpHrefObjectHints",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Link name",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "description": "The media type of the link. If omitted, it is implicitly `application/json`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "HrefObject"
      }
    },
    "IdpHrefObjectHints": {
      "description": "Describes allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpHttpMethod",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "HrefObject"
      }
    },
    "IdpKeyObjectInput": {
      "fields": {
        "crv": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpKeyECCrv",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "e": {
          "description": "The key exponent of a RSA key",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "kid": {
          "description": "The unique identifier of the key",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "kty": {
          "description": "The type of public key",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpKeyObjectKtyEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "n": {
          "description": "The modulus of the RSA key",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "okta:kpr": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpKeyObjectOktaKprEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "x": {
          "description": "The public x coordinate for the elliptic curve point",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "y": {
          "description": "The public y coordinate for the elliptic curve point",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "IdpOktaApplication": {
      "description": "Okta apps list",
      "fields": {
        "displayName": {
          "description": "The display name of the app",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "id": {
          "description": "The `client_id` of the app",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "name": {
          "description": "The name of the app",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "OktaApplication"
      }
    },
    "IdpOrganization": {
      "description": "Org Object",
      "fields": {
        "_links": {
          "description": "Discoverable resources related to the Org",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpOrganizationLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "helpLink": {
          "description": "The URL of the Org's help resources",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the Org",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "supportEmail": {
          "description": "The email address of the Org support contact",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The URL of the Org",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "Organization"
      }
    },
    "IdpOrganizationLinks": {
      "description": "Discoverable resources related to the Org",
      "fields": {
        "self": {
          "description": "Link to the resource (self)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpOrganizationLinksSelf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "Organization"
      }
    },
    "IdpOrganizationLinksSelf": {
      "description": "Link to the resource (self)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpOrganizationLinksSelfHints",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "Organization"
      }
    },
    "IdpOrganizationLinksSelfHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpOrganizationLinksSelfHintsAllow",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "Organization"
      }
    },
    "IdpPasswordResponse": {
      "description": "Password Response Object",
      "fields": {
        "_links": {
          "description": "Discoverable resources related to the password",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPasswordResponseLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created": {
          "description": "If password is `ACTIVE`, returns the date when password was first enrolled",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "lastUpdated": {
          "description": "If password is `ACTIVE`, returns the date when password was last updated",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status": {
          "description": "`ACTIVE`, `EXPIRED`, `SUSPENDED`, `NOT_ENROLLED`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "PasswordResponse"
      }
    },
    "IdpPasswordResponseLinks": {
      "description": "Discoverable resources related to the password",
      "fields": {
        "self": {
          "description": "Link to the resource (self)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPasswordResponseLinksSelf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "PasswordResponse"
      }
    },
    "IdpPasswordResponseLinksSelf": {
      "description": "Link to the resource (self)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPasswordResponseLinksSelfHints",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "PasswordResponse"
      }
    },
    "IdpPasswordResponseLinksSelfHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpPasswordResponseLinksSelfHintsAllow",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "PasswordResponse"
      }
    },
    "IdpPhone": {
      "description": "Phone Object",
      "fields": {
        "_links": {
          "description": "Discoverable resources related to the caller's phone",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPhoneLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "id": {
          "description": "The phone ID of the caller",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "profile": {
          "description": "Defines the phone number on the profile",
          "type": {
            "name": "IdpPhoneProfile",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "status": {
          "description": "The phone status of the caller",
          "type": {
            "name": "IdpPhoneStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "Phone"
      }
    },
    "IdpPhoneLinks": {
      "description": "Discoverable resources related to the caller's phone",
      "fields": {
        "challenge": {
          "description": "Link to the resource (challenge)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPhoneLinksChallenge",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "self": {
          "description": "Link to the resource (self)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPhoneLinksSelf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "verify": {
          "description": "Link to the resource (verify)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPhoneLinksVerify",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "Phone"
      }
    },
    "IdpPhoneLinksChallenge": {
      "description": "Link to the resource (challenge)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPhoneLinksChallengeHints",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "Phone"
      }
    },
    "IdpPhoneLinksChallengeHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpPhoneLinksChallengeHintsAllow",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "Phone"
      }
    },
    "IdpPhoneLinksSelf": {
      "description": "Link to the resource (self)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPhoneLinksSelfHints",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "Phone"
      }
    },
    "IdpPhoneLinksSelfHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpPhoneLinksSelfHintsAllow",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "Phone"
      }
    },
    "IdpPhoneLinksVerify": {
      "description": "Link to the resource (verify)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPhoneLinksVerifyHints",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "Phone"
      }
    },
    "IdpPhoneLinksVerifyHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdpPhoneLinksVerifyHintsAllow",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "Phone"
      }
    },
    "IdpPhoneProfile": {
      "description": "Defines the phone number on the profile",
      "fields": {
        "phoneNumber": {
          "description": "The phone number on the profile",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "Phone"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResult": {
      "fields": {
        "_links": {
          "description": "Discoverable resources related to the poll for the email challenge's status",
          "type": {
            "name": "IdpPollChallengeForEmailMagicLinkResultLinks",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "expiresAt": {
          "description": "The time at which the challenge expires. The lifetime of a challenge is five minutes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "id": {
          "description": "The email ID",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "profile": {
          "description": "Defines the email address on the profile",
          "type": {
            "name": "IdpPollChallengeForEmailMagicLinkResultProfile",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "status": {
          "description": "The challenge status of the caller's email",
          "type": {
            "name": "IdpPollChallengeForEmailMagicLinkResultStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "pollChallengeForEmailMagicLink"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResultLinks": {
      "description": "Discoverable resources related to the poll for the email challenge's status",
      "fields": {
        "poll": {
          "description": "Link to the resource (poll)",
          "type": {
            "name": "IdpPollChallengeForEmailMagicLinkResultLinksPoll",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "verify": {
          "description": "Link to the resource (verify)",
          "type": {
            "name": "IdpPollChallengeForEmailMagicLinkResultLinksVerify",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "pollChallengeForEmailMagicLink"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResultLinksPoll": {
      "description": "Link to the resource (poll)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "name": "IdpPollChallengeForEmailMagicLinkResultLinksPollHints",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "pollChallengeForEmailMagicLink"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResultLinksPollHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "element_type": {
              "name": "IdpPollChallengeForEmailMagicLinkResultLinksPollHintsAllow",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "pollChallengeForEmailMagicLink"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResultLinksVerify": {
      "description": "Link to the resource (verify)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "name": "IdpPollChallengeForEmailMagicLinkResultLinksVerifyHints",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "pollChallengeForEmailMagicLink"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResultLinksVerifyHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "element_type": {
              "name": "IdpPollChallengeForEmailMagicLinkResultLinksVerifyHintsAllow",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "pollChallengeForEmailMagicLink"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResultProfile": {
      "description": "Defines the email address on the profile",
      "fields": {
        "email": {
          "description": "The email address on the profile",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "pollChallengeForEmailMagicLink"
      }
    },
    "IdpProfile": {
      "description": "Profile object based on the user's directory profile schema (based on UD)",
      "fields": {
        "_links": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpProfileLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "createdAt": {
          "description": "The timestamp of the creation of the caller's account",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "modifiedAt": {
          "description": "The timestamp of the last update to the caller's account",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "profile": {
          "description": "The properties defined in the [User Profile schema](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "Profile"
      }
    },
    "IdpProfileLinks": {
      "fields": {
        "describedBy": {
          "description": "Link to the resource (describedBy)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpProfileLinksDescribedBy",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "self": {
          "description": "Link to the resource (self)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpProfileLinksSelf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "Profile"
      }
    },
    "IdpProfileLinksDescribedBy": {
      "description": "Link to the resource (describedBy)",
      "fields": {
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "Profile"
      }
    },
    "IdpProfileLinksSelf": {
      "description": "Link to the resource (self)",
      "fields": {
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "Profile"
      }
    },
    "IdpPushNotificationChallenge": {
      "description": "Push notification challenge request object for an app authenticator",
      "fields": {
        "challenge": {
          "description": "JWT issued by Okta at the time of challenging for a push notification.  This based64-encoded JWT consists of a [JWT header](/openapi/okta-myaccount/myaccount/tag/AppAuthenticator/#tag/AppAuthenticator/schema/PushNotificationChallengeRequestJwtHeader) and a [JWT payload](/openapi/okta-myaccount/myaccount/tag/AppAuthenticator/#tag/AppAuthenticator/schema/PushNotificationChallengeRequestJwt).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "payloadVersion": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPushNotificationChallengePayloadVersion",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "PushNotificationChallenge"
      }
    },
    "IdpPushNotificationVerificationInput": {
      "description": "Push notification challenge response object for an app authenticator",
      "fields": {
        "challengeResponse": {
          "description": "JWT issued by the app authenticator at the time of push notification verification  This based64-encoded JWT consists of a [JWT header](/openapi/okta-myaccount/myaccount/tag/AppAuthenticator/#tag/AppAuthenticator/schema/PushNotificationChallengeResponseJwtHeader) and a [JWT payload](/openapi/okta-myaccount/myaccount/tag/AppAuthenticator/#tag/AppAuthenticator/schema/PushNotificationChallengeResponseJwt).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "method": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPushNotificationVerificationMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "PushNotificationVerification"
      }
    },
    "IdpReplacePasswordBodyInput": {
      "fields": {
        "profile": {
          "description": "Defines the password on the profile",
          "type": {
            "name": "IdpReplacePasswordBodyProfileInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "replacePassword"
      }
    },
    "IdpReplacePasswordBodyProfileInput": {
      "description": "Defines the password on the profile",
      "fields": {
        "password": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "replacePassword"
      }
    },
    "IdpReplaceProfileBodyInput": {
      "fields": {
        "profile": {
          "description": "The properties defined in the schema",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "replaceProfile"
      }
    },
    "IdpSchema": {
      "description": "Describes a user's directory profile schema (based on UD)",
      "fields": {
        "_links": {
          "description": "Discoverable resources related to the user's directory profile",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpSchemaLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "properties": {
          "description": "The properties defined in the [User Profile schema](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "Schema"
      }
    },
    "IdpSchemaLinks": {
      "description": "Discoverable resources related to the user's directory profile",
      "fields": {
        "self": {
          "description": "Link to the resource (self)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpSchemaLinksSelf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "user": {
          "description": "Link to the resource (user)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpSchemaLinksUser",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "Schema"
      }
    },
    "IdpSchemaLinksSelf": {
      "description": "Link to the resource (self)",
      "fields": {
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "Schema"
      }
    },
    "IdpSchemaLinksUser": {
      "description": "Link to the resource (user)",
      "fields": {
        "href": {
          "description": "Link URI",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "xml": {
        "name": "Schema"
      }
    },
    "IdpSendEmailChallengeBodyInput": {
      "fields": {
        "state": {
          "description": "(Optional) The state parameter that contains the state of the client",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "sendEmailChallenge"
      }
    },
    "IdpSendEmailChallengeResult": {
      "fields": {
        "_links": {
          "description": "Discoverable resources related to the caller's email challenge",
          "type": {
            "name": "IdpSendEmailChallengeResultLinks",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "expiresAt": {
          "description": "The time when the challenge expires. A challenge has a lifetime of five minutes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "id": {
          "description": "The email ID of the caller",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "profile": {
          "description": "Defines the email address on the profile",
          "type": {
            "name": "IdpSendEmailChallengeResultProfile",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "status": {
          "description": "The challenge status of the caller's email",
          "type": {
            "name": "IdpSendEmailChallengeResultStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "sendEmailChallenge"
      }
    },
    "IdpSendEmailChallengeResultLinks": {
      "description": "Discoverable resources related to the caller's email challenge",
      "fields": {
        "poll": {
          "description": "Link to the resource (poll)",
          "type": {
            "name": "IdpSendEmailChallengeResultLinksPoll",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "verify": {
          "description": "Link to the resource (verify)",
          "type": {
            "name": "IdpSendEmailChallengeResultLinksVerify",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "sendEmailChallenge"
      }
    },
    "IdpSendEmailChallengeResultLinksPoll": {
      "description": "Link to the resource (poll)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "name": "IdpSendEmailChallengeResultLinksPollHints",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "sendEmailChallenge"
      }
    },
    "IdpSendEmailChallengeResultLinksPollHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "element_type": {
              "name": "IdpSendEmailChallengeResultLinksPollHintsAllow",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "sendEmailChallenge"
      }
    },
    "IdpSendEmailChallengeResultLinksVerify": {
      "description": "Link to the resource (verify)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "name": "IdpSendEmailChallengeResultLinksVerifyHints",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "sendEmailChallenge"
      }
    },
    "IdpSendEmailChallengeResultLinksVerifyHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "element_type": {
              "name": "IdpSendEmailChallengeResultLinksVerifyHintsAllow",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "sendEmailChallenge"
      }
    },
    "IdpSendEmailChallengeResultProfile": {
      "description": "Defines the email address on the profile",
      "fields": {
        "email": {
          "description": "The email address on the profile",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "sendEmailChallenge"
      }
    },
    "IdpSendPhoneChallengeBodyInput": {
      "fields": {
        "method": {
          "description": "The method with which the challenge should be sent",
          "type": {
            "name": "IdpSendPhoneChallengeBodyMethod",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "retry": {
          "description": "Indicates whether this is a normal challenge or retry",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "xml": {
        "name": "sendPhoneChallenge"
      }
    },
    "IdpSendPhoneChallengeResult": {
      "fields": {
        "_links": {
          "description": "Discoverable resources related to the phone challenge",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpSendPhoneChallengeResultLinks",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "sendPhoneChallenge"
      }
    },
    "IdpSendPhoneChallengeResultLinks": {
      "description": "Discoverable resources related to the phone challenge",
      "fields": {
        "verify": {
          "description": "Link to the resource (verify)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpSendPhoneChallengeResultLinksVerify",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "sendPhoneChallenge"
      }
    },
    "IdpSendPhoneChallengeResultLinksVerify": {
      "description": "Link to the resource (verify)",
      "fields": {
        "hints": {
          "description": "Describes the allowed HTTP verbs for the `href`",
          "type": {
            "name": "IdpSendPhoneChallengeResultLinksVerifyHints",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "href": {
          "description": "Link URI",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        }
      },
      "xml": {
        "name": "sendPhoneChallenge"
      }
    },
    "IdpSendPhoneChallengeResultLinksVerifyHints": {
      "description": "Describes the allowed HTTP verbs for the `href`",
      "fields": {
        "allow": {
          "type": {
            "element_type": {
              "name": "IdpSendPhoneChallengeResultLinksVerifyHintsAllow",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "xml": {
        "name": "sendPhoneChallenge"
      }
    },
    "IdpUpdateAppAuthenticatorEnrollmentRequestInput": {
      "fields": {
        "methods": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpUpdateAppAuthenticatorEnrollmentRequestMethodsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "UpdateAppAuthenticatorEnrollmentRequest"
      }
    },
    "IdpUpdateAppAuthenticatorEnrollmentRequestMethodsInput": {
      "fields": {
        "push": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpUpdateAppAuthenticatorEnrollmentRequestMethodsPushInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "UpdateAppAuthenticatorEnrollmentRequest"
      }
    },
    "IdpUpdateAppAuthenticatorEnrollmentRequestMethodsPushInput": {
      "fields": {
        "capabilities": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorMethodCapabilitiesInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "keys": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpUpdateAppAuthenticatorEnrollmentRequestMethodsPushKeysInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "pushToken": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "xml": {
        "name": "UpdateAppAuthenticatorEnrollmentRequest"
      }
    },
    "IdpUpdateAppAuthenticatorEnrollmentRequestMethodsPushKeysInput": {
      "fields": {
        "userVerification": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpKeyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "xml": {
        "name": "UpdateAppAuthenticatorEnrollmentRequest"
      }
    },
    "IdpVerifyEmailOtpBodyInput": {
      "fields": {
        "verificationCode": {
          "description": "A six-digit verification code sent to the user in the \"Confirm email address change\" email",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "password"
          }
        }
      },
      "xml": {
        "name": "verifyEmailOtp"
      }
    },
    "IdpVerifyPhoneChallengeBodyInput": {
      "fields": {
        "verificationCode": {
          "description": "A six-digit verification code that the user receives through SMS or CALL",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "password"
          }
        }
      },
      "xml": {
        "name": "verifyPhoneChallenge"
      }
    }
  },
  "procedures": {
    "idpCreateAppAuthenticatorEnrollment": {
      "request": {
        "url": "/idp/myaccount/app-authenticators",
        "method": "post",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.appAuthenticator.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json, okta-version=1.0.0"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "App Authenticator enrollment request",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpAppAuthenticatorEnrollmentRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "AppAuthenticatorEnrollmentRequest"
              }
            }
          }
        }
      },
      "description": "Create an app authenticator enrollment",
      "result_type": {
        "name": "IdpAppAuthenticatorEnrollment",
        "type": "named"
      }
    },
    "idpCreateEmail": {
      "request": {
        "url": "/idp/myaccount/emails",
        "method": "post",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.email.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /idp/myaccount/emails",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpCreateEmailBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create an Email",
      "result_type": {
        "name": "Email",
        "type": "named"
      }
    },
    "idpCreatePassword": {
      "request": {
        "url": "/idp/myaccount/password",
        "method": "post",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.password.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /idp/myaccount/password",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpCreatePasswordBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a Password",
      "result_type": {
        "name": "IdpPasswordResponse",
        "type": "named"
      }
    },
    "idpCreatePhone": {
      "request": {
        "url": "/idp/myaccount/phones",
        "method": "post",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.phone.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /idp/myaccount/phones",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpCreatePhoneBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create a Phone",
      "result_type": {
        "name": "IdpPhone",
        "type": "named"
      }
    },
    "idpDeleteAppAuthenticatorEnrollment": {
      "request": {
        "url": "/idp/myaccount/app-authenticators/{enrollmentId}",
        "method": "delete",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.appAuthenticator.manage"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "enrollmentId": {
          "description": "Id of the user's app authenticator enrollment",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "enrollmentId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete an app authenticator enrollment",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "idpDeleteEmail": {
      "request": {
        "url": "/idp/myaccount/emails/{id}",
        "method": "delete",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.email.manage"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "id": {
          "description": "The email ID Use `GET /idp/myaccount/emails` or `POST /idp/myaccount/emails` operations to obtain the email ID when adding a new email address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete an Email",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "idpDeletePassword": {
      "request": {
        "url": "/idp/myaccount/password",
        "method": "delete",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.password.manage"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {},
      "description": "Delete a Password",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "idpDeletePhone": {
      "request": {
        "url": "/idp/myaccount/phones/{id}",
        "method": "delete",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.phone.manage"
            ]
          }
        ],
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "id": {
          "description": "The ID of the phone. Obtain the ID of the phone through `GET /idp/myaccount/phones` or `POST /idp/myaccount/phones` when adding a new phone.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a Phone",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "idpDeleteSessions": {
      "request": {
        "url": "/idp/myaccount/sessions",
        "method": "delete",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.sessions.manage"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "Delete all sessions",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "idpReplacePassword": {
      "request": {
        "url": "/idp/myaccount/password",
        "method": "put",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.password.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /idp/myaccount/password",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpReplacePasswordBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Replace a Password",
      "result_type": {
        "name": "IdpPasswordResponse",
        "type": "named"
      }
    },
    "idpReplaceProfile": {
      "request": {
        "url": "/idp/myaccount/profile",
        "method": "put",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.profile.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /idp/myaccount/profile",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpReplaceProfileBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Replace my Profile My User Profile",
      "result_type": {
        "name": "IdpProfile",
        "type": "named"
      }
    },
    "idpSendEmailChallenge": {
      "request": {
        "url": "/idp/myaccount/emails/{id}/challenge",
        "method": "post",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.email.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /idp/myaccount/emails/{id}/challenge",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpSendEmailChallengeBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The email ID  Use the `GET /idp/myaccount/emails` or `POST /idp/myaccount/emails` operations when adding a new email address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Send an Email Challenge",
      "result_type": {
        "name": "IdpSendEmailChallengeResult",
        "type": "named"
      }
    },
    "idpSendPhoneChallenge": {
      "request": {
        "url": "/idp/myaccount/phones/{id}/challenge",
        "method": "post",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.phone.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /idp/myaccount/phones/{id}/challenge",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpSendPhoneChallengeBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Send a Phone Challenge",
      "result_type": {
        "name": "IdpSendPhoneChallengeResult",
        "type": "named"
      }
    },
    "idpUpdateAppAuthenticatorEnrollment": {
      "request": {
        "url": "/idp/myaccount/app-authenticators/{enrollmentId}",
        "method": "patch",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.appAuthenticator.maintenance.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/merge-patch+json;okta-version=1.0.0"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PATCH /idp/myaccount/app-authenticators/{enrollmentId}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpUpdateAppAuthenticatorEnrollmentRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "UpdateAppAuthenticatorEnrollmentRequest"
              }
            }
          }
        },
        "enrollmentId": {
          "description": "Id of the user's app authenticator enrollment",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "enrollmentId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update an app authenticator enrollment",
      "result_type": {
        "name": "IdpAppAuthenticatorEnrollment",
        "type": "named"
      }
    },
    "idpVerifyAppAuthenticatorPushNotificationChallenge": {
      "request": {
        "url": "/idp/myaccount/app-authenticators/challenge/{challengeId}/verify",
        "method": "post",
        "requestBody": {
          "contentType": "application/json;okta-version=1.0.0"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Push notification challenge response object for an app authenticator",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpPushNotificationVerificationInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "PushNotificationVerification"
              }
            }
          }
        },
        "challengeId": {
          "description": "Id of the challenge associated with the app authenticator",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "challengeId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Verify a push notification challenge response from the app authenticator",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "JSON",
          "type": "named"
        }
      }
    },
    "idpVerifyEmailOtp": {
      "request": {
        "url": "/idp/myaccount/emails/{id}/challenge/{challengeId}/verify",
        "method": "post",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.email.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /idp/myaccount/emails/{id}/challenge/{challengeId}/verify",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpVerifyEmailOtpBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "challengeId": {
          "description": "The `challengeId` of the email Use the `POST /idp/myaccount/emails/{id}/challenge` operation to obtain the `challengeId` when creating a new challenge.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "challengeId",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "id": {
          "description": "The email ID Use `GET /idp/myaccount/emails` or `POST /idp/myaccount/emails` operations to obtain the email ID when adding a new email address.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Verify an Email OTP",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "idpVerifyPhoneChallenge": {
      "request": {
        "url": "/idp/myaccount/phones/{id}/verify",
        "method": "post",
        "security": [
          {
            "oauth2": [
              "okta.myAccount.phone.manage"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json;okta-version=1.0.0"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /idp/myaccount/phones/{id}/verify",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdpVerifyPhoneChallengeBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Verify a Phone Challenge",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Email": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "IdpAppAuthenticatorEnrollmentDeviceStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ACTIVE"
        ],
        "type": "enum"
      }
    },
    "IdpAppAuthenticatorEnrollmentLinksSelfHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PATCH",
          "DELETE"
        ],
        "type": "enum"
      }
    },
    "IdpAppAuthenticatorEnrollmentMethodsPushLinksPendingHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET"
        ],
        "type": "enum"
      }
    },
    "IdpAppAuthenticatorEnrollmentRequestDevicePlatform": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ANDROID",
          "IOS"
        ],
        "type": "enum"
      }
    },
    "IdpAppAuthenticatorEnrollmentRequestMethodsPushApsEnvironment": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PRODUCTION",
          "DEVELOPMENT"
        ],
        "type": "enum"
      }
    },
    "IdpAppAuthenticatorMethodCapabilitiesTransactionTypes": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "LOGIN",
          "CIBA"
        ],
        "type": "enum"
      }
    },
    "IdpAuthenticatorKey": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "custom_app",
          "custom_otp",
          "duo",
          "external_idp",
          "google_otp",
          "okta_email",
          "okta_password",
          "okta_verify",
          "onprem_mfa",
          "phone_number",
          "rsa_token",
          "security_question",
          "symantec_vip",
          "webauthn",
          "yubikey_token"
        ],
        "type": "enum"
      }
    },
    "IdpCreateEmailBodyRole": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PRIMARY",
          "SECONDARY"
        ],
        "type": "enum"
      }
    },
    "IdpCreatePhoneBodyMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SMS",
          "CALL"
        ],
        "type": "enum"
      }
    },
    "IdpHttpMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DELETE",
          "GET",
          "POST",
          "PUT"
        ],
        "type": "enum"
      }
    },
    "IdpKeyECCrv": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "P-256"
        ],
        "type": "enum"
      }
    },
    "IdpKeyObjectKtyEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "EC",
          "RSA"
        ],
        "type": "enum"
      }
    },
    "IdpKeyObjectOktaKprEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "HARDWARE",
          "SOFTWARE"
        ],
        "type": "enum"
      }
    },
    "IdpOrganizationLinksSelfHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET"
        ],
        "type": "enum"
      }
    },
    "IdpPasswordResponseLinksSelfHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DELETE",
          "GET",
          "PUT"
        ],
        "type": "enum"
      }
    },
    "IdpPhoneLinksChallengeHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DELETE",
          "GET",
          "POST",
          "PUT"
        ],
        "type": "enum"
      }
    },
    "IdpPhoneLinksSelfHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "DELETE",
          "PUT"
        ],
        "type": "enum"
      }
    },
    "IdpPhoneLinksVerifyHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DELETE",
          "GET",
          "POST",
          "PUT"
        ],
        "type": "enum"
      }
    },
    "IdpPhoneStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "VERIFIED",
          "UNVERIFIED"
        ],
        "type": "enum"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResultLinksPollHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DELETE",
          "GET",
          "POST",
          "PUT"
        ],
        "type": "enum"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResultLinksVerifyHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DELETE",
          "GET",
          "POST",
          "PUT"
        ],
        "type": "enum"
      }
    },
    "IdpPollChallengeForEmailMagicLinkResultStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "VERIFIED",
          "UNVERIFIED"
        ],
        "type": "enum"
      }
    },
    "IdpPushNotificationChallengePayloadVersion": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "IDXv1"
        ],
        "type": "enum"
      }
    },
    "IdpPushNotificationVerificationMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "push"
        ],
        "type": "enum"
      }
    },
    "IdpSendEmailChallengeResultLinksPollHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET"
        ],
        "type": "enum"
      }
    },
    "IdpSendEmailChallengeResultLinksVerifyHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "POST"
        ],
        "type": "enum"
      }
    },
    "IdpSendEmailChallengeResultStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "VERIFIED",
          "UNVERIFIED"
        ],
        "type": "enum"
      }
    },
    "IdpSendPhoneChallengeBodyMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SMS",
          "CALL"
        ],
        "type": "enum"
      }
    },
    "IdpSendPhoneChallengeResultLinksVerifyHintsAllow": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET"
        ],
        "type": "enum"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
