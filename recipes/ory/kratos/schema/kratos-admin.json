{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "http://localhost:4434/api/kratos/admin",
          "env": "KRATOS_ADMIN_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "sessionCookie": {
        "type": "cookie"
      },
      "sessionToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Session-Token",
        "value": {
          "env": "KRATOS_ADMIN_SESSION_TOKEN"
        }
      }
    }
  },
  "functions": {
    "kratosGetIdentity": {
      "request": {
        "url": "/identities/{id}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "ID must be set to the ID of identity you want to get",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get an Identity",
      "result_type": {
        "name": "KratosIdentity",
        "type": "named"
      }
    },
    "kratosGetSelfServiceError": {
      "request": {
        "url": "/self-service/errors",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "error": {
          "description": "Error is the container's ID",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "error",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get User-Facing Self-Service Errors",
      "result_type": {
        "name": "KratosErrorContainer",
        "type": "named"
      }
    },
    "kratosGetSelfServiceLoginFlow": {
      "request": {
        "url": "/self-service/login/flows",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "The Login Flow ID  The value for this parameter comes from `flow` URL Query parameter sent to your application (e.g. `/login?flow=abcde`).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get Login Flow",
      "result_type": {
        "name": "KratosLoginFlow",
        "type": "named"
      }
    },
    "kratosGetSelfServiceRecoveryFlow": {
      "request": {
        "url": "/self-service/recovery/flows",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "The Flow ID  The value for this parameter comes from `request` URL Query parameter sent to your application (e.g. `/recovery?flow=abcde`).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get information about a recovery flow",
      "result_type": {
        "name": "KratosRecoveryFlow",
        "type": "named"
      }
    },
    "kratosGetSelfServiceRegistrationFlow": {
      "request": {
        "url": "/self-service/registration/flows",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "The Registration Flow ID  The value for this parameter comes from `flow` URL Query parameter sent to your application (e.g. `/registration?flow=abcde`).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get Registration Flow",
      "result_type": {
        "name": "KratosRegistrationFlow",
        "type": "named"
      }
    },
    "kratosGetSelfServiceSettingsFlow": {
      "request": {
        "url": "/self-service/settings/flows",
        "method": "get",
        "security": [
          {
            "sessionToken": []
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "ID is the Settings Flow ID  The value for this parameter comes from `flow` URL Query parameter sent to your application (e.g. `/settings?flow=abcde`).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get Settings Flow",
      "result_type": {
        "name": "KratosSettingsFlow",
        "type": "named"
      }
    },
    "kratosGetSelfServiceVerificationFlow": {
      "request": {
        "url": "/self-service/verification/flows",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "The Flow ID  The value for this parameter comes from `request` URL Query parameter sent to your application (e.g. `/verification?flow=abcde`).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get Verification Flow",
      "result_type": {
        "name": "KratosVerificationFlow",
        "type": "named"
      }
    },
    "kratosGetVersion": {
      "request": {
        "url": "/version",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "Return Running Software Version.",
      "result_type": {
        "name": "KratosGetVersionResult",
        "type": "named"
      }
    },
    "kratosIsAlive": {
      "request": {
        "url": "/health/alive",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "Check HTTP Server Status",
      "result_type": {
        "name": "KratosIsAliveResult",
        "type": "named"
      }
    },
    "kratosIsReady": {
      "request": {
        "url": "/health/ready",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "Check HTTP Server and Database Status",
      "result_type": {
        "name": "KratosIsReadyResult",
        "type": "named"
      }
    },
    "kratosListIdentities": {
      "request": {
        "url": "/identities",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "page": {
          "description": "Pagination Page",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "http": {
            "name": "page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "format": "int64",
              "minimum": 0
            }
          }
        },
        "per_page": {
          "description": "Items per Page  This is the number of items per page.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int64",
              "type": "named"
            }
          },
          "http": {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "format": "int64",
              "maximum": 500,
              "minimum": 1
            }
          }
        }
      },
      "description": "List Identities",
      "result_type": {
        "element_type": {
          "name": "KratosIdentity",
          "type": "named"
        },
        "type": "array"
      }
    }
  },
  "object_types": {
    "KratosCreateIdentityInput": {
      "fields": {
        "schema_id": {
          "description": "SchemaID is the ID of the JSON Schema to be used for validating the identity's traits.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "traits": {
          "description": "Traits represent an identity's traits. The identity is able to create, modify, and delete traits in a self-service manner. The input will always be validated against the JSON Schema defined in `schema_url`.",
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "KratosCreateRecoveryLinkInput": {
      "fields": {
        "expires_in": {
          "description": "Link Expires In  The recovery link will expire at that point in time. Defaults to the configuration value of `selfservice.flows.recovery.request_lifespan`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]+(ns|us|ms|s|m|h)$"
          }
        },
        "identity_id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4"
          }
        }
      }
    },
    "KratosErrorContainer": {
      "fields": {
        "errors": {
          "description": "Errors in the container",
          "type": {
            "element_type": {
              "name": "JSON",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4",
            "xml": {
              "name": "UUID"
            }
          }
        }
      }
    },
    "KratosGetVersionResult": {
      "fields": {
        "version": {
          "description": "The version of Ory Kratos.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "KratosIdentity": {
      "fields": {
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4"
          }
        },
        "recovery_addresses": {
          "description": "RecoveryAddresses contains all the addresses that can be used to recover an identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "KratosRecoveryAddress",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "schema_id": {
          "description": "SchemaID is the ID of the JSON Schema to be used for validating the identity's traits.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "schema_url": {
          "description": "SchemaURL is the URL of the endpoint where the identity's traits schema can be fetched from.  format: url",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "traits": {
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "verifiable_addresses": {
          "description": "VerifiableAddresses contains all the addresses that can be verified by the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "KratosVerifiableAddress",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "KratosIsAliveResult": {
      "fields": {
        "status": {
          "description": "Always \"ok\".",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "KratosIsReadyResult": {
      "fields": {
        "status": {
          "description": "Always \"ok\".",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "KratosLoginFlow": {
      "description": "This object represents a login flow. A login flow is initiated at the \"Initiate Login API / Browser Flow\" endpoint by a client.  Once a login flow is completed successfully, a session cookie or session token will be issued.",
      "fields": {
        "active": {
          "description": "and so on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "CredentialsType"
            }
          }
        },
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in, a new flow has to be initiated.",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "forced": {
          "description": "Forced stores whether this login flow should enforce re-authentication.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4",
            "xml": {
              "name": "UUID"
            }
          }
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the flow started.",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used to forward information contained in the URL's path or query for example.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "description": "The flow type can either be `api` or `browser`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "Type"
            }
          }
        },
        "ui": {
          "description": "Container represents a HTML Form. The container can work with both HTTP Form and JSON requests",
          "type": {
            "name": "KratosUiContainer",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "KratosRecoveryAddress": {
      "fields": {
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4"
          }
        },
        "value": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "via": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "KratosRecoveryFlow": {
      "description": "This request is used when an identity wants to recover their account.  We recommend reading the [Account Recovery Documentation](../self-service/flows/password-reset-account-recovery)",
      "fields": {
        "active": {
          "description": "Active, if set, contains the registration method that is being used. It is initially not set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the setting, a new request has to be initiated.",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4",
            "xml": {
              "name": "UUID"
            }
          }
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the request occurred.",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "messages": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "KratosUiText",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "methods": {
          "description": "Methods contains context for all account recovery methods. If a registration request has been processed, but for example the password is incorrect, this will contain error messages.",
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used to forward information contained in the URL's path or query for example.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "state": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "State"
            }
          }
        },
        "type": {
          "description": "The flow type can either be `api` or `browser`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "Type"
            }
          }
        }
      }
    },
    "KratosRecoveryLink": {
      "fields": {
        "expires_at": {
          "description": "Recovery Link Expires At  The timestamp when the recovery link expires.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "recovery_link": {
          "description": "Recovery Link  This link can be used to recover the account.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "KratosRegistrationFlow": {
      "fields": {
        "active": {
          "description": "and so on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "CredentialsType"
            }
          }
        },
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in, a new flow has to be initiated.",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4",
            "xml": {
              "name": "UUID"
            }
          }
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the flow occurred.",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "messages": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "KratosUiText",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "methods": {
          "description": "Methods contains context for all enabled registration methods. If a registration flow has been processed, but for example the password is incorrect, this will contain error messages.",
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used to forward information contained in the URL's path or query for example.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "description": "The flow type can either be `api` or `browser`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "Type"
            }
          }
        }
      }
    },
    "KratosSettingsFlow": {
      "description": "This flow is used when an identity wants to update settings (e.g. profile data, passwords, ...) in a selfservice manner.  We recommend reading the [User Settings Documentation](../self-service/flows/user-settings)",
      "fields": {
        "active": {
          "description": "Active, if set, contains the registration method that is being used. It is initially not set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to update the setting, a new flow has to be initiated.",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4",
            "xml": {
              "name": "UUID"
            }
          }
        },
        "identity": {
          "type": {
            "name": "KratosIdentity",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "Identity"
            }
          }
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the flow occurred.",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "messages": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "KratosUiText",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "methods": {
          "description": "Methods contains context for all enabled registration methods. If a settings flow has been processed, but for example the first name is empty, this will contain error messages.",
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used to forward information contained in the URL's path or query for example.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "state": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "State"
            }
          }
        },
        "type": {
          "description": "The flow type can either be `api` or `browser`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "Type"
            }
          }
        }
      }
    },
    "KratosUiContainer": {
      "description": "Container represents a HTML Form. The container can work with both HTTP Form and JSON requests",
      "fields": {
        "action": {
          "description": "Action should be used as the form action URL ``.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "messages": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "KratosUiText",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "method": {
          "description": "Method is the form method (e.g. POST)",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "nodes": {
          "type": {
            "element_type": {
              "name": "KratosUiNode",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "KratosUiNode": {
      "description": "Nodes are represented as HTML elements or their native UI equivalents. For example, a node can be an `` tag, or an `` but also `some plain text`.",
      "fields": {
        "attributes": {
          "type": {
            "name": "KratosUiNodeAttributes",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "group": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "messages": {
          "type": {
            "element_type": {
              "name": "KratosUiText",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "type": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "KratosUiNodeAttributes": {
      "fields": {
        "disabled": {
          "description": "Sets the input's disabled field to true or false.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "href": {
          "description": "The link's href (destination) URL.  format: uri",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "label": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "KratosUiText",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "name": {
          "description": "The input's element name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "pattern": {
          "description": "The input's pattern.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "required": {
          "description": "Mark this input field as required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "src": {
          "description": "The image's source URL.  format: uri",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "KratosUiText",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "KratosUiText",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": []
          }
        }
      }
    },
    "KratosUiText": {
      "fields": {
        "context": {
          "description": "The message's context. Useful when customizing messages.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "id": {
          "type": {
            "name": "Int64",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ],
            "format": "int64",
            "xml": {
              "name": "ID"
            }
          }
        },
        "text": {
          "description": "The message text. Written in american english.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "KratosUpdateIdentityInput": {
      "fields": {
        "schema_id": {
          "description": "SchemaID is the ID of the JSON Schema to be used for validating the identity's traits. If set will update the Identity's SchemaID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "traits": {
          "description": "Traits represent an identity's traits. The identity is able to create, modify, and delete traits in a self-service manner. The input will always be validated against the JSON Schema defined in `schema_id`.",
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "KratosVerifiableAddress": {
      "fields": {
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4"
          }
        },
        "status": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "verified": {
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "verified_at": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "via": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "KratosVerificationFlow": {
      "description": "Used to verify an out-of-band communication channel such as an email address or a phone number.  For more information head over to: https://www.ory.sh/docs/kratos/self-service/flows/verify-email-account-activation",
      "fields": {
        "active": {
          "description": "Active, if set, contains the registration method that is being used. It is initially not set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the request expires. If the user still wishes to verify the address, a new request has to be initiated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid4",
            "xml": {
              "name": "UUID"
            }
          }
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the request occurred.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "messages": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "KratosUiText",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "uiText"
              }
            },
            "xml": {
              "name": "uiTexts"
            }
          }
        },
        "methods": {
          "description": "Methods contains context for all account verification methods. If a registration request has been processed, but for example the password is incorrect, this will contain error messages.",
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from Ory Kratos. It can be used to forward information contained in the URL's path or query for example.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "state": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "State"
            }
          }
        },
        "type": {
          "description": "The flow type can either be `api` or `browser`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "Type"
            }
          }
        }
      }
    }
  },
  "procedures": {
    "kratosCreateIdentity": {
      "request": {
        "url": "/identities",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /identities",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "KratosCreateIdentityInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create an Identity",
      "result_type": {
        "name": "KratosIdentity",
        "type": "named"
      }
    },
    "kratosCreateRecoveryLink": {
      "request": {
        "url": "/recovery/link",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /recovery/link",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "KratosCreateRecoveryLinkInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create a Recovery Link",
      "result_type": {
        "name": "KratosRecoveryLink",
        "type": "named"
      }
    },
    "kratosDeleteIdentity": {
      "request": {
        "url": "/identities/{id}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "ID is the identity's ID.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete an Identity",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "kratosUpdateIdentity": {
      "request": {
        "url": "/identities/{id}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /identities/{id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "KratosUpdateIdentityInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "id": {
          "description": "ID must be set to the ID of identity you want to update",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update an Identity",
      "result_type": {
        "name": "KratosIdentity",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int64"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    }
  }
}
