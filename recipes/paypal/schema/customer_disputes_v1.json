{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api-m.paypal.com",
          "env": "PAYPAL_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "Oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": {
              "value": "/v1/oauth2/token",
              "env": "PAYPAL_OAUTH2_TOKEN_URL"
            },
            "scopes": {
              "https://uri.paypal.com/services/disputes/create": "This privilege allows client to validate eligibility and create a dispute on his transaction(s).",
              "https://uri.paypal.com/services/disputes/read": "This privilege allows client to read and search a dispute of an user with all fields.",
              "https://uri.paypal.com/services/disputes/read-buyer": "This privilege allows client to read and search disputes but returns a limited and allowed set of fields back.",
              "https://uri.paypal.com/services/disputes/read-ebay": "This privilege allows client to read and search a disputes of an user but gets only a limited and allowed set of fields back to ebay.",
              "https://uri.paypal.com/services/disputes/read-partner": "This privilege allows client to read and search disputes but returns a limited and allowed set of fields back.",
              "https://uri.paypal.com/services/disputes/read-seller": "This privilege allows client to read and search a disputes of a merchant but gets only a limited and allowed set of fields back .",
              "https://uri.paypal.com/services/disputes/update-buyer": "This privilege allows client to update a dispute (customer actions).",
              "https://uri.paypal.com/services/disputes/update-partner": "This privilege allows client to update a dispute (Partner actions).",
              "https://uri.paypal.com/services/disputes/update-seller": "This privilege allows client to update a dispute (Merchant actions).",
              "https://uri.paypal.com/services/disputes/webhooks": "This privilege allows webhook platform to read a dispute event",
              "https://uri.paypal.com/services/referred-disputes/readwrite": "This privilege allows client to read and update a referred dispute."
            },
            "clientId": {
              "env": "PAYPAL_OAUTH2_CLIENT_ID"
            },
            "clientSecret": {
              "env": "PAYPAL_OAUTH2_CLIENT_SECRET"
            }
          }
        }
      }
    },
    "version": "1.10"
  },
  "functions": {
    "disputes_get": {
      "request": {
        "url": "/v1/customer/disputes/{id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-ebay"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-partner"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Show dispute details",
      "result_type": {
        "name": "Dispute",
        "type": "named"
      }
    },
    "disputes_list": {
      "request": {
        "url": "/v1/customer/disputes",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-ebay"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-partner"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "dispute_state": {
          "description": "Filters the disputes in the response by a state. Separate multiple values with a comma (`,`). When you specify more than one dispute_state, the response lists disputes that belong to any of the specified dispute_state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "dispute_state",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 2000,
              "minLength": 1
            }
          }
        },
        "disputed_transaction_id": {
          "description": "Filters the disputes in the response by a transaction, by ID.You can specify either but not both the `start_time` and `disputed_transaction_id` query parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "disputed_transaction_id",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        },
        "next_page_token": {
          "description": "The token that describes the next page of results to fetch. The list disputes call returns this token in the HATEOAS links in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "next_page_token",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9+\\/=]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        },
        "page_size": {
          "description": "Limits the number of disputes in the response to this value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 50,
              "minimum": 1
            }
          }
        },
        "start_time": {
          "description": "Filters the disputes in the response by a creation date and time. The start time must be within the last 180 days. Value is in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.You can specify either but not both the `start_time` and `disputed_transaction_id` query parameters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "start_time",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
              "maxLength": 64,
              "minLength": 20
            }
          }
        },
        "update_time_after": {
          "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`. update_time_after must be within the last 180 days and the default is the maximum time (180 days) supported.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "update_time_after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "ppaas_date_time_v3",
              "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
              "maxLength": 64,
              "minLength": 20
            }
          }
        },
        "update_time_before": {
          "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`. update_time_before must be within the last 180 days and the default is the current time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "update_time_before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "ppaas_date_time_v3",
              "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
              "maxLength": 64,
              "minLength": 20
            }
          }
        }
      },
      "description": "List disputes",
      "result_type": {
        "name": "DisputeSearch",
        "type": "named"
      }
    }
  },
  "object_types": {
    "AcceptClaimResponseOptions": {
      "description": "The allowed response options when the merchant is accepting the claim.",
      "fields": {
        "accept_claim_types": {
          "description": "The types of refund the merchant can provide the customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AcceptClaimType",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "alias": "accept_claim_response_options"
    },
    "AcceptOfferInput": {
      "description": "A customer request to accept the offer made by the merchant.",
      "fields": {
        "note": {
          "description": "The customer notes about accepting of offer. PayPal can but the merchant cannot view these notes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        }
      },
      "alias": "accept_offer"
    },
    "AcknowledgeReturnItemResponseOptions": {
      "description": "The allowed response options when the seller acknowledges that the buyer has returned an item for the dispute.",
      "fields": {
        "acknowledgement_types": {
          "description": "The types of response when the merchant acknowledges a returned item.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AcknowledgementType",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "alias": "acknowledge_return_item_response_options"
    },
    "ActionInfo": {
      "description": "The extended properties for a evidence. Includes additional information such as the action for which the evidence was requested/submitted, and whether the evidence is mandatory.",
      "fields": {
        "action": {
          "description": "The action for which the evidence was requested or submitted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ActionInfoAction",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "mandatory": {
          "description": "Indicates whether the evidence is mandatory for the corresponding action and response option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "response_option": {
          "description": "The response option for the corresponding action. Possible values:Acknowledgement TypesAccept Claim types.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "action_info"
    },
    "AddressPortable": {
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableAddressDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A kanton.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:Brazil. Suburb, bairro, or neighborhood.India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code for Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        }
      },
      "alias": "address_portable"
    },
    "AddressPortableAddressDetails": {
      "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
      "fields": {
        "building_name": {
          "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, Craven House.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "delivery_service": {
          "description": "The delivery service. Post office box, bag number, or post office name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_name": {
          "description": "The street name. Just `Drury` in `Drury Lane`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_number": {
          "description": "The street number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_type": {
          "description": "The street type. For example, avenue, boulevard, road, or expressway.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "sub_building": {
          "description": "The first-order entity below a named building or location that represents the sub-premises. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "AddressPortableAddressDetailsInput": {
      "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
      "fields": {
        "building_name": {
          "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, Craven House.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "delivery_service": {
          "description": "The delivery service. Post office box, bag number, or post office name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_name": {
          "description": "The street name. Just `Drury` in `Drury Lane`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_number": {
          "description": "The street number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_type": {
          "description": "The street type. For example, avenue, boulevard, road, or expressway.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "sub_building": {
          "description": "The first-order entity below a named building or location that represents the sub-premises. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "AddressPortableInput": {
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableAddressDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A kanton.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:Brazil. Suburb, bairro, or neighborhood.India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code for Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        }
      },
      "alias": "address_portable"
    },
    "AdjudicateInput": {
      "description": "A request to settle a dispute in either the customer's or merchant's favor.",
      "fields": {
        "adjudication_outcome": {
          "description": "The outcome of the adjudication.",
          "type": {
            "name": "AdjudicateAdjudicationOutcome",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "adjudicate"
    },
    "Adjudication": {
      "description": "The Adjudication details for the dispute.",
      "fields": {
        "adjudication_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "dispute_life_cycle_stage": {
          "description": "The stage in the dispute lifecycle.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeLifecycleStage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "reason": {
          "description": "The reason for the adjudication type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AdjudicationReason",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "type": {
          "description": "The type of adjudication.",
          "type": {
            "name": "AdjudicationType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "adjudication"
    },
    "AgreedRefundDetails": {
      "description": "Details of Agreed Refund between customer and merchant.",
      "fields": {
        "merchant_agreed_refund": {
          "description": "Indicates whether merchant has agreed to refund the buyer or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "merchant_agreed_refund_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        }
      },
      "alias": "agreed_refund_details"
    },
    "AllowedResponseOptions": {
      "description": "The allowed response options for the buyer/seller update actions.",
      "fields": {
        "accept_claim": {
          "description": "The allowed response options when the merchant is accepting the claim.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AcceptClaimResponseOptions",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "acknowledge_return_item": {
          "description": "The allowed response options when the seller acknowledges that the buyer has returned an item for the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AcknowledgeReturnItemResponseOptions",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "make_offer": {
          "description": "The allowed response options when the merchant makes offer to the customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MakeOfferResponseOptions",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "allowed_response_options"
    },
    "BillingDisputesProperties": {
      "description": "The billing issue details.",
      "fields": {
        "canceled_recurring_billing": {
          "description": "The recurring billing canceled details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CanceledRecurringBilling",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "credit_not_processed": {
          "description": "The credit not processed details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreditNotProcessed",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "duplicate_transaction": {
          "description": "The duplicate transaction details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DuplicateTransaction",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "incorrect_transaction_amount": {
          "description": "The incorrect transaction amount details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IncorrectTransactionAmount",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payment_by_other_means": {
          "description": "The payment by other means details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentByOtherMeans",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "billing_disputes_properties"
    },
    "Buyer": {
      "description": "The details for the customer who funds the payment. For example, the customer's first name, last name, and email address.",
      "fields": {
        "name": {
          "description": "The customer's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[^~!@#$%^*()_{}:|  /]+$",
            "maxLength": 2000,
            "minLength": 1
          }
        }
      },
      "alias": "buyer"
    },
    "CanceledRecurringBilling": {
      "description": "The recurring billing canceled details.",
      "fields": {
        "cancellation_details": {
          "description": "The cancellation details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CancellationDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "expected_refund": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "canceled_recurring_billing"
    },
    "CancellationDetails": {
      "description": "The cancellation details.",
      "fields": {
        "cancellation_date": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "cancellation_mode": {
          "description": "Indicates the mode used for order cancellation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CancellationDetailsCancellationMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "cancellation_number": {
          "description": "The cancellation number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9]+$",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "cancelled": {
          "description": "Indicates whether the dispute was canceled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "cancellation_details"
    },
    "CommunicationDetails": {
      "description": "The contact details that a merchant provides to the customer to use to share their evidence documents.",
      "fields": {
        "email": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_email_address_v2",
            "pattern": "^.+@[^\"\\-].+$",
            "maxLength": 254,
            "minLength": 3
          }
        },
        "note": {
          "description": "The merchant provided notes that are visible to both the customer and PayPal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "time_posted": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        }
      },
      "alias": "communication_details"
    },
    "CreditNotProcessed": {
      "description": "The credit not processed details.",
      "fields": {
        "agreed_refund_details": {
          "description": "Details of Agreed Refund between customer and merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AgreedRefundDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "cancellation_details": {
          "description": "The cancellation details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CancellationDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "expected_refund": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "issue_type": {
          "description": "The issue type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreditNotProcessedIssueType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "product_details": {
          "description": "The product information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProductDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "service_details": {
          "description": "The service details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ServiceDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "credit_not_processed"
    },
    "Cryptocurrency": {
      "description": "Representation of a specific amount of Cryptocurrency, denoted by its symbol and quantity.",
      "fields": {
        "asset_symbol": {
          "description": "The Cryptocurrency ticker symbol / code as assigned by liquidity providers (exchanges).",
          "type": {
            "name": "CryptocurrencySymbol",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Za-z]{1,10}$",
            "maxLength": 10,
            "minLength": 1
          }
        },
        "quantity": {
          "description": "Quantity of a cryptocurrency asset.This is a decimal number with scale defined for each Cryptocurrency by the founders. For example, Bitcoin(BTC) has 8 as scale,Ethereum (ETH) has 18 as scale.PayPal Cryptocurrency platform handles the scale to 8 digits for Bitcoin and its forks or offshoots and Ehereum.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
            "maxLength": 40,
            "minLength": 1
          }
        }
      },
      "alias": "cryptocurrency"
    },
    "DenyOfferInput": {
      "description": "A customer request to deny the offer made by the merchant.",
      "fields": {
        "note": {
          "description": "The customer notes about the denial of offer. PayPal can but the merchant cannot view these notes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        }
      },
      "alias": "deny_offer"
    },
    "Dispute": {
      "description": "The dispute details.",
      "fields": {
        "adjudications": {
          "description": "The Teammate Adjudication details for the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Adjudication",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "allowed_response_options": {
          "description": "The allowed response options for the buyer/seller update actions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllowedResponseOptions",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "buyer_response_due_date": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "communication_details": {
          "description": "The contact details that a merchant provides to the customer to use to share their evidence documents.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CommunicationDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "create_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "dispute_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "dispute_asset": {
          "description": "Representation of a specific amount of Cryptocurrency, denoted by its symbol and quantity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Cryptocurrency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "dispute_channel": {
          "description": "The channel where the customer created the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeChannel",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255,
            "minLength": 1
          }
        },
        "dispute_id": {
          "description": "The ID of the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "dispute_life_cycle_stage": {
          "description": "The stage in the dispute lifecycle.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeLifecycleStage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "dispute_outcome": {
          "description": "The outcome of a dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeOutcome",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "disputed_transactions": {
          "description": "An array of transactions for which disputes were created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TransactionInfo",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "evidences": {
          "description": "An array of evidence documents.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Evidence",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "extensions": {
          "description": "The extended properties for the dispute. Includes additional information for a dispute category, such as billing disputes, the original transaction ID, and the correct amount.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Extensions",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "external_reason_code": {
          "description": "The code that identifies the reason for the credit card chargeback. Each card issuer follows their own standards for defining reason type, code, and its format. For more details about the external reason code, see the card issue site. Available for only unbranded transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "fee_policy": {
          "description": "Policy that determines whether the fee needs to be charged, retained or returned while moving the money as part of dispute process.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FeePolicy",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "messages": {
          "description": "An array of customer- or merchant-posted messages for the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Message",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "money_movements": {
          "description": "The Money movement details for the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MoneyMovement",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "offer": {
          "description": "The merchant-proposed offer for a dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Offer",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "reason": {
          "description": "The reason for the item-level dispute. For information about the required information for each dispute reason and associated evidence type, see dispute reasons.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeReason",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "refund_details": {
          "description": "The refund details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RefundDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "seller_response_due_date": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "status": {
          "description": "The overall status of the dispute, constant for all the parties involved at anytime during the dispute lifecycle.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Status",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "supporting_info": {
          "description": "An array of all the supporting information that are associated to this dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "SupportingInfo",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "update_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        }
      },
      "alias": "dispute"
    },
    "DisputeInfo": {
      "description": "The dispute summary information.",
      "fields": {
        "buyer_response_due_date": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "create_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "dispute_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "dispute_asset": {
          "description": "Representation of a specific amount of Cryptocurrency, denoted by its symbol and quantity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Cryptocurrency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "dispute_channel": {
          "description": "The channel where the customer created the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeChannel",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255,
            "minLength": 1
          }
        },
        "dispute_id": {
          "description": "The ID of the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "dispute_life_cycle_stage": {
          "description": "The stage in the dispute lifecycle.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeLifecycleStage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "dispute_state": {
          "description": "The user specific state of the dispute, could vary between parties during the dispute lifecycle.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "reason": {
          "description": "The reason for the item-level dispute. For information about the required information for each dispute reason and associated evidence type, see dispute reasons.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeReason",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "seller_response_due_date": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "status": {
          "description": "The overall status of the dispute, constant for all the parties involved at anytime during the dispute lifecycle.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Status",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "update_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        }
      },
      "alias": "dispute_info"
    },
    "DisputeOutcome": {
      "description": "The outcome of a dispute.",
      "fields": {
        "amount_refunded": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "asset_refunded": {
          "description": "Representation of a specific amount of Cryptocurrency, denoted by its symbol and quantity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Cryptocurrency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "outcome_code": {
          "description": "The outcome of a resolved dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeOutcomeOutcomeCode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "dispute_outcome"
    },
    "DisputeSearch": {
      "description": "An array of disputes. Includes links that enable you to navigate through the response.",
      "fields": {
        "items": {
          "description": "An array of disputes that match the filter criteria. Sorted in latest to earliest creation time order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "DisputeInfo",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "dispute_search"
    },
    "DisputesAcceptClaimBodyInput": {
      "fields": {
        "accept-claim-document": {
          "description": "A file with evidence.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "binary"
          }
        }
      }
    },
    "DisputesAcknowledgeReturnItemBodyInput": {
      "fields": {
        "acknowledgement_document": {
          "description": "A file with evidence.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "binary"
          }
        }
      }
    },
    "DisputesAppealBodyInput": {
      "fields": {
        "evidence-file": {
          "description": "A file with evidence.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "binary"
          }
        }
      }
    },
    "DisputesProvideEvidenceBodyInput": {
      "fields": {
        "evidence-file": {
          "description": "A file with evidence.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "binary"
          }
        }
      }
    },
    "DisputesProvideSupportingInfoBodyInput": {
      "fields": {
        "supporting document": {
          "description": "A file with evidence.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "binary"
          }
        }
      }
    },
    "DisputesSendMessageBodyInput": {
      "fields": {
        "message_document": {
          "description": "A file that contains any additional info about the message posted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "binary"
          }
        }
      }
    },
    "Document": {
      "description": "An uploaded document as a binary object that supports a dispute.",
      "fields": {
        "name": {
          "description": "The document name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9-_,\\s]+[.]{1}[A-Za-z]+$",
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "url": {
          "description": "The downloadable URL for the document for which the client has access.Note: Document download may require some configuration setup and available as a limited release at this time. For more information, reach out to your PayPal account manager..",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "document"
    },
    "DuplicateTransaction": {
      "description": "The duplicate transaction details.",
      "fields": {
        "original_transaction": {
          "description": "The information about the disputed transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionInfo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "received_duplicate": {
          "description": "If `true`, indicates that a duplicate transaction was received.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "duplicate_transaction"
    },
    "EscalateInput": {
      "description": "A merchant request to escalate a dispute, by ID, to a PayPal claim.",
      "fields": {
        "buyer_escalation_reason": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BuyerEscalationReason",
              "type": "named"
            }
          },
          "http": {}
        },
        "note": {
          "description": "The notes about the escalation of the dispute to a claim.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        }
      },
      "alias": "escalate"
    },
    "Evidence": {
      "description": "A merchant- or customer-submitted evidence document. evidence_info is expected for PROOF_OF_FULFILLMENT,PROOF_OF_REFUND and PROOF_OF_RETURN evidence types. documents and notes can be given for rest of the evidence types.",
      "fields": {
        "action_info": {
          "description": "The extended properties for a evidence. Includes additional information such as the action for which the evidence was requested/submitted, and whether the evidence is mandatory.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ActionInfo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "date": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "dispute_life_cycle_stage": {
          "description": "The stage in the dispute lifecycle.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeLifecycleStage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "documents": {
          "description": "An array of evidence documents.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Document",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "evidence_info": {
          "description": "The evidence-related information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EvidenceInfo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "evidence_type": {
          "description": "The evidence type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EvidenceEvidenceType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "item_id": {
          "description": "The item ID. If the merchant provides multiple pieces of evidence and the transaction has multiple item IDs, the merchant can use this value to associate a piece of evidence with an item ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "item_type": {
          "description": "The type of the item which has the issue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ItemType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "notes": {
          "description": "Any evidence-related notes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "source": {
          "description": "The source of the evidence.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EvidenceSource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "evidence"
    },
    "EvidenceInfo": {
      "description": "The evidence-related information.",
      "fields": {
        "refund_ids": {
          "description": "An array of refund IDs for the transaction involved in this dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "maxLength": 255,
              "minLength": 1
            }
          }
        },
        "tracking_info": {
          "description": "An array of relevant tracking information for the transaction involved in this dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TrackingInfo",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "evidence_info"
    },
    "Extensions": {
      "description": "The extended properties for the dispute. Includes additional information for a dispute category, such as billing disputes, the original transaction ID, and the correct amount.",
      "fields": {
        "billing_dispute_properties": {
          "description": "The billing issue details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BillingDisputesProperties",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "buyer_contacted_channel": {
          "description": "The channel through which the buyer contacted the partner to file a dispute. Partners that allow buyers to create dispute from multiple channels can use this field to help identify which channel was used for each individual dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255,
            "minLength": 1
          }
        },
        "buyer_contacted_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "merchandize_dispute_properties": {
          "description": "The customer-provided merchandise issue details for the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MerchandizeDisputeProperties",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "merchant_contacted": {
          "description": "Indicates that the merchant was contacted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "merchant_contacted_mode": {
          "description": "The method used to contact the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MerchantContactedMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "merchant_contacted_outcome": {
          "description": "The outcome when the customer has contacted the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MerchantContactedOutcome",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "merchant_contacted_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        }
      },
      "alias": "extensions"
    },
    "IncorrectTransactionAmount": {
      "description": "The incorrect transaction amount details.",
      "fields": {
        "correct_transaction_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "correct_transaction_asset": {
          "description": "Representation of a specific amount of Cryptocurrency, denoted by its symbol and quantity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Cryptocurrency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "correct_transaction_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        }
      },
      "alias": "incorrect_transaction_amount"
    },
    "ItemInfo": {
      "description": "The information for a purchased item in a disputed transaction.",
      "fields": {
        "agreed_refund_details": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ItemAgreedRefundDetails",
              "type": "named"
            }
          },
          "http": {}
        },
        "booking_details": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ItemBookingDetails",
              "type": "named"
            }
          },
          "http": {}
        },
        "cancellation_details": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ItemCancellationDetails",
              "type": "named"
            }
          },
          "http": {}
        },
        "digital_download_details": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ItemDigitalDownloadDetails",
              "type": "named"
            }
          },
          "http": {}
        },
        "dispute_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "item_description": {
          "description": "The item description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "item_id": {
          "description": "The item ID. If the merchant provides multiple pieces of evidence and the transaction has multiple item IDs, the merchant can use this value to associate a piece of evidence with an item ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "item_name": {
          "description": "The item name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "item_quantity": {
          "description": "The count of the item in the dispute. Must be a whole number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[1-9][0-9]{0,9}$",
            "maxLength": 10,
            "minLength": 1
          }
        },
        "item_type": {
          "description": "The type of the item which has the issue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ItemType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "notes": {
          "description": "Any notes provided with the item.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "partner_transaction_id": {
          "description": "The ID of the transaction in the partner system. The partner transaction ID is returned at an item level because the partner might show different transactions for different items in the cart.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "product_details": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ItemProductDetails",
              "type": "named"
            }
          },
          "http": {}
        },
        "reason": {
          "description": "The reason for the item-level dispute. For information about the required information for each dispute reason and associated evidence type, see dispute reasons.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeReason",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "service_details": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ItemServiceDetails",
              "type": "named"
            }
          },
          "http": {}
        }
      },
      "alias": "item_info"
    },
    "LinkDescription": {
      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
      "fields": {
        "href": {
          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "method": {
          "description": "The HTTP method required to make the related call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "LinkDescriptionMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rel": {
          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "link_description"
    },
    "MakeOfferInput": {
      "description": "A merchant request to make an offer to resolve a dispute.",
      "fields": {
        "invoice_id": {
          "description": "The merchant-provided ID of the invoice for the refund. This optional value maps the refund to an invoice ID in the merchant's system.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9:\\-|]+$",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "note": {
          "description": "The merchant's notes about the offer.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "offer_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "offer_type": {
          "description": "The merchant-proposed offer type for the dispute.",
          "type": {
            "name": "OfferType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "return_shipping_address": {
          "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "make_offer"
    },
    "MakeOfferResponseOptions": {
      "description": "The allowed response options when the merchant makes offer to the customer.",
      "fields": {
        "offer_types": {
          "description": "The types of offer the merchant can offer the customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OfferType",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "alias": "make_offer_response_options"
    },
    "MerchandizeDisputeProperties": {
      "description": "The customer-provided merchandise issue details for the dispute.",
      "fields": {
        "cancellation_details": {
          "description": "The cancellation details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CancellationDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "issue_type": {
          "description": "The issue type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MerchandizeDisputePropertiesIssueType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "product_details": {
          "description": "The product information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProductDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "return_shipping_address": {
          "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortable",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "service_details": {
          "description": "The service details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ServiceDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "merchandize_dispute_properties"
    },
    "Message": {
      "description": "A customer- or merchant-posted message for the dispute.",
      "fields": {
        "content": {
          "description": "The message text.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 0
          }
        },
        "documents": {
          "description": "An array of metadata for the documents which contains any additional info about the message posted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Document",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "posted_by": {
          "description": "Indicates whether the customer, merchant, or dispute arbiter posted the message.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MessagePostedBy",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "time_posted": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        }
      },
      "alias": "message"
    },
    "Money": {
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "fields": {
        "currency_code": {
          "description": "The [three-character ISO-4217 currency code](/docs/api/reference/currency-codes/) that identifies the currency.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3
          }
        },
        "value": {
          "description": "The value, which might be:An integer for currencies like `JPY` that are not typically fractional.A decimal fraction for currencies like `TND` that are subdivided into thousandths.For the required number of decimal places for a currency code, see [Currency Codes](/docs/api/reference/currency-codes/).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
            "maxLength": 32
          }
        }
      },
      "alias": "money"
    },
    "MoneyInput": {
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "fields": {
        "currency_code": {
          "description": "The [three-character ISO-4217 currency code](/docs/api/reference/currency-codes/) that identifies the currency.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3
          }
        },
        "value": {
          "description": "The value, which might be:An integer for currencies like `JPY` that are not typically fractional.A decimal fraction for currencies like `TND` that are subdivided into thousandths.For the required number of decimal places for a currency code, see [Currency Codes](/docs/api/reference/currency-codes/).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
            "maxLength": 32
          }
        }
      },
      "alias": "money"
    },
    "MoneyMovement": {
      "description": "The Money movement details with party.",
      "fields": {
        "affected_party": {
          "description": "The affected party in the money movement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyMovementAffectedParty",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "asset": {
          "description": "Representation of a specific amount of Cryptocurrency, denoted by its symbol and quantity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Cryptocurrency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "initiated_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "reason": {
          "description": "The reason for the money movement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyMovementReason",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "type": {
          "description": "The type of the money movement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyMovementType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "money_movement"
    },
    "Offer": {
      "description": "The merchant-proposed offer for a dispute.",
      "fields": {
        "buyer_requested_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "history": {
          "description": "An array of history information for an offer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OfferHistory",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "offer_type": {
          "description": "The merchant-proposed offer type for the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OfferType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "seller_offered_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "offer"
    },
    "OfferHistory": {
      "description": "The offer history.",
      "fields": {
        "actor": {
          "description": "The event-related actor.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OfferHistoryActor",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "dispute_life_cycle_stage": {
          "description": "The stage in the dispute lifecycle.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeLifecycleStage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "event_type": {
          "description": "The type of the history event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OfferHistoryEventType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "notes": {
          "description": "The user submitted notes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "offer_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "offer_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "offer_type": {
          "description": "The merchant-proposed offer type for the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OfferType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "offer_history"
    },
    "PatchInput": {
      "description": "The JSON patch object to apply partial updates to resources.",
      "fields": {
        "from": {
          "description": "The JSON Pointer to the target document location from which to move the value. Required for the move operation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "op": {
          "description": "The operation.",
          "type": {
            "name": "PatchOp",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "path": {
          "description": "The JSON Pointer to the target document location at which to complete the operation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The value to apply. The remove operation does not require a value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        }
      },
      "alias": "patch"
    },
    "PaymentByOtherMeans": {
      "description": "The payment by other means details.",
      "fields": {
        "charge_different_from_original": {
          "description": "If `true`, indicates that a charge was made that is different from the original charge.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "payment_instrument_suffix": {
          "description": "Last 2-4 characters of the payment instrument. For payment_method CHECK, payment_instrument_suffix entered must be of minimum length 2-4 characters. For payment_method CREDIT_CARD, DEBIT_CARD, GIFT_CARD, BANK_TRANSFER, payment_instrument_suffix entered must be of length 4.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 4,
            "minLength": 2
          }
        },
        "payment_method": {
          "description": "The payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentByOtherMeansPaymentMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "received_duplicate": {
          "description": "If `true`, indicates that a duplicate transaction was received.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "payment_by_other_means"
    },
    "ProductDetails": {
      "description": "The product information.",
      "fields": {
        "description": {
          "description": "The product description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "expected_delivery_date": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "product_received": {
          "description": "Indicates whether the product was, or was not, received or returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProductDetailsProductReceived",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "product_received_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "purchase_url": {
          "description": "The URL where the customer purchased the product.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "return_details": {
          "description": "The return details for the product.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ReturnDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "sub_reasons": {
          "description": "An array of sub-reasons for the product issue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProductDetailsSubReasons",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "alias": "product_details"
    },
    "RefundDetails": {
      "description": "The refund details.",
      "fields": {
        "allowed_refund_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "refund_details"
    },
    "RequireEvidenceInput": {
      "description": "Sandbox only. Updates the state of a dispute, by ID, to either WAITING_FOR_BUYER_RESPONSE or WAITING_FOR_SELLER_RESPONSE. This state change enables either the customer or merchant to submit evidence for the dispute. Specify an action value in the JSON request body to indicate whether the state change enables the customer or merchant to submit evidence.",
      "fields": {
        "action": {
          "description": "The action. Indicates whether the state change enables the customer or merchant to submit evidence.",
          "type": {
            "name": "RequireEvidenceAction",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "require_evidence"
    },
    "ReturnDetails": {
      "description": "The return details for the product.",
      "fields": {
        "mode": {
          "description": "The method that the customer used to return the product.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ReturnDetailsMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "receipt": {
          "description": "Indicates whether customer has the return receipt.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "return_confirmation_number": {
          "description": "The confirmation number for the item return.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9:\\-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "return_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "returned": {
          "description": "If `true`, indicates that the item was returned but the seller refused to accept the return and if `false`, indicates the item was not attempted to return.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "return_details"
    },
    "Seller": {
      "description": "The details for the merchant who receives the funds and fulfills the order. For example, merchant ID, and contact email address.",
      "fields": {
        "email": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_email_address_v2",
            "pattern": "^.+@[^\"\\-].+$",
            "maxLength": 254,
            "minLength": 3
          }
        },
        "merchant_id": {
          "description": "The PayPal account ID for the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Za-z]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "name": {
          "description": "The name of the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[^~!@#$%^*()_{}:|  /]+$",
            "maxLength": 2000,
            "minLength": 1
          }
        }
      },
      "alias": "seller"
    },
    "ServiceDetails": {
      "description": "The service details.",
      "fields": {
        "description": {
          "description": "The service description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "note": {
          "description": "The customer specified note about the service usage.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "purchase_url": {
          "description": "The URL of the merchant or marketplace site where the customer purchased the service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "service_started": {
          "description": "Indicates whether the service was started or cancelled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ServiceDetailsServiceStarted",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "sub_reasons": {
          "description": "An array of sub-reasons for the service issue.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ServiceDetailsSubReasons",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "alias": "service_details"
    },
    "SubsequentAction": {
      "description": "The subsequent action.",
      "fields": {
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "subsequent_action"
    },
    "SupportingInfo": {
      "description": "A merchant- or customer-submitted supporting information.",
      "fields": {
        "dispute_life_cycle_stage": {
          "description": "The stage in the dispute lifecycle.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputeLifecycleStage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "documents": {
          "description": "An array of metadata for the documents which were uploaded as supporting information for the dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Document",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "notes": {
          "description": "Any supporting notes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "provided_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "source": {
          "description": "The source of the Information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SupportingInfoSource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "supporting_info"
    },
    "TrackingInfo": {
      "description": "The tracking information.",
      "fields": {
        "carrier_name": {
          "description": "The name of the shipment carrier for the transaction for this dispute.",
          "type": {
            "name": "TrackingInfoCarrierName",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "carrier_name_other": {
          "description": "The name of carrier in free-form text for unavailable carriers. This field is mandatory when carrier_name is OTHER.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "tracking_number": {
          "description": "The number to track the dispute-related transaction shipment.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255,
            "minLength": 1
          }
        },
        "tracking_url": {
          "description": "The URL to track the dispute-related transaction shipment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "tracking_info"
    },
    "TransactionInfo": {
      "description": "The information about the disputed transaction.",
      "fields": {
        "buyer": {
          "description": "The details for the customer who funds the payment. For example, the customer's first name, last name, and email address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Buyer",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "buyer_transaction_id": {
          "description": "The ID, as seen by the customer, for this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "create_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "custom": {
          "description": "A free-text field that is entered by the merchant during checkout.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "gross_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gross_asset": {
          "description": "Representation of a specific amount of Cryptocurrency, denoted by its symbol and quantity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Cryptocurrency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "invoice_number": {
          "description": "The ID of the invoice for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9:\\-|]+$",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "items": {
          "description": "An array of items that were purchased as part of the transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ItemInfo",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "payment_processor": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentProcessor",
              "type": "named"
            }
          },
          "http": {}
        },
        "reference_id": {
          "description": "The ID, as seen by the partner, for this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "seller": {
          "description": "The details for the merchant who receives the funds and fulfills the order. For example, merchant ID, and contact email address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Seller",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "seller_transaction_id": {
          "description": "The ID, as seen by the merchant, for this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "transaction_status": {
          "description": "The transaction status.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionInfoTransactionStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "transaction_info"
    }
  },
  "procedures": {
    "disputes_accept_claim": {
      "request": {
        "url": "/v1/customer/disputes/{id}/accept-claim",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          }
        ],
        "requestBody": {
          "contentType": "multipart/form-data"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/customer/disputes/{id}/accept-claim",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputesAcceptClaimBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Accept claim",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_accept_offer": {
      "request": {
        "url": "/v1/customer/disputes/{id}/accept-offer",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "A customer request to accept the offer made by the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AcceptOfferInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Accept offer to resolve dispute",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_acknowledge_return_item": {
      "request": {
        "url": "/v1/customer/disputes/{id}/acknowledge-return-item",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          }
        ],
        "requestBody": {
          "contentType": "multipart/form-data"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/customer/disputes/{id}/acknowledge-return-item",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputesAcknowledgeReturnItemBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Acknowledge returned item",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_adjudicate": {
      "request": {
        "url": "/v1/customer/disputes/{id}/adjudicate",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "A request to settle a dispute in either the customer's or merchant's favor.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AdjudicateInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Settle dispute",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_appeal": {
      "request": {
        "url": "/v1/customer/disputes/{id}/appeal",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "requestBody": {
          "contentType": "multipart/form-data"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/customer/disputes/{id}/appeal",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputesAppealBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Appeal dispute",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_deny_offer": {
      "request": {
        "url": "/v1/customer/disputes/{id}/deny-offer",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "A customer request to deny the offer made by the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DenyOfferInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Deny offer to resolve dispute",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_escalate": {
      "request": {
        "url": "/v1/customer/disputes/{id}/escalate",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "A merchant request to escalate a dispute, by ID, to a PayPal claim.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EscalateInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Escalate dispute to claim",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_make_offer": {
      "request": {
        "url": "/v1/customer/disputes/{id}/make-offer",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "A merchant request to make an offer to resolve a dispute.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MakeOfferInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Make offer to resolve dispute",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_patch": {
      "request": {
        "url": "/v1/customer/disputes/{id}",
        "method": "patch",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "An array of JSON patch objects to apply partial updates to resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PatchInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ]
              }
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Partially update dispute",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_provide_evidence": {
      "request": {
        "url": "/v1/customer/disputes/{id}/provide-evidence",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-partner"
            ]
          }
        ],
        "requestBody": {
          "contentType": "multipart/form-data"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/customer/disputes/{id}/provide-evidence",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputesProvideEvidenceBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Provide evidence",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_provide_supporting_info": {
      "request": {
        "url": "/v1/customer/disputes/{id}/provide-supporting-info",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller",
              "https://uri.paypal.com/services/disputes/update-buyer",
              "https://uri.paypal.com/services/disputes/update-partner"
            ]
          }
        ],
        "requestBody": {
          "contentType": "multipart/form-data"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/customer/disputes/{id}/provide-supporting-info",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputesProvideSupportingInfoBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Provide supporting information for dispute",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_require_evidence": {
      "request": {
        "url": "/v1/customer/disputes/{id}/require-evidence",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Sandbox only. Updates the state of a dispute, by ID, to either WAITING_FOR_BUYER_RESPONSE or WAITING_FOR_SELLER_RESPONSE. This state change enables either the customer or merchant to submit evidence for the dispute. Specify an action value in the JSON request body to indicate whether the state change enables the customer or merchant to submit evidence.",
          "type": {
            "name": "RequireEvidenceInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Update dispute status",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    },
    "disputes_send_message": {
      "request": {
        "url": "/v1/customer/disputes/{id}/send-message",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "requestBody": {
          "contentType": "multipart/form-data"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v1/customer/disputes/{id}/send-message",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisputesSendMessageBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The ID of the dispute for which to provide the supporting information.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Za-z0-9-]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        }
      },
      "description": "Send message about dispute to other party",
      "result_type": {
        "name": "SubsequentAction",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "AcceptClaimType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "REFUND",
          "REFUND_WITH_RETURN",
          "PARTIAL_REFUND",
          "REFUND_WITH_RETURN_SHIPMENT_LABEL"
        ],
        "type": "enum"
      }
    },
    "AcknowledgementType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ITEM_RECEIVED",
          "ITEM_NOT_RECEIVED",
          "DAMAGED",
          "EMPTY_PACKAGE_OR_DIFFERENT",
          "MISSING_ITEMS"
        ],
        "type": "enum"
      }
    },
    "ActionInfoAction": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ACKNOWLEDGE_RETURN_ITEM",
          "ACCEPT_CLAIM",
          "PROVIDE_EVIDENCE",
          "APPEAL",
          "CANCEL",
          "CHANGE_REASON",
          "ESCALATE"
        ],
        "type": "enum"
      }
    },
    "AdjudicateAdjudicationOutcome": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BUYER_FAVOR",
          "SELLER_FAVOR"
        ],
        "type": "enum"
      }
    },
    "AdjudicationReason": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "AMOUNT_DIFFERENCE_EXPECTED_DUE_TO_FEES",
          "BILLING_AGREEMENT_CHANGE_DISCLOSED",
          "BILLING_AGREEMENT_CHANGE_NOT_DISCLOSED",
          "BILLING_AGREEMENT_DATE_CHANGE_DISCLOSED",
          "BILLING_AGREEMENT_DATE_CHANGE_NOT_DISCLOSED",
          "BUYER_ATTEMPTED_RETURN",
          "BUYER_BILLED_ONLY_ONCE",
          "BUYER_CANCELLED_CASE",
          "BUYER_CANCELLED_SERVICE",
          "BUYER_FAILED_TO_DESCRIBE_ISSUE",
          "BUYER_HAS_POSSESSION_OF_THE_MERCHANDISE_OR_SERVICE",
          "BUYER_MADE_NO_ATTEMPT_TO_RESOLVE_WITH_SELLER",
          "BUYER_NOT_IN_POSSESSION_OF_ITEM_TO_RETURN",
          "BUYER_PROVIDED_CREDIT_RECEIPT",
          "BUYER_RECEIVED_DUPLICATE_REFUND",
          "CANCELLED_PER_TERMS_OF_BILLING_AGREEMENT",
          "CARD_NOT_STOLEN",
          "CARD_NOT_STOLEN_BEFORE_AUTH",
          "CUSTOMER_RECOGNIZES_TRANSACTION",
          "DECISION_BASED_ON_AVAILABLE_INFORMATION",
          "DELIVERY_AFTER_EXPECTED_DELIVERY_DATE",
          "DELIVERY_DUE_WITHIN_EXPECTED_DELIVERY_DATE",
          "DELIVERY_OR_SERVICE_REFUSED",
          "DOCUMENTATION_MATCHES_AMOUNT_CHARGED",
          "DOCUMENTATION_MATCHES_AMOUNT_IN_PAYPAL_ACCOUNT",
          "DUPLICATE_ADD_FUNDS",
          "EFFORTLESS_SELLER_PROTECTION",
          "IN_PERSON_DELIVERY",
          "INELIGIBLE_BUYER_PROTECTION_POLICY",
          "INELIGIBLE_SELLER_PROTECTION_POLICY",
          "INQUIRY_OFFER_ITEM_REPLACED",
          "INQUIRY_OFFER_PARTIAL_REFUND",
          "INQUIRY_OFFER_REFUND_WITH_ITEM_RETURN",
          "INQUIRY_OFFER_REFUND_WITH_REPLACEMENT",
          "INVALID_APPEAL_REASON",
          "INVALID_CHARGEBACK_SELLER_FAVOUR",
          "INVALID_DELIVERY_PROOF",
          "INVALID_DELIVERY_PROOF_SIGNATURE",
          "INVALID_DOCUMENTATION",
          "INVALID_PROOF_OF_SHIPMENT",
          "INVALID_REFUND_PROOF",
          "INVALID_RETURN_DELIVERY_NO_SIGNATURE_PROOF",
          "INVALID_RETURN_DELIVERY_PROOF",
          "INVALID_TRACKING",
          "ITEM_ALTERED_REPAIRED",
          "ITEM_NOT_AS_ADVERTISED",
          "ITEM_NOT_AS_DESCRIBED",
          "ITEM_NOT_DAMAGED",
          "ITEM_NOT_DELIVERED",
          "ITEM_NOT_RETURNED_TO_SELLER",
          "ITEM_NOT_SHIPPED",
          "ITEM_OF_DIFFERENT_QUALITY_OR_QUANTITY",
          "ITEM_OUT_OF_STOCK_AND_NOT_DELIVERED",
          "ITEM_RETURNED_TO_SELLER",
          "ITEM_SERVICE_MISREPRESENTED",
          "ITEM_SERVICE_NOT_MISREPRESENTED",
          "ITEM_SERVICE_RECEIVED_BY_BUYER",
          "ITEM_SOLD_AS_DESCRIBED",
          "ITEM_VALUE_UNAFFECTED",
          "MULTIPLE_APPEALS_WITH_SAME_REASON",
          "NO_DOCUMENTATION_FROM_BUYER",
          "NO_DOCUMENTATION_SUPPORTING_DUE_OF_CREDIT",
          "NO_PROOF_OF_DELIVERY",
          "NO_PROOF_OF_DELIVERY_INTANGIBLE",
          "NO_PROTECTION_FOR_DIGITAL_GOODS_SERVICE",
          "NO_RESPONSE_FROM_BUYER",
          "NO_RESPONSE_FROM_BUYER_FOR_ADDITIONAL_INFO_REQUEST",
          "NO_SELLER_RESPONSE",
          "NO_SELLER_RESPONSE_FOR_ADDITIONAL_INFO_REQUEST",
          "NO_VALID_SHIPMENT_PROOF",
          "NOT_A_BILLING_ERROR",
          "NOT_AN_UNAUTHORIZED_TRANSACTION",
          "NOT_DUPLICATE_FUNDS_ADDED_ONCE",
          "NOT_DUPLICATE_FUNDS_WITHDRAWN_ONCE",
          "NOT_SHIPPED_TO_CORRECT_ADDRESS",
          "PARTIAL_REFUND_ISSUED_FOR_MISSING_ITEMS",
          "PARTIAL_REFUND_OFFER_ACCEPTED",
          "PAYMENT_REVERSED_ALREADY",
          "POS_SUBMITTED_INSTEAD_OF_POD",
          "PREAUTH_INSTALLMENT_DUE",
          "PROOF_OF_BILLING_AFTER_CANCELLATION_ACCEPTED",
          "PROOF_OF_DUPLICATE_DENIED_OR_INSUFFICIENT",
          "PROOF_OF_INCORRECT_TRANSACTION_AMOUNT_ACCEPTED",
          "PROOF_OF_PAID_BY_OTHER_MEANS_NOT_SUBMITTED",
          "PROOF_OF_TRACKING_NOT_SUBMITTED",
          "PROTECTED_BY_PAYPAL",
          "REPRESENTED_BY_PAYPAL",
          "SELLER_ACCEPTED_MULTIPLE_PAYMENTS",
          "SELLER_AGREED_REFUND_WITHOUT_RETURN",
          "SELLER_AGREED_TO_ISSUE_CREDIT",
          "SELLER_ISSUED_CREDIT_TO_BUYER",
          "SELLER_ISSUED_REFUND",
          "SELLER_NOT_REACHABLE",
          "SELLER_RECEIVED_PAYMENT_TWICE_OR_FOR_REPLACEMENT",
          "SELLER_REFUSED_REFUND",
          "SELLER_REFUSED_RETURN",
          "SELLER_SURCHARGED_BUYER",
          "SERVICE_NOT_COMPLETED_AS_AGREED",
          "SHIPPING_COMPANY_WONT_SHIP",
          "TRACKING_PROOF_NOT_ENOUGH",
          "TRANSACTION_AUTHORIZED_BY_CARDHOLDER",
          "TRANSACTION_CANCELLED_AFTER_AUTHORIZATION_DATE",
          "TRANSACTION_CANCELLED_BEFORE_SHIPMENT_SERVICE_DATE",
          "TRANSACTION_MATCHES_BUYER_SPENDING_PATTERN",
          "TRANSACTION_PROCESSED_CORRECTLY",
          "TRUSTED_BUYER_PAYOUT",
          "UNUSED_SHIPPING_LABEL",
          "VALID_PROOF_OF_DELIVERY",
          "VALID_PROOF_OF_DELIVERY_WITH_SIGNATURE",
          "VALID_PROOF_OF_REFUND",
          "VALID_PROOF_SUPPORTING_CLAIM",
          "VALID_RETURN_DELIVERY_PROOF",
          "VALID_RETURN_DELIVERY_PROOF_WITH_SIGNATURE",
          "VALID_SHIPMENT_PROOF",
          "VALUE_AFFECTED_SIGNIFICANTLY",
          "PROTECTION_POLICY_APPLIES"
        ],
        "type": "enum"
      }
    },
    "AdjudicationType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DENY_BUYER",
          "PAYOUT_TO_BUYER",
          "PAYOUT_TO_SELLER",
          "RECOVER_FROM_SELLER"
        ],
        "type": "enum"
      }
    },
    "Binary": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "bytes"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "BuyerEscalationReason": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "CancellationDetailsCancellationMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CANCELLED_PAYPAL_BILLING_AGREEMENT",
          "WEBSITE",
          "PHONE",
          "EMAIL",
          "WRITTEN",
          "IN_PERSON"
        ],
        "type": "enum"
      }
    },
    "CreditNotProcessedIssueType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PRODUCT",
          "SERVICE"
        ],
        "type": "enum"
      }
    },
    "CryptocurrencySymbol": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BTC",
          "ETH",
          "BCH",
          "LTC"
        ],
        "type": "enum"
      }
    },
    "DisputeChannel": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "INTERNAL",
          "EXTERNAL",
          "ALERT"
        ],
        "type": "enum"
      }
    },
    "DisputeLifecycleStage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "INQUIRY",
          "CHARGEBACK",
          "PRE_ARBITRATION",
          "ARBITRATION"
        ],
        "type": "enum"
      }
    },
    "DisputeOutcomeOutcomeCode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "RESOLVED_BUYER_FAVOUR",
          "RESOLVED_SELLER_FAVOUR",
          "RESOLVED_WITH_PAYOUT",
          "CANCELED_BY_BUYER",
          "ACCEPTED",
          "DENIED",
          "NONE"
        ],
        "type": "enum"
      }
    },
    "DisputeReason": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "MERCHANDISE_OR_SERVICE_NOT_RECEIVED",
          "MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED",
          "UNAUTHORISED",
          "CREDIT_NOT_PROCESSED",
          "DUPLICATE_TRANSACTION",
          "INCORRECT_AMOUNT",
          "PAYMENT_BY_OTHER_MEANS",
          "CANCELED_RECURRING_BILLING",
          "PROBLEM_WITH_REMITTANCE",
          "OTHER"
        ],
        "type": "enum"
      }
    },
    "DisputeState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "OPEN_INQUIRIES",
          "REQUIRED_ACTION",
          "REQUIRED_OTHER_PARTY_ACTION",
          "UNDER_PAYPAL_REVIEW",
          "APPEALABLE",
          "RESOLVED"
        ],
        "type": "enum"
      }
    },
    "EvidenceEvidenceType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PROOF_OF_FULFILLMENT",
          "PROOF_OF_REFUND",
          "PROOF_OF_DELIVERY_SIGNATURE",
          "PROOF_OF_RECEIPT_COPY",
          "RETURN_POLICY",
          "BILLING_AGREEMENT",
          "PROOF_OF_RESHIPMENT",
          "ITEM_DESCRIPTION",
          "POLICE_REPORT",
          "AFFIDAVIT",
          "PAID_WITH_OTHER_METHOD",
          "COPY_OF_CONTRACT",
          "TERMINAL_ATM_RECEIPT",
          "PRICE_DIFFERENCE_REASON",
          "SOURCE_CONVERSION_RATE",
          "BANK_STATEMENT",
          "CREDIT_DUE_REASON",
          "REQUEST_CREDIT_RECEIPT",
          "PROOF_OF_RETURN",
          "CREATE",
          "CHANGE_REASON",
          "PROOF_OF_REFUND_OUTSIDE_PAYPAL",
          "RECEIPT_OF_MERCHANDISE",
          "CUSTOMS_DOCUMENT",
          "CUSTOMS_FEE_RECEIPT",
          "INFORMATION_ON_RESOLUTION",
          "ADDITIONAL_INFORMATION_OF_ITEM",
          "DETAILS_OF_PURCHASE",
          "PROOF_OF_SIGNIFICANT_DIFFERENCE",
          "PROOF_OF_SOFTWARE_OR_SERVICE_NOT_AS_DESCRIBED",
          "PROOF_OF_CONFISCATION",
          "PROOF_OF_DAMAGE",
          "COPY_OF_LAW_ENFORCEMENT_AGENCY_REPORT",
          "ADDITIONAL_PROOF_OF_SHIPMENT",
          "PROOF_OF_DENIAL_BY_CARRIER",
          "THIRDPARTY_PROOF_FOR_DAMAGE_OR_SIGNIFICANT_DIFFERENCE",
          "VALID_SUPPORTING_DOCUMENT",
          "LEGIBLE_SUPPORTING_DOCUMENT",
          "RETURN_TRACKING_INFORMATION",
          "DELIVERY_RECEIPT",
          "PROOF_OF_INSTORE_RECEIPT",
          "ADDITIONAL_TRACKING_INFORMATION",
          "PROOF_OF_SHIPMENT_POSTAGE",
          "ONLINE_TRACKING_INFORMATION",
          "PROOF_OF_INSTORE_REFUND",
          "PROOF_FOR_SOFTWARE_OR_SERVICE_DELIVERED",
          "RETURN_ADDRESS_FOR_SHIPPING",
          "COPY_OF_THE_EPARCEL_MANIFEST",
          "COPY_OF_SHIPPING_MANIFEST",
          "APPEAL_AFFIDAVIT",
          "RECEIPT_OF_REPLACEMENT",
          "COPY_OF_DRIVERS_LICENSE",
          "ACCOUNT_CHANGE_INFORMATION",
          "DELIVERY_ADDRESS",
          "CONFIRMATION_OF_RESOLUTION",
          "MERCHANT_RESPONSE",
          "PERMISSION_DESCRIPTION",
          "STATUS_OF_MERCHANDISE",
          "LOST_CARD_DETAILS",
          "LAST_VALID_TRANSACTION_DETAILS",
          "ADDITIONAL_PROOF_OF_RETURN",
          "DECLARATION",
          "PROOF_OF_MISSING_ITEMS",
          "PROOF_OF_EMPTY_PACKAGE_OR_DIFFERENT_ITEM",
          "PROOF_OF_ITEM_NOT_RECEIVED",
          "ORDER_DETAILS",
          "LISTING_URL",
          "SHIPPING_INSURANCE",
          "BUYER_RESPONSE",
          "PHOTOS_OF_SHIPPED_ITEM",
          "OTHER"
        ],
        "type": "enum"
      }
    },
    "EvidenceSource": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "REQUESTED_FROM_BUYER",
          "REQUESTED_FROM_SELLER",
          "SUBMITTED_BY_BUYER",
          "SUBMITTED_BY_SELLER",
          "SUBMITTED_BY_PARTNER"
        ],
        "type": "enum"
      }
    },
    "FeePolicy": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "ItemAgreedRefundDetails": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ItemBookingDetails": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ItemCancellationDetails": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ItemDigitalDownloadDetails": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ItemProductDetails": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ItemServiceDetails": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ItemType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PRODUCT",
          "SERVICE",
          "BOOKING",
          "DIGITAL_DOWNLOAD"
        ],
        "type": "enum"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "LinkDescriptionMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "HEAD",
          "CONNECT",
          "OPTIONS",
          "PATCH"
        ],
        "type": "enum"
      }
    },
    "MerchandizeDisputePropertiesIssueType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PRODUCT",
          "SERVICE"
        ],
        "type": "enum"
      }
    },
    "MerchantContactedMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "WEBSITE",
          "PHONE",
          "EMAIL",
          "WRITTEN",
          "IN_PERSON"
        ],
        "type": "enum"
      }
    },
    "MerchantContactedOutcome": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "NO_RESPONSE",
          "FIXED",
          "NOT_FIXED"
        ],
        "type": "enum"
      }
    },
    "MessagePostedBy": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BUYER",
          "SELLER",
          "ARBITER"
        ],
        "type": "enum"
      }
    },
    "MoneyMovementAffectedParty": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SELLER",
          "BUYER",
          "PAYMENT_PROCESSOR"
        ],
        "type": "enum"
      }
    },
    "MoneyMovementReason": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DISPUTE_SETTLEMENT_FEE",
          "DISPUTE_SETTLEMENT",
          "DISPUTE_FEE",
          "CHARGEBACK_FEE"
        ],
        "type": "enum"
      }
    },
    "MoneyMovementType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DEBIT",
          "CREDIT"
        ],
        "type": "enum"
      }
    },
    "OfferHistoryActor": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BUYER",
          "SELLER"
        ],
        "type": "enum"
      }
    },
    "OfferHistoryEventType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PROPOSED",
          "ACCEPTED",
          "DENIED"
        ],
        "type": "enum"
      }
    },
    "OfferType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "REFUND",
          "REFUND_WITH_RETURN",
          "REFUND_WITH_REPLACEMENT",
          "REPLACEMENT_WITHOUT_REFUND"
        ],
        "type": "enum"
      }
    },
    "PatchOp": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "add",
          "remove",
          "replace",
          "move",
          "copy",
          "test"
        ],
        "type": "enum"
      }
    },
    "PaymentByOtherMeansPaymentMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CASH",
          "CREDIT_CARD",
          "CHECK",
          "PAYPAL",
          "DEBIT_CARD",
          "GIFT_CARD",
          "BANK_TRANSFER"
        ],
        "type": "enum"
      }
    },
    "PaymentProcessor": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ProductDetailsProductReceived": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "YES",
          "NO",
          "RETURNED"
        ],
        "type": "enum"
      }
    },
    "ProductDetailsSubReasons": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DAMAGED",
          "DIFFERENT",
          "MISSING_PARTS",
          "OTHER"
        ],
        "type": "enum"
      }
    },
    "RequireEvidenceAction": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BUYER_EVIDENCE",
          "SELLER_EVIDENCE"
        ],
        "type": "enum"
      }
    },
    "ReturnDetailsMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SHIPPED",
          "IN_PERSON"
        ],
        "type": "enum"
      }
    },
    "ServiceDetailsServiceStarted": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "YES",
          "NO",
          "CANCELLED"
        ],
        "type": "enum"
      }
    },
    "ServiceDetailsSubReasons": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DAMAGED",
          "DIFFERENT",
          "INCOMPLETE",
          "OTHER"
        ],
        "type": "enum"
      }
    },
    "Status": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "OPEN",
          "WAITING_FOR_BUYER_RESPONSE",
          "WAITING_FOR_SELLER_RESPONSE",
          "UNDER_REVIEW",
          "RESOLVED",
          "OTHER"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "SupportingInfoSource": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SUBMITTED_BY_BUYER",
          "SUBMITTED_BY_SELLER",
          "SUBMITTED_BY_PARTNER"
        ],
        "type": "enum"
      }
    },
    "TrackingInfoCarrierName": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "UPS",
          "USPS",
          "FEDEX",
          "AIRBORNE_EXPRESS",
          "DHL",
          "AIRSURE",
          "ROYAL_MAIL",
          "PARCELFORCE",
          "SWIFTAIR",
          "OTHER",
          "UK_PARCELFORCE",
          "UK_ROYALMAIL_SPECIAL",
          "UK_ROYALMAIL_RECORDED",
          "UK_ROYALMAIL_INT_SIGNED",
          "UK_ROYALMAIL_AIRSURE",
          "UK_UPS",
          "UK_FEDEX",
          "UK_AIRBORNE_EXPRESS",
          "UK_DHL",
          "UK_OTHER",
          "UK_CANNOT_PROV_TRACK",
          "UK_CANNOT_PROVIDE_TRACKING",
          "CA_CANADA_POST",
          "CA_PUROLATOR",
          "CA_CANPAR",
          "CA_LOOMIS",
          "CA_TNT",
          "TNT",
          "CA_OTHER",
          "CA_CANNOT_PROV_TRACK",
          "DE_DP_DHL_WITHIN_EUROPE",
          "DE_DP_DHL_T_AND_T_EXPRESS",
          "DE_DHL_DP_INTL_SHIPMENTS",
          "CA_CANNOT_PROVIDE_TRACKING",
          "DE_GLS",
          " DE_DPD_DELISTACK",
          "DE_HERMES",
          "DE_UPS",
          "DE_FEDEX",
          "DE_TNT",
          "DE_OTHER",
          "FR_CHRONOPOST",
          "FR_COLIPOSTE",
          "FR_DHL",
          "FR_UPS",
          "FR_FEDEX",
          "FR_TNT",
          "FR_GLS",
          "FR_OTHER",
          "IT_POSTE_ITALIA",
          "IT_DHL",
          "IT_UPS",
          "IT_FEDEX",
          "IT_TNT",
          "IT_GLS",
          "IT_OTHER",
          "AU_AUSTRALIA_POST_EP_PLAT",
          "AU_AUSTRALIA_POST_EPARCEL",
          "AU_AUSTRALIA_POST_EMS",
          "AU_DHL",
          "AU_STAR_TRACK_EXPRESS",
          "AU_UPS",
          "AU_FEDEX",
          "AU_TNT",
          "AU_TOLL_IPEC",
          "AU_OTHER",
          "FR_SUIVI",
          "IT_EBOOST_SDA",
          "ES_CORREOS_DE_ESPANA",
          "ES_DHL",
          "ES_UPS",
          "ES_FEDEX",
          "ES_TNT",
          "ES_OTHER",
          "AT_AUSTRIAN_POST_EMS",
          "AT_AUSTRIAN_POST_PPRIME",
          "BE_CHRONOPOST",
          "BE_TAXIPOST",
          "CH_SWISS_POST_EXPRES",
          "CH_SWISS_POST_PRIORITY",
          "CN_CHINA_POST",
          "HK_HONGKONG_POST",
          "IE_AN_POST_SDS_EMS",
          "IE_AN_POST_SDS_PRIORITY",
          "IE_AN_POST_REGISTERED",
          "IE_AN_POST_SWIFTPOST",
          "IN_INDIAPOST",
          "JP_JAPANPOST",
          "KR_KOREA_POST",
          "NL_TPG",
          "SG_SINGPOST",
          "TW_CHUNGHWA_POST",
          "CN_CHINA_POST_EMS",
          "CN_FEDEX",
          "CN_TNT",
          "CN_UPS",
          "CN_OTHER",
          "NL_TNT",
          "NL_DHL",
          "NL_UPS",
          "NL_FEDEX",
          "NL_KIALA",
          "BE_KIALA",
          "PL_POCZTA_POLSKA",
          "PL_POCZTEX",
          "PL_GLS",
          "PL_MASTERLINK",
          "PL_TNT",
          "PL_DHL",
          "PL_UPS",
          "PL_FEDEX",
          "JP_SAGAWA_KYUU_BIN",
          "JP_NITTSU_PELICAN_BIN",
          "JP_KURO_NEKO_YAMATO_UNYUU",
          "JP_TNT",
          "JP_DHL",
          "JP_UPS",
          "JP_FEDEX",
          "NL_PICKUP",
          "NL_INTANGIBLE",
          "NL_ABC_MAIL",
          "HK_FOUR_PX_EXPRESS",
          "HK_FLYT_EXPRESS",
          "US_ASCENDIA",
          "US_ENSENDA",
          "US_GLOBEGISTICS",
          "US_ONTRAC",
          "RRDONNELLEY",
          "ASENDIA_UK",
          "UK_COLLECTPLUS",
          "UK_DPD",
          "UK_HERMESWORLD",
          "UK_INTERLINK_EXPRESS",
          "UK_TNT",
          "UK_UK_MAIL",
          "UK_YODEL",
          "BUYLOGIC",
          "CN_EMS",
          "CHINA_POST",
          "CNEXPS",
          "CPACKET",
          "CUCKOOEXPRESS",
          "CN_EC",
          "CN_EMPS",
          "DE_ASENDIA",
          "UK_DELTEC",
          "DE_DEUTSCHE",
          "DE_DPD",
          "RABEN_GROUP",
          "GLOBAL_TNT",
          "ADSONE",
          "AU_AU_POST",
          "BONDSCOURIERS",
          "COURIERS_PLEASE",
          "DTDC_AU",
          "AU_FASTWAY",
          "HUNTER_EXPRESS",
          "SENDLE",
          "AUS_TOLL",
          "TOLL",
          "UBI_LOGISTICS",
          "OMNIPARCEL",
          "QUANTIUM",
          "CN_SF_EXPRESS",
          "SEKOLOGISTICS",
          "HK_TAQBIN",
          "GB_APC",
          "CA_CANPAR_COURIER",
          "GLOBAL_ESTES",
          "CA_GREYHOUND",
          "PUROLATOR",
          "US_RL",
          "IT_BRT",
          "DMM_NETWORK",
          "IT_FERCAM",
          "HERMES_IT",
          "IT_POSTE_ITALIANE",
          "IT_SDA",
          "IT_SGT",
          "GLOBAL_SKYNET",
          "FR_BERT",
          "FR_COLIS",
          "FR_GEODIS",
          "FR_LAPOSTE",
          "FR_TELIWAY",
          "DPD_POLAND",
          "INPOST_PACZKOMATY",
          "POL_POCZTA",
          "POL_SIODEMKA",
          "ESP_CORREOS",
          "ES_CORREOS",
          "ESP_NACEX",
          "ESP_ASM",
          "ESP_REDUR",
          "CBL_LOGISTICA",
          "EKART",
          "IND_DELHIVERY",
          "IND_BLUEDART",
          "IND_DTDC",
          "IND_PROFESSIONAL_COURIERS",
          "IND_REDEXPRESS",
          "IND_XPRESSBEES",
          "IND_DOTZOT",
          "THA_KERRY",
          "SENDIT",
          "ACOMMERCE",
          "NINJAVAN_THAI",
          "NIM_EXPRESS",
          "THA_THAILAND_POST",
          "THA_DYNAMIC_LOGISTICS",
          "ALPHAFAST",
          "FASTRAK_TH",
          "EPARCEL_KR",
          "CJ_KOREA_THAI",
          "RINCOS",
          "KOR_KOREA_POST",
          "KOR_CJ",
          "KOR_ECARGO",
          "SREKOREA",
          "ROCKETPARCEL",
          "BG_BULGARIAN_POST",
          "JPN_JAPAN_POST",
          "JPN_YAMATO",
          "JPN_SAGAWA",
          "TUR_PTT",
          "AUT_AUSTRIAN_POST",
          "AU_AUSTRIAN_POST",
          "RUSSIAN_POST",
          "BEL_DHL",
          "FR_MONDIAL",
          "EU_BPOST",
          "LANDMARK_GLOBAL",
          "IDN_POS",
          "IDN_POS_INT",
          "IDN_JNE",
          "IDN_PANDU",
          "RPX",
          "IDN_TIKI",
          "IDN_LION_PARCEL",
          "NINJAVAN_ID",
          "IDN_WAHANA",
          "IDN_FIRST_LOGISTICS",
          "UK_AN_POST",
          "DPD",
          "UK_FASTWAY",
          "UK_NIGHTLINE",
          "WISELOADS",
          "GR_ELTA",
          "GRC_ACS",
          "GR_GENIKI",
          "NINJAVAN_PHILIPPINES",
          "PHL_XEND_EXPRESS",
          "PHL_LBC",
          "PHL_JAMEXPRESS",
          "PHL_AIRSPEED",
          "PHL_RAF",
          "DIRECTLOG",
          "BRA_CORREIOS",
          "NLD_DHL",
          "NLD_POSTNL",
          "NLD_GLS",
          "NLD_TRANSMISSION",
          "CORREOS_DE_MEXICO",
          "MEX_ESTAFETA",
          "MEX_SENDA",
          "MEX_REDPACK",
          "MEX_AEROFLASH",
          "NATIONWIDE_MY",
          "MYS_MYS_POST",
          "MYS_TAQBIN",
          "MYS_SKYNET",
          "MYS_CITYLINK",
          "MYS_AIRPAK",
          "NINJAVAN_MY",
          "KANGAROO_MY",
          "VNM_VIETNAM_POST",
          "VNPOST_EMS",
          "PRT_INT_SEUR",
          "PRT_CTT",
          "PRT_CHRONOPOST",
          "PRT_SEUR",
          "ADICIONAL",
          "LTU_LIETUVOS",
          "DPEX",
          "LWE_HK",
          "SG_SG_POST",
          "SG_TAQBIN",
          "SG_NINJAVAN",
          "SG_ZALORA",
          "JET_SHIP",
          "SG_PARCELPOST",
          "CHE_SWISS_POST",
          "ASENDIA_HK",
          "HUN_MAGYAR",
          "POSTNORD_LOGISTICS",
          "SWE_DIRECTLINK",
          "SWE_POSTNORD",
          "SWE_DB",
          "CZE_CESKA",
          "NZ_NZ_POST",
          "NZ_COURIER_POST",
          "FASTWAY_NZ",
          "TW_TAIWAN_POST",
          "SPREADEL",
          "ARE_EMIRATES_POST",
          "AXL",
          "CYP_CYPRUS_POST",
          "HRV_HRVATSKA",
          "NOR_POSTEN",
          "RAM",
          "THECOURIERGUY",
          "ZA_FASTWAY",
          "DPE_EXPRESS",
          "POSTI",
          "MATKAHUOLTO",
          "GLOBAL_DHL",
          "ARG_CORREO",
          "ARG_OCA",
          "POST_SERBIA",
          "BH_POSTA",
          "CORREOS_CHILE",
          "APR_72",
          "CORREOS_DE_COSTA_RICA",
          "POSTUR_IS",
          "SPEEDEXCOURIER",
          "ROU_POSTA",
          "UKR_NOVA",
          "UKR_POSHTA",
          "NGA_NIPOST",
          "NG_COURIERPLUS",
          "ESHOPWORLD",
          "WEBINTERPRET",
          "HERMES",
          "ABC_MAIL",
          "ARAMEX",
          "YANWEN",
          "INTERNATIONAL_BRIDGE",
          "SFC_LOGISTICS",
          "BQC_EXPRESS",
          "ONE_WORLD",
          "IT_REGISTER_MAIL",
          "WINIT",
          "CONTINENTAL",
          "EFS",
          "PANTOS",
          "RELAIS_COLIS",
          "US_DHL_EXPRESS",
          "US_DHL_PARCEL",
          "US_DHL_ECOMMERCE",
          "US_DHL_GLOBALFORWARDING",
          "UK_DHL_EXPRESS",
          "UK_DHL_PARCEL",
          "UK_DHL_GLOBALFORWARDING",
          "CN_DHL_EXPRESS",
          "CN_DHL_ECOMMERCE",
          "CN_DHL_GLOBALFORWARDING",
          "DE_DHL_EXPRESS",
          "DE_DHL_PARCEL",
          "DE_DHL_PACKET",
          "DE_DHL_ECOMMERCE",
          "DE_DHL_GLOBALFORWARDING",
          "DE_DHL_DEUTSCHEPOST",
          "AU_DHL_EXPRESS",
          "AU_DHL_ECOMMERCE",
          "AU_DHL_GLOBALFORWARDING",
          "HK_DHL_EXPRESS",
          "HK_DHL_ECOMMERCE",
          "HK_DHL_GLOBALFORWARDING",
          "CA_DHL_EXPRESS",
          "CA_DHL_ECOMMERCE",
          "CA_DHL_GLOBALFORWARDING",
          "IT_DHL_EXPRESS",
          "IT_DHL_ECOMMERCE",
          "IT_DHL_GLOBALFORWARDING",
          "FR_DHL_EXPRESS",
          "FR_DHL_PARCEL",
          "FR_DHL_GLOBALFORWARDING",
          "PL_DHL_EXPRESS",
          "PL_DHL_PARCEL",
          "PL_DHL_GLOBALFORWARDING",
          "ABC_PACKAGE",
          "AN_POST",
          "APC_OVERNIGHT",
          "ASM_ES",
          "AUPOST_CN",
          "ACOMMMERCE",
          "ADICIONAL_PT",
          "AIR_21",
          "AIRBORNE_EXPRESS_UK",
          "AIRPAK_MY",
          "AIRSPEED",
          "ASENDIA_DE",
          "ASENDIA_US",
          "AUSTRALIA_POST",
          "TOLL_AU",
          "AUSTRIAN_POST_EXPRESS",
          "AUSTRIAN_POST",
          "B_TWO_C_EUROPE",
          "BERT",
          "BPOST",
          "BRT_IT",
          "BLUEDART",
          "BONDS_COURIERS",
          "BPOST_INT",
          "BULGARIAN_POST",
          "CJ_LOGISTICS",
          "CJ_INT_MY",
          "CJ_MY",
          "CJ_TH",
          "CANADA_POST",
          "CANPAR",
          "CESKA_CZ",
          "CHRONOPOST_FR",
          "CHRONOPOST_PT",
          "CHUNGHWA_POST",
          "CITYLINK_MY",
          "COLIPOSTE",
          "COLIS",
          "COLLECTPLUS",
          "CORREOS_AG",
          "CORREOS_BR",
          "CORREOS_CL",
          "CORREOS_CR",
          "CORREOS_MX",
          "CORREOS_ES",
          "CORREOS_EXPRESS",
          "COURIERPLUS",
          "COURIER_POST",
          "CYPRUS_POST_CYP",
          "DBSCHENKER_SE",
          "DHL_ES",
          "DHL_ACTIVE_TRACING",
          "DHL_AU",
          "DHL_BENELUX",
          "DHL_DEUTSCHE_POST",
          "DHL_FR",
          "DHL_GLOBAL_ECOMMERCE",
          "DHL_HK",
          "DHL_IT",
          "DHL_JP",
          "DHL_NL",
          "DHL_PACKET",
          "DHL_PARCEL_NL",
          "DHL_PARCEL_ES",
          "DHL_PL",
          "DHL_SG",
          "DHL_UK",
          "DHL_GLOBAL_MAIL_ASIA",
          "DHL_GLOBAL_MAIL",
          "DHL_AT",
          "DPD_DELISTRACK",
          "DPD_FR",
          "DPD_DE",
          "DPD_HK",
          "DPD_IR",
          "DPD_LOCAL_REF",
          "DPD_LOCAL",
          "DPD_PL",
          "DPD_RO",
          "DPD_RU",
          "DPD_UK",
          "DTDC_EXPRESS",
          "DTDC_IN",
          "DAWN_WING",
          "DELHIVERY_IN",
          "DELTEC_DE",
          "DELTEC_UK",
          "DEUTSCHE_DE",
          "DIRECTLINK_SE",
          "DIRECTLOG_BR",
          "DOTZOT",
          "EC_CN",
          "ELTA_GR",
          "EMPS_CN",
          "EMS_CN",
          "ECARGO",
          "EMIRATES_POST",
          "ENSENDA",
          "ESTAFETA",
          "ESTES",
          "FERCAM_IT",
          "FLYT_EXPRESS",
          "FASTRACK",
          "FASTWAY_US",
          "FASTWAY_ZA",
          "FASTWAY_UK",
          "FASTWAY_AU",
          "FIRST_LOGISITCS",
          "FOUR_PX_EXPRESS",
          "GEODIS",
          "GLS_CZ",
          "GLS_FR",
          "GLS_DE",
          "GLS_IT",
          "GLS_NL",
          "GLS_ES",
          "GLS",
          "ACS_GR",
          "GENIKI_GR",
          "GLOBEGISTICS",
          "GREYHOUND",
          "HERMES_DE",
          "HERMESWORLD_UK",
          "HK_POST",
          "HRVATSKA_HR",
          "HUAHAN_EXPRESS",
          "IMX",
          "ITIS",
          "INDIA_POST",
          "INTERLINK",
          "INT_SEUR",
          "INT_SUER",
          "ISRAEL_POST",
          "JNE_IDN",
          "JAMEXPRESS_PH",
          "JAPAN_POST",
          "JP_POST",
          "JETSHIP_MY",
          "JETSHIP_SG",
          "KERRY_EXPRESS_VN",
          "KERRY_EXPRESS_HK",
          "KERRY_EXPRESS_TH",
          "KIALA",
          "KOREA_POST",
          "CJ_KR",
          "LAPOSTE",
          "LBC_PH",
          "LIETUVOS_LT",
          "LION_PARCEL",
          "LOGISTICSWORLDWIDE_HK",
          "LOGISTICSWORLDWIDE_KR",
          "LOGISTICSWORLDWIDE_MY",
          "LOOMIS",
          "MONDIAL",
          "MAGYAR_HU",
          "MALAYSIA_POST",
          "MASTERLINK",
          "AEROFLASH",
          "REDPACK",
          "SENDA_MX",
          "MONDIAL_BE",
          "MYHERMES",
          "NACEX_ES",
          "NATIONWIDE",
          "NZ_POST",
          "NIPOST_NG",
          "NIGHTLINE_UK",
          "NINJAVAN_PH",
          "NINJAVAN_SG",
          "NOVA_POSHTA_INT",
          "NOVA_POSHTA",
          "OCA_AR",
          "ONTRAC",
          "PTT_POST",
          "PANDU",
          "PARCELPOST_SG",
          "POCZTA_POLSKA",
          "POCZTEX",
          "CTT_PT",
          "SEUR_PT",
          "POS_ID",
          "POS_INT",
          "POSTNL_INT_3_S",
          "POSTNL",
          "POSTNL_INT",
          "POSTNORD_LOGISTICS_DK",
          "POSTNORD_LOGISTICS_SE",
          "POSTNORD_LOGISTICS_GLOBAL",
          "POSTA_RO",
          "POSTE_ITALIANE",
          "POSTEN_NORGE",
          "PROFESSIONAL_COURIERS",
          "RAF_PH",
          "RL_US",
          "RPD_2_MAN",
          "RPX_ID",
          "REDEXPRESS",
          "REDUR_ES",
          "REGISTER_MAIL_IT",
          "RELAIS_COLIS_FR",
          "ROCKET_PARCEL",
          "SDA_IT",
          "SF_EXPRESS",
          "SFC_EXPRESS",
          "SGT_IT",
          "SRE_KOREA",
          "SAGAWA",
          "SAGAWA_JP",
          "POST_SERBIA_CS",
          "SINGPOST",
          "SIODEMKA",
          "SKYNET_WORLDWIDE",
          "SKYNET_MY",
          "SKYNET_UAE",
          "SKYNET_UK",
          "SEUR_ES",
          "STARTRACK_EXPRESS",
          "STARTRACK",
          "SWISS_POST",
          "TNT_AU",
          "TNT_CN",
          "TNT_CLICK_IT",
          "TNT_FR",
          "TNT_DE",
          "TNT_IT",
          "TNT_JP",
          "TNT_NL",
          "TNT_PL",
          "TNT_ES",
          "TNT_UK",
          "TPG",
          "TAIWAN_POST_TW",
          "TAQBIN_HK",
          "TAQBIN_MY",
          "TAQBIN_SG",
          "TAXIPOST",
          "TELIWAY",
          "THAILAND_POST",
          "THE_COURIER_GUY",
          "TIKI_ID",
          "TOLL_IPEC",
          "TWO_GO",
          "TRANSMISSION",
          "UK_MAIL",
          "UPS_MI",
          "VIETNAM_POST",
          "WAHANA_ID",
          "XEND_EXPRESS_PH",
          "XPRESSBEES",
          "YAMATO",
          "YANWEN_CN",
          "YODEL",
          "UPS_CANADA",
          "UPS_MAIL_INNOVATIONS",
          "DE_DELTEC",
          "DE_INTERNATIONALSEUR",
          "FR_DPD",
          "FR_IMX",
          "IT_IMX",
          "AU_DTDC",
          "AU_SENDLE",
          "AU_SKYNET",
          "ES_GLS",
          "ES_INTERNATIONALSEUR",
          "ES_IMX",
          "CN_HUAHANEXPRESS",
          "LOCAL_PICKUP",
          "HK_DPEX",
          "HK_KERRYEXPRESS",
          "HK_LOGISTICSWORLDWIDEEXPRESS",
          "HK_RPX",
          "HK_SPREADEL",
          "IN_SPREADEL",
          "TH_CJ",
          "KR_LOGISTICSWORLDWIDE",
          "AT_DHL",
          "BE_IMX",
          "MY_LOGISTICSWORLDWIDE",
          "MY_JETSHIP",
          "SG_DHL",
          "SG_SPREADEL",
          "POSTAROMANA",
          "US_PUROLATOR",
          "US_FASTWAY",
          "CHRONOPOST",
          "CORREOS_DE_ESPANA",
          "DEUTSCHE_POST_DHL",
          "EBOOST_SDA",
          "HONGKONG_POST",
          "INTANGIBLE_DIGITAL_SERVICES",
          "LA_POSTE",
          "LA_POSTE_SUIVI",
          "NEKO_YAMATO_UNYUU",
          "NITTSU_PELICAN_BIN",
          "POSTE_ITALIA",
          "SAGAWA_KYUU_BIN",
          "STAR_TRACK_EXPRESS",
          "US_DTDC",
          "US_STARTRACK",
          "ISR_ISRAEL_POST",
          "BE_MONDIAL",
          "B_2_CEUROPE",
          "PHL_2_GO",
          "PHL_AIR_21",
          "PT_SPANISH_SEUR",
          "ES_SPANISH_SEUR",
          "SG_DPEX",
          "CH_IMX",
          "DHLG",
          "RUSTON",
          "MIKROPAKKET",
          "XPOST",
          "PAN_ASIA",
          "PARCELONE",
          "SPEEDEE",
          "VENIPAK",
          "CROSHOT",
          "SHREENANDANCOURIER",
          "EPST_GLBL",
          "NEWGISTICS",
          "POST_SLOVENIA",
          "JERSEY_POST",
          "WMG",
          "BOMBINOEXP",
          "XQ_EXPRESS",
          "FURDECO",
          "LEGION_EXPRESS",
          "YDH_EXPRESS",
          "LHT_EXPRESS",
          "SOUTH_AFRICAN_POST_OFFICE",
          "GRUPO",
          "SPOTON",
          "DIMERCO",
          "INTERPARCEL_UK",
          "ABCUSTOM",
          "IND_DELIVREE",
          "GLOBAL_ABF",
          "CN_BESTEXPRESS",
          "DX_SFTP",
          "PICKUPP_MYS",
          "XPERT_DELIVERY",
          "FMX",
          "HELLMANN",
          "DHL_REFR",
          "DHL_HK",
          "SHIP_IT_ASIA",
          "KERRY_ECOMMERCE",
          "GOJEK",
          "FRETERAPIDO",
          "YODEL_INTNL",
          "CFL_LOGISTICS",
          "PITNEY_BOWES",
          "ZA_SPECIALISED_FREIGHT",
          "JANCO",
          "XPRESSEN_DK",
          "YTO",
          "RPD2MAN",
          "SEUR_SP_API",
          "DELIVERYONTIME",
          "WISE_EXPRESS",
          "JINSUNG",
          "JTEXPRESS_VN",
          "CHUKOU1",
          "TRANS_KARGO",
          "FEDEX_INTL_MLSERV",
          "SWISHIP_DE",
          "IVOY_WEBHOOK",
          "AIRMEE_WEBHOOK",
          "VAMOX",
          "FIRSTMILE",
          "AMS_GRP",
          "FASTWAY_IR",
          "HH_EXP",
          "HRPARCEL",
          "MYS_MYPOST_ONLINE",
          "GESWL",
          "BLUESTAR",
          "TIPSA",
          "CDEK_TR",
          "KGMHUB",
          "INTEXPRESS",
          "DESCARTES",
          "OVERSE_EXP",
          "ONECLICK",
          "ROADRUNNER_FREIGHT",
          "GLS_CROTIA",
          "TOURLINE",
          "MRW_FTP",
          "BH_WORLDWIDE",
          "BLUEX",
          "DYLT",
          "OCS",
          "YINGNUO_LOGISTICS",
          "SIN_GLBL",
          "TUFFNELLS_REFERENCE",
          "CJPACKET",
          "MILKMAN",
          "FIEGE_NL",
          "ASIGNA",
          "ONEWORLDEXPRESS",
          "LTIANEXP",
          "KWE_GLOBAL",
          "CTC_EXPRESS",
          "LAO_POST",
          "EU_IMX",
          "GLS_SLOV",
          "AMAZON",
          "MORE_LINK",
          "JX",
          "MYS_EMS",
          "EASY_MAIL",
          "ADUIEPYLE",
          "GB_PANTHER",
          "SG_DETRACK",
          "EXPRESSSALE",
          "DICOM",
          "MATDESPATCH",
          "TRUNKRS_WEBHOOK",
          "WESTBANK_COURIER",
          "MBW",
          "KHM_CAMBODIA_POST",
          "FEDEX_CROSSBORDER",
          "JANIO",
          "SINOTRANS",
          "BRT_IT_PARCELID",
          "A1POST",
          "DHL_SUPPLY_CHAIN",
          "TAZMANIAN_FREIGHT",
          "TOPYOU",
          "PALEXPRESS",
          "SAIA_FREIGHT",
          "CN_WEDO",
          "FULFILLME",
          "SG_QXPRESS",
          "UPS_REFERENCE",
          "NHANS_SOLUTIONS",
          "CARIBOU",
          "LOCUS_WEBHOOK",
          "DSV",
          "CN_GOFLY",
          "COORDINADORA",
          "P2P_TRC",
          "ANDREANI",
          "DIRECTPARCELS",
          "DOORA",
          "FEDEX_POLAND",
          "INTERPARCEL_NZ",
          "XDP_UK_REFERENCE",
          "ETOMARS",
          "CN_JCEX",
          "IND_ECOM",
          "FAR_INTERNATIONAL",
          "ESP_ENVIALIA",
          "IDEXPRESS",
          "GANGBAO",
          "SMSA_EXPRESS",
          "NEWAY",
          "DEX_I",
          "DESIGNERTRANSPORT_WEBHOOK",
          "BUDBEE_WEBHOOK",
          "GLS_SLOVEN",
          "PARCELLED_IN",
          "COPA_COURIER",
          "GSI_EXPRESS",
          "CON_WAY",
          "BROUWER_TRANSPORT",
          "TOLL_NZ",
          "CPEX",
          "ECHO",
          "FEDEX_FR",
          "XDE_WEBHOOK",
          "TOLOS",
          "BORDEREXPRESS",
          "GIAO_HANG",
          "MAILPLUS_JPN",
          "GEODIS_ESPACE",
          "TNT_UK_REFR",
          "DOORDASH_WEBHOOK",
          "KEC",
          "CJ_HK_INTERNATIONAL",
          "HELTHJEM",
          "ZA_COURIERIT",
          "SFB2C",
          "FREIGHTQUOTE",
          "FR_EXAPAQ",
          "LANDMARK_GLOBAL_REFERENCE",
          "PARCEL2GO",
          "DELNEXT",
          "TCK_EXPRESS",
          "ENDEAVOUR_DELIVERY",
          "NANJINGWOYUAN",
          "HEPPNER_FR",
          "PICKRR",
          "FONSEN",
          "APC_OVERNIGHT_CONNUM",
          "STAR_TRACK_NEXT_FLIGHT",
          "UPS_FREIGHT",
          "DAJIN",
          "POSTA_PLUS",
          "CEVA",
          "ORANGE_DS",
          "ANSERX",
          "JS_EXPRESS",
          "PADTF",
          "GAC",
          "EZSHIP",
          "GEIS",
          "SYPOST",
          "AMAZON_SHIP_MCF",
          "SF_EX",
          "YUSEN",
          "ESP_MRW",
          "BRING",
          "PAGO",
          "AO_COURIER",
          "GBA",
          "DIAMOND_EUROGISTICS",
          "NEWEGGEXPRESS",
          "LALAMOVE",
          "SPEEDCOURIERS_GR",
          "CORPORATECOURIERS_WEBHOOK",
          "FORRUN",
          "PICKUP",
          "BOND",
          "ECMS",
          "INTELIPOST",
          "SK_POSTA",
          "FLASHEXPRESS",
          "FETCHR_WEBHOOK",
          "CN_STO",
          "SEKO_SFTP",
          "THEDELIVERYGROUP",
          "CELLO_SQUARE",
          "HOME_DELIVERY_SOLUTIONS",
          "DPD_HGRY",
          "KERRYTTC_VN",
          "TARRIVE",
          "JOYING_BOX",
          "COLLIVERY",
          "TOTAL_EXPRESS",
          "ZJS_EXPRESS",
          "STARKEN",
          "MAINFREIGHT",
          "IND_FIRSTFLIGHT",
          "BE_BPOST",
          "DEMANDSHIP",
          "CN_DPEX",
          "ACSWORLDWIDE",
          "LOGISTERS",
          "GOGLOBALPOST",
          "AMSTAN",
          "OKAYPARCEL",
          "I_DIKA",
          "ENVIALIA_REFERENCE",
          "PAACK_WEBHOOK",
          "GRAB_WEBHOOK",
          "PARCELPOINT",
          "ICUMULUS",
          "FDSEXPRESS",
          "DAIGLOBALTRACK",
          "CNDEXPRESS",
          "GLOBAL_IPARCEL",
          "AMAZON_FBA_SWISHIP",
          "WYNGS",
          "YURTICI_KARGO",
          "CN_PAYPAL_PACKAGE",
          "PARCEL_2_POST",
          "ZYLLEM",
          "VIA_EXPRESS",
          "WIZMO",
          "TIGFREIGHT",
          "PIL_LOGISTICS",
          "ZTO_EXPRESS",
          "HEPPNER",
          "GENERAL_OVERNIGHT",
          "HAPPY2POINT",
          "ARCO_SPEDIZIONI",
          "CHITCHATS",
          "IML",
          "SMOOTH",
          "INTEL_VALLEY",
          "CLE_LOGISTICS",
          "FIEGE",
          "MX_CARGO",
          "ZIINGFINALMILE",
          "TCS",
          "DAYTON_FREIGHT",
          "ROADBULL",
          "YODEL_DIR",
          "STONE3PL",
          "PARCELPAL_WEBHOOK",
          "DHL_ECOMERCE_ASA",
          "SIMPLYPOST",
          "KY_EXPRESS",
          "SHENZHEN",
          "UC_EXPRE",
          "US_LASERSHIP",
          "DIDADI",
          "DYNALOGIC",
          "DBSCHENKER_B2B",
          "MXE",
          "PFCEXPRESS",
          "WHISTL",
          "CAE_DELIVERS",
          "WEPOST",
          "ALLIEDEXPRESS",
          "SHIPPIT",
          "DDEXPRESS",
          "ARAMEX_AU",
          "TFM",
          "BNEED",
          "M_XPRESS",
          "HK_TGX",
          "LATVIJAS_PASTS",
          "HDB_BOX",
          "VIAEUROPE",
          "CORREO_UY",
          "CLEVY_LINKS",
          "IBEONE",
          "J_NET",
          "RCL",
          "6LS",
          "CGS_EXPRESS",
          "BLR_BELPOST",
          "BIRDSYSTEM",
          "DOBROPOST",
          "SAP_EXPRESS",
          "WEASHIP",
          "SONICTL",
          "KWT",
          "AFLLOG_FTP",
          "IND_SAFEEXPRESS",
          "TOPHATTEREXPRESS",
          "SEINO",
          "MGLOBAL",
          "SZENDEX",
          "AVERITT",
          "DBSCHENKER_SV",
          "LEADER",
          "AO_DEUTSCHLAND",
          "2EBOX",
          "EU_FLEET_SOLUTIONS",
          "SG_SPEEDPOST",
          "PCFCORP",
          "AERONET",
          "LINKBRIDGE",
          "DE_DEUTSCHE_POST_DHL_WITHIN_EUROPE_TRACKNET",
          "PRIMAMULTICIPTA",
          "ISR_POST_DOMESTIC",
          "COUREX",
          "ZAJIL_EXPRESS",
          "BESTWAYPARCEL",
          "COLLECTCO",
          "AEX",
          "JTEXPRESS",
          "FEDEX_UK",
          "USHIP",
          "ROUTIFIC_WEBHOOK",
          "GLOBAL_EXPRESS",
          "BRT_IT_SENDER_REF",
          "GLOBAVEND",
          "PIXSELL",
          "SHIPTOR",
          "CDEK",
          "VNM_VIETTELPOST",
          "PHL_AIR21",
          "PALLET_NETWORK",
          "CJ_CENTURY",
          "UK_XDP",
          "GSO",
          "VIWO",
          "SKYBOX",
          "PAPER_EXPRESS",
          "KERRYTJ",
          "NTLOGISTICS_VN",
          "SDH_SCM",
          "PALLETWAYS",
          "NOX_NACHTEXPRESS",
          "ZINC",
          "DPE_SOUTH_AFRC",
          "LOGISTIKA",
          "CELERITAS",
          "PRESSIODE",
          "SHREE_MARUTI",
          "PARCELINKLOGISTICS",
          "EFEX",
          "LOTTE",
          "LONESTAR",
          "GB_NORSK",
          "APRISAEXPRESS",
          "BEL_RS",
          "OSM_WORLDWIDE",
          "SAILPOST",
          "MAILAMERICAS",
          "WESTGATE_GL",
          "DTD_EXPR",
          "ALFATREX",
          "THABIT_LOGISTICS",
          "PROMEDDELIVERY",
          "PAQUETEXPRESS",
          "NEWZEALAND_COURIERS",
          "LIEFERY",
          "JOOM_LOGIS",
          "STRECK_TRANSPORT",
          "HCT_LOGISTICS",
          "ZA_FASTWAY",
          "CARRY_FLAP",
          "PONY_EXPRESS",
          "US_OLD_DOMINION",
          "ANICAM_BOX",
          "ALWAYS_EXPRESS",
          "WANBEXPRESS",
          "AUS_STARTRACK",
          "GBS_BROKER",
          "STALLIONEXPRESS",
          "RAIDEREX",
          "ALLJOY",
          "SHOPFANS",
          "KYUNGDONG_PARCEL",
          "CHAMPION_LOGISTICS",
          "PICKUPP_SGP",
          "DEALERSEND",
          "MORNING_EXPRESS",
          "NACEX",
          "THENILE_WEBHOOK",
          "JOCOM",
          "HOLISOL",
          "LBCEXPRESS_FTP",
          "CSE",
          "TFORCE_FINALMILE",
          "KURASI",
          "GEMWORLDWIDE",
          "SHIP_GATE",
          "USF_REDDAWAY",
          "SHIPTER",
          "NATIONAL_SAMEDAY",
          "APG",
          "CN_BOXC",
          "YUNEXPRESS",
          "INTEGRA2_FTP",
          "CAINIAO",
          "ECOSCOOTING",
          "DMS_MATRIX",
          "MAINWAY",
          "ASENDIA_USA",
          "PAPERFLY",
          "HOUNDEXPRESS",
          "3JMSLOGISTICS",
          "EP_BOX",
          "BOX_BERRY",
          "LICCARDI_EXPRESS",
          "PLUS_LOG_UK",
          "FULFILLA",
          "SKY_POSTAL",
          "ASE",
          "CNWANGTONG",
          "PITTOHIO",
          "MAIL_PLUS",
          "XPO_LOGISTICS",
          "WNDIRECT",
          "CLOUDWISH_ASIA",
          "ZELERIS",
          "MARA_XPRESS",
          "GIO_EXPRESS",
          "OCS_WORLDWIDE",
          "DESTINY",
          "ARK_LOGISTICS",
          "DE_DPD_DELISTRACK",
          "COMET_TECH",
          "DHL_PARCEL_RU",
          "AQUILINE",
          "PILOT_FREIGHT",
          "TNT_REFR",
          "QWINTRY",
          "DANSKE_FRAGT",
          "SHREE_ANJANI_COURIER",
          "CARRIERS",
          "AIR_CANADA_GLOBAL",
          "PRESIDENT_TRANS",
          "STEPFORWARDFS",
          "ESHIPPING",
          "SHREETIRUPATI",
          "HX_EXPRESS",
          "INDOPAKET",
          "CN_17POST",
          "K1_EXPRESS",
          "CJ_GLS",
          "MYS_GDEX",
          "NATIONEX",
          "CN_EQUICK",
          "ANJUN",
          "VIRTRANSPORT",
          "FARGOOD",
          "SMG_EXPRESS",
          "RZYEXPRESS",
          "SEFL",
          "HIPSHIPPER",
          "HDB",
          "RPXLOGISTICS",
          "MIKROPAKKET_BE",
          "KUEHNE",
          "IT_NEXIVE",
          "PTS",
          "ETS_EXPRESS",
          "SWISS_POST_FTP",
          "COLIS_PRIVE",
          "FASTRK_SERV",
          "4_72",
          "US_YRC",
          "CN_YUNDA",
          "POSTNL_INTL_3S",
          "AAA_COOPER",
          "ELIAN_POST",
          "CUBYN",
          "SAU_SAUDI_POST",
          "360LION",
          "ABXEXPRESS_MY",
          "NINJAVAN_WB",
          "ESP_PACKLINK",
          "IND_JAYONEXPRESS",
          "GB_ARROW",
          "ZES_EXPRESS",
          "IND_GOJAVAS",
          "ZEPTO_EXPRESS",
          "SKYNET_ZA",
          "KPOST",
          "ZEEK_2_DOOR",
          "DHL_FREIGHT",
          "BLUECARE",
          "BLINKLASTMILE",
          "POSTA_UKR",
          "LOGISTYX_TRANSGROUP",
          "JINDOUYUN",
          "CHROBINSON",
          "TRACKON",
          "CN_POST56",
          "GB_TUFFNELLS",
          "COURANT_PLUS",
          "SCUDEX_EXPRESS",
          "SHIPENTEGRA",
          "TRUMPCARD",
          "CHOIR_EXP",
          "ETOTAL",
          "COPE",
          "SFPLUS_WEBHOOK",
          "IND_GATI",
          "HERMES_2MANN_HANDLING",
          "CN_WISHPOST",
          "GLOBALTRANZ",
          "HKD",
          "UDS",
          "BJSHOMEDELIVERY",
          "YAKIT",
          "LEXSHIP",
          "OMNIVA",
          "SUTTON",
          "COSTMETICSNOW",
          "PANTHER_REFERENCE",
          "SFCSERVICE",
          "PFLOGISTICS",
          "LTL",
          "LOOMIS_EXPRESS",
          "PARKNPARCEL",
          "SPRING_GDS",
          "GLS_ITALY",
          "ECEXPRESS",
          "LINE",
          "INTERPARCEL_AU",
          "GEL_EXPRESS",
          "AGILITY",
          "XL_EXPRESS",
          "ADERONLINE",
          "DIRECTCOURIERS",
          "PLANZER",
          "NOX_NIGHT_TIME_EXPRESS",
          "SENDING",
          "HUODULL"
        ],
        "type": "enum"
      }
    },
    "TransactionInfoTransactionStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "COMPLETED",
          "UNCLAIMED",
          "DENIED",
          "FAILED",
          "HELD",
          "PENDING",
          "PARTIALLY_REFUNDED",
          "REFUNDED",
          "REVERSED",
          "CANCELLED"
        ],
        "type": "enum"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
