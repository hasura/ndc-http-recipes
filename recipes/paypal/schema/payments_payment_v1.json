{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api-m.paypal.com",
          "env": "PAYPAL_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "Oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": {
              "value": "/v1/oauth2/token",
              "env": "PAYPAL_OAUTH2_TOKEN_URL"
            },
            "scopes": {
              "https://api.paypal.com/v1/payments/.*": "Deprecated. Legacy payment scope. It will be replaced with new scopes",
              "https://uri.paypal.com/services/checkout/onetimepayment": "This scope enable buyer's checkout flow to load payment information.",
              "https://uri.paypal.com/services/payments/channelpartner": "Permission to explicitly specify the receiver of a payment on request payload.",
              "https://uri.paypal.com/services/payments/futurepayments": "Permission for future or pre-approved payment.",
              "https://uri.paypal.com/services/payments/payment": "New special privileged scope available to do payment. This will be available to internal clients only",
              "https://uri.paypal.com/services/payments/payment/authcapture": "Permission to do non-real time payments like authorization on order or capture on authorization or an order ",
              "https://uri.paypal.com/services/payments/paymentcard": "Permission to do unbranded credit or debit card payments",
              "https://uri.paypal.com/services/payments/realtimepayment": "Permission to do any real time payment, with support for sale/authorize/order intents",
              "https://uri.paypal.com/services/payments/refund": "Permission to initiate a refund/reversal on a sale or capture transaction",
              "https://uri.paypal.com/services/payments/unilateralrefund": "This scope enables partners/facilitators to perform unilateralrefund and also refund."
            },
            "clientId": {
              "env": "PAYPAL_OAUTH2_CLIENT_ID"
            },
            "clientSecret": {
              "env": "PAYPAL_OAUTH2_CLIENT_SECRET"
            }
          }
        }
      }
    },
    "version": "1.12"
  },
  "functions": {
    "authorization_get": {
      "request": {
        "url": "/v1/payments/authorization/{authorization_id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/realtimepayment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "authorization_id": {
          "description": "The ID of the authorization to re-authorize.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "authorization_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Show authorization details",
      "result_type": {
        "name": "Authorization",
        "type": "named"
      }
    },
    "capture_get": {
      "request": {
        "url": "/v1/payments/capture/{capture_id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/realtimepayment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "capture_id": {
          "description": "The ID of the captured payment to refund.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "capture_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Show captured payment details",
      "result_type": {
        "name": "Capture",
        "type": "named"
      }
    },
    "orders_get": {
      "request": {
        "url": "/v1/payments/orders/{order_id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/realtimepayment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "order_id": {
          "description": "The ID of the order to authorize.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "order_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Show order details",
      "result_type": {
        "name": "Order",
        "type": "named"
      }
    },
    "payment_get": {
      "request": {
        "url": "/v1/payments/payment/{payment_id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/realtimepayment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "payment_id": {
          "description": "The ID of the payment to execute.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "payment_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Show payment details",
      "result_type": {
        "name": "Payment",
        "type": "named"
      }
    },
    "payment_list": {
      "request": {
        "url": "/v1/payments/payment",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/realtimepayment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/checkout/onetimepayment"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "count": {
          "description": "The number of items to list in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "count",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 20
            }
          }
        },
        "end_time": {
          "description": "The end date and time for the range to show in the response, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, `end_time=2016-03-06T11:00:00Z`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "end_time",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "payee_id": {
          "description": "Filters the payments in the response by a PayPal-assigned merchant ID that identifies the payee.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "payee_id",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sort_by": {
          "description": "Sorts the payments in the response by a create time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentListSortBy",
              "type": "named"
            }
          },
          "http": {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sort_order": {
          "description": "Sorts the payments in the response in descending order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentListSortOrder",
              "type": "named"
            }
          },
          "http": {
            "name": "sort_order",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_id": {
          "description": "The ID of the starting resource in the response. When results are paged, you can use the `next_id` value as the `start_id` to continue with the next set of results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "start_id",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_index": {
          "description": "The start index of the payments to list. Typically, you use the `start_index` to jump to a specific position in the resource history based on its cart. For example, to start at the second item in a list of results, specify `?start_index=2`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "start_index",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "start_time": {
          "description": "The start date and time for the range to show in the response, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, `start_time=2016-03-06T11:00:00Z`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "start_time",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "List payments",
      "result_type": {
        "name": "PaymentHistory",
        "type": "named"
      }
    },
    "refund_get": {
      "request": {
        "url": "/v1/payments/refund/{refund_id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/refund"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "refund_id": {
          "description": "The ID of the refund for which to show details.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "refund_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Show refund details",
      "result_type": {
        "name": "Refund",
        "type": "named"
      }
    },
    "sale_get": {
      "request": {
        "url": "/v1/payments/sale/{sale_id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/realtimepayment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "sale_id": {
          "description": "The ID of the sale transaction to refund.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "sale_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Show sale details",
      "result_type": {
        "name": "Sale",
        "type": "named"
      }
    }
  },
  "object_types": {
    "Address": {
      "description": "The billing address or shipping address for a payment.",
      "fields": {
        "city": {
          "description": "The city name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 64
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "line1": {
          "description": "The first line of the address. For example, number, street, and so on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "line2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "normalization_status": {
          "description": "The address normalization status. Returned only for payers from Brazil.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressNormalizationStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "phone": {
          "description": "The phone number, in [E.123 format](https://www.itu.int/rec/T-REC-E.123-200102-I/en). Maximum length is 50 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone"
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "state": {
          "description": "The [code](/docs/integration/direct/rest/state-codes/) for a US state or the equivalent for other countries. Required for transactions if the address is in one of these countries: [Argentina](/docs/integration/direct/rest/state-codes/#argentina), [Brazil](/docs/integration/direct/rest/state-codes/#brazil), [Canada](/docs/integration/direct/rest/state-codes/#canada), [China](/docs/integration/direct/rest/state-codes/#china), [India](/docs/integration/direct/rest/state-codes/#india), [Italy](/docs/integration/direct/rest/state-codes/#italy), [Japan](/docs/integration/direct/rest/state-codes/#japan), [Mexico](/docs/integration/direct/rest/state-codes/#mexico), [Thailand](/docs/integration/direct/rest/state-codes/#thailand), or [United States](/docs/integration/direct/rest/state-codes/#usa).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "type": {
          "description": "The type of address. For example, `HOME_OR_WORK`, `GIFT`, and so on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "address"
    },
    "AddressInput": {
      "description": "The billing address or shipping address for a payment.",
      "fields": {
        "city": {
          "description": "The city name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 64
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "line1": {
          "description": "The first line of the address. For example, number, street, and so on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "line2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "phone": {
          "description": "The phone number, in [E.123 format](https://www.itu.int/rec/T-REC-E.123-200102-I/en). Maximum length is 50 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone"
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "state": {
          "description": "The [code](/docs/integration/direct/rest/state-codes/) for a US state or the equivalent for other countries. Required for transactions if the address is in one of these countries: [Argentina](/docs/integration/direct/rest/state-codes/#argentina), [Brazil](/docs/integration/direct/rest/state-codes/#brazil), [Canada](/docs/integration/direct/rest/state-codes/#canada), [China](/docs/integration/direct/rest/state-codes/#china), [India](/docs/integration/direct/rest/state-codes/#india), [Italy](/docs/integration/direct/rest/state-codes/#italy), [Japan](/docs/integration/direct/rest/state-codes/#japan), [Mexico](/docs/integration/direct/rest/state-codes/#mexico), [Thailand](/docs/integration/direct/rest/state-codes/#thailand), or [United States](/docs/integration/direct/rest/state-codes/#usa).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "type": {
          "description": "The type of address. For example, `HOME_OR_WORK`, `GIFT`, and so on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "address"
    },
    "Amount": {
      "description": "The payment amount, with details.",
      "fields": {
        "currency": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/). PayPal does not support all currencies.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "details": {
          "description": "The additional details about the payment amount.Note: For an order authorization or capture, you cannot include the amount details object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AmountDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "total": {
          "description": "The total amount charged to the payee by the payer. For refunds, represents the amount that the payee refunds to the original payer. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.For currencies like `JPY` do not support decimals.</ul>",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "amount"
    },
    "AmountDetails": {
      "description": "The additional details about the payment amount.Note: For an order authorization or capture, you cannot include the amount details object.",
      "fields": {
        "gift_wrap": {
          "description": "The gift wrap fee. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Note: For an order authorization or capture, you cannot include the gift_wrap parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "handling_fee": {
          "description": "The handling fee. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Supported for the PayPal payment method only.Note: For an order authorization or capture, you cannot include the handling_fee parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insurance": {
          "description": "The insurance fee. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Supported only for the PayPal payment method.Note: For an order authorization or capture, you cannot include the insurance parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "shipping": {
          "description": "The shipping fee. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Note: For an order authorization or capture, you cannot include the shipping parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "shipping_discount": {
          "description": "The shipping fee discount. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Supported for the PayPal payment method only.Note: For an order authorization or capture, you cannot include the shipping_discount parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subtotal": {
          "description": "The subtotal amount for the items. If the request includes line items, this property is **required**. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Note: For an order authorization or capture, you cannot include the subtotal parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "tax": {
          "description": "The tax. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Note: For an order authorization or capture, you cannot include the tax parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AmountDetailsInput": {
      "description": "The additional details about the payment amount.Note: For an order authorization or capture, you cannot include the amount details object.",
      "fields": {
        "gift_wrap": {
          "description": "The gift wrap fee. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Note: For an order authorization or capture, you cannot include the gift_wrap parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "handling_fee": {
          "description": "The handling fee. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Supported for the PayPal payment method only.Note: For an order authorization or capture, you cannot include the handling_fee parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insurance": {
          "description": "The insurance fee. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Supported only for the PayPal payment method.Note: For an order authorization or capture, you cannot include the insurance parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "shipping": {
          "description": "The shipping fee. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Note: For an order authorization or capture, you cannot include the shipping parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "shipping_discount": {
          "description": "The shipping fee discount. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Supported for the PayPal payment method only.Note: For an order authorization or capture, you cannot include the shipping_discount parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subtotal": {
          "description": "The subtotal amount for the items. If the request includes line items, this property is **required**. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Note: For an order authorization or capture, you cannot include the subtotal parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "tax": {
          "description": "The tax. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.Note: For an order authorization or capture, you cannot include the tax parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AmountInput": {
      "description": "The payment amount, with details.",
      "fields": {
        "currency": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/). PayPal does not support all currencies.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "details": {
          "description": "The additional details about the payment amount.Note: For an order authorization or capture, you cannot include the amount details object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AmountDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "total": {
          "description": "The total amount charged to the payee by the payer. For refunds, represents the amount that the payee refunds to the original payer. Maximum length is 10 characters, which includes:Seven digits before the decimal point.The decimal point.Two digits after the decimal point.For currencies like `JPY` do not support decimals.</ul>",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "amount"
    },
    "ApplicationContext": {
      "description": "The application context. Set these properties to customize the payment flow experience for your customers.",
      "fields": {
        "brand_name": {
          "description": "A label that overrides the business name in the merchant's PayPal account on the PayPal checkout pages.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "landing_page": {
          "description": "The type of landing page to show on the PayPal site for customer checkout. To use the non-PayPal account landing page, set to `Billing`. To use the PayPal account log in landing page, set to `Login`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "locale": {
          "description": "The locale of pages that the PayPal payment experience displays. Please refer [here](/docs/api/reference/locale-codes/#localize-the-checkout-experience) for list of supported local codes.  Defaulted to en_US if not provided or invalid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "payment_pattern": {
          "description": "Provides context (e.g. frequency of payment (Single, Recurring) along with whether (Customer is Present, Not Present) for the payment being processed. For Card and PayPal Vaulted/Billing Agreement transactions, this helps specify the appropriate indicators to the networks (e.g. Mastercard, Visa) which ensures compliance as well as ensure a better auth-rate. For bank processing, indicates to clearing house whether the transaction is recurring or not depending on the option chosen.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentPattern",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 3
          }
        },
        "preferred_payment_source": {
          "description": "The payment source definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentSource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "shipping_preference": {
          "description": "The shipping preference.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplicationContextShippingPreference",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user_action": {
          "description": "The user action. Presents the customer with either the Continue or Pay Now checkout flow:FlowActionDescriptionPay Nowuser_action=commitAfter the customer is redirected to the PayPal payment page, shows the Pay Now button.Use this option when you know the final amount when checkout is initiated and you want to process the payment immediately when the customer clicks Pay Now.Continue user_action=continueAfter the customer is redirected to the PayPal payment page, shows the Continue button.Use this option when you do not know the final amount when you initiate the checkout flow and you want to redirect the customer to the merchant page without processing the payment.</table>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "application_context"
    },
    "ApplicationContextInput": {
      "description": "The application context. Set these properties to customize the payment flow experience for your customers.",
      "fields": {
        "brand_name": {
          "description": "A label that overrides the business name in the merchant's PayPal account on the PayPal checkout pages.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "landing_page": {
          "description": "The type of landing page to show on the PayPal site for customer checkout. To use the non-PayPal account landing page, set to `Billing`. To use the PayPal account log in landing page, set to `Login`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "locale": {
          "description": "The locale of pages that the PayPal payment experience displays. Please refer [here](/docs/api/reference/locale-codes/#localize-the-checkout-experience) for list of supported local codes.  Defaulted to en_US if not provided or invalid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "payment_pattern": {
          "description": "Provides context (e.g. frequency of payment (Single, Recurring) along with whether (Customer is Present, Not Present) for the payment being processed. For Card and PayPal Vaulted/Billing Agreement transactions, this helps specify the appropriate indicators to the networks (e.g. Mastercard, Visa) which ensures compliance as well as ensure a better auth-rate. For bank processing, indicates to clearing house whether the transaction is recurring or not depending on the option chosen.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentPattern",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 3
          }
        },
        "preferred_payment_source": {
          "description": "The payment source definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentSourceInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "shipping_preference": {
          "description": "The shipping preference.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplicationContextShippingPreference",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user_action": {
          "description": "The user action. Presents the customer with either the Continue or Pay Now checkout flow:FlowActionDescriptionPay Nowuser_action=commitAfter the customer is redirected to the PayPal payment page, shows the Pay Now button.Use this option when you know the final amount when checkout is initiated and you want to process the payment immediately when the customer clicks Pay Now.Continue user_action=continueAfter the customer is redirected to the PayPal payment page, shows the Continue button.Use this option when you do not know the final amount when you initiate the checkout flow and you want to redirect the customer to the merchant page without processing the payment.</table>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "application_context"
    },
    "Authorization": {
      "description": "The authorization details.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "name": "Amount",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "create_time": {
          "description": "The date and time when the authorization was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "fmf_details": {
          "description": "The Fraud Management Filter (FMF) details that are applied to the payment that result in an accept, deny, or pending action. Returned in a payment response only if the merchant has enabled FMF in the profile settings and one of the fraud filters was triggered based on those settings. For more information, see [Fraud Management Filters Summary](/docs/classic/fmf/integration-guide/FMFSummary/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FmfDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "id": {
          "description": "The ID of the authorization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "parent_payment": {
          "description": "The ID of the payment on which this transaction is based.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "payment_mode": {
          "description": "The payment mode of the authorization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuthorizationPaymentMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "pending_reason": {
          "description": "Deprecated. The reason code for the pending transaction state. Obsolete. Use `reason_code` instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuthorizationPendingReason",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "processor_response": {
          "description": "The processor-provided response codes that describe the submitted payment. Supported only when the `payment_method` is `credit_card`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProcessorResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "protection_eligibility": {
          "description": "The level of seller protection present for the transaction. Supported for the PayPal payment method only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuthorizationProtectionEligibility",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "protection_eligibility_type": {
          "description": "The type of seller protection for the transaction. Returned only when the `protection_eligibility` property is `ELIGIBLE` or `PARTIALLY_ELIGIBLE`. Supported for the PayPal payment method only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuthorizationProtectionEligibilityType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reason_code": {
          "description": "The reason code for the pending transaction state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuthorizationReasonCode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "receipt_id": {
          "description": "The receipt ID, which identifies the payment. Value is 16-digit numeric payment ID number that is returned for guest users.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}$"
          }
        },
        "state": {
          "description": "The authorized payment state.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuthorizationState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "update_time": {
          "description": "The date and time when the authorization was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "valid_until": {
          "description": "The date and time when the authorization expires, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      },
      "alias": "authorization"
    },
    "AuthorizationInput": {
      "description": "The authorization details.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "name": "AmountInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "fmf_details": {
          "description": "The Fraud Management Filter (FMF) details that are applied to the payment that result in an accept, deny, or pending action. Returned in a payment response only if the merchant has enabled FMF in the profile settings and one of the fraud filters was triggered based on those settings. For more information, see [Fraud Management Filters Summary](/docs/classic/fmf/integration-guide/FMFSummary/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FmfDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "processor_response": {
          "description": "The processor-provided response codes that describe the submitted payment. Supported only when the `payment_method` is `credit_card`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProcessorResponseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "authorization"
    },
    "Capture": {
      "description": "The capture transaction details.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Amount",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "create_time": {
          "description": "The date and time of the capture, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "exchange_rate": {
          "description": "The exchange rate applied for this transaction. Returned when there is a currency conversion from the transaction currency to the receivable currency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "The ID of the capture transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "invoice_number": {
          "description": "The invoice number to track this payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "is_final_capture": {
          "description": "Indicates whether to release all remaining held funds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "note_to_payer": {
          "description": "A free-form field that clients can use to send a note to the payer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255
          }
        },
        "parent_payment": {
          "description": "The ID of the payment on which this transaction is based.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reason_code": {
          "description": "The reason code that describes why the transaction state is pending or reversed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CaptureReasonCode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "receivable_amount": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "state": {
          "description": "The state of the capture.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CaptureState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "transaction_fee": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "transaction_fee_in_receivable_currency": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "update_time": {
          "description": "The date and time when the resource was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      },
      "alias": "capture"
    },
    "CaptureInput": {
      "description": "The capture transaction details.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AmountInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "invoice_number": {
          "description": "The invoice number to track this payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "is_final_capture": {
          "description": "Indicates whether to release all remaining held funds.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "note_to_payer": {
          "description": "A free-form field that clients can use to send a note to the payer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255
          }
        },
        "receivable_amount": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CurrencyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "transaction_fee": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CurrencyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "transaction_fee_in_receivable_currency": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CurrencyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "capture"
    },
    "CartBaseInput": {
      "description": "The cart.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "name": "AmountInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom": {
          "description": "The free-form field for the client's use.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "description": {
          "description": "The purchase description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "invoice_number": {
          "description": "The invoice number to track this payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "item_list": {
          "description": "An array of items that are being purchased.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CartBaseItemListInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "note_to_payee": {
          "description": "The note to the recipient of the funds in this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255
          }
        },
        "notify_url": {
          "description": "The send payment notifications URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 2048
          }
        },
        "order_url": {
          "description": "The payment-related URL on the merchant site.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 2048
          }
        },
        "payee": {
          "description": "The payee who receives the funds and fulfills the order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayeeInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payment_options": {
          "description": "The payment options for this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CartBasePaymentOptionsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "reference_id": {
          "description": "The merchant-provided ID for the purchase unit.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 256
          }
        },
        "soft_descriptor": {
          "description": "The payment descriptor on account transactions on the customer's credit card statement, that PayPal sends to processors. The maximum length of the soft descriptor information that you can pass in the API field is 22 characters, in the following format:22 - len(PAYPAL * (8)) - len(Descriptor in Payment Receiving Preferences of Merchant account + 1)The PAYPAL prefix uses 8 characters.The soft descriptor supports the following ASCII characters:Alphanumeric charactersDashesAsterisksPeriods (.)SpacesFor Wallet payments marketplace integrations:The merchant descriptor in the Payment Receiving Preferences must be the marketplace name.You can't use the remaining space to show the customer service number.The remaining spaces can be a combination of seller name and country.For unbranded payments (Direct Card) marketplace integrations, use a combination of the seller name and phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 22
          }
        }
      },
      "alias": "cart_base"
    },
    "CartBaseItemListInput": {
      "description": "An array of items that are being purchased.",
      "fields": {
        "items": {
          "description": "An array of items that are being purchased.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ItemInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "shipping_address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShippingAddressInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "shipping_phone_number": {
          "description": "The shipping phone number, in its canonical international format as defined by the [E.164](https://en.wikipedia.org/wiki/E.164) numbering plan. Enables merchants to share payers contact number with PayPal for the current payment. The final contact number for the payer who is associated with the transaction might be the same as or different from the `shipping_phone_number` based on the payers action on PayPal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 50,
            "minLength": 1
          }
        }
      }
    },
    "CartBasePaymentOptionsInput": {
      "description": "The payment options for this transaction.",
      "fields": {
        "allowed_payment_method": {
          "description": "The payment method for this transaction. This field does not apply to the credit card payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CartBasePaymentOptionsAllowedPaymentMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreditCardToken": {
      "description": "The tokenized credit card details. You can use this instrument to fund a payment.",
      "fields": {
        "credit_card_id": {
          "description": "The ID of credit card that is stored in the PayPal vault.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 256,
            "minLength": 1
          }
        },
        "expire_month": {
          "description": "The expiration month with no leading zero. Value is from `1` to `12`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ],
            "maximum": 12,
            "minimum": 1
          }
        },
        "expire_year": {
          "description": "The four-digit expiration year.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{4}$",
            "maxLength": 4,
            "minLength": 4
          }
        },
        "external_customer_id": {
          "description": "The externally-provided ID of the customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 256,
            "minLength": 1
          }
        },
        "last4": {
          "description": "The last four digits of the stored credit card number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 4,
            "minLength": 4
          }
        },
        "payer_id": {
          "description": "Deprecated. A unique ID that you can assign and track when you store a credit card in the vault or use a vaulted credit card. This ID can help to avoid unintentional use or misuse of credit cards and can be any value, such as a UUID, user name, or email address. **Required** when you use a vaulted credit card and if a `payer_id` was originally provided when you vaulted the credit card. Use external_customer_id instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 1,
            "minLength": 256
          }
        },
        "type": {
          "description": "The credit card type. Value is `visa`, `mastercard`, `discover`, or `amex`. Do not use these lowercase values for display.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 256,
            "minLength": 1
          }
        }
      },
      "alias": "credit_card_token"
    },
    "CreditCardTokenInput": {
      "description": "The tokenized credit card details. You can use this instrument to fund a payment.",
      "fields": {
        "credit_card_id": {
          "description": "The ID of credit card that is stored in the PayPal vault.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 256,
            "minLength": 1
          }
        },
        "external_customer_id": {
          "description": "The externally-provided ID of the customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 256,
            "minLength": 1
          }
        },
        "payer_id": {
          "description": "Deprecated. A unique ID that you can assign and track when you store a credit card in the vault or use a vaulted credit card. This ID can help to avoid unintentional use or misuse of credit cards and can be any value, such as a UUID, user name, or email address. **Required** when you use a vaulted credit card and if a `payer_id` was originally provided when you vaulted the credit card. Use external_customer_id instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 1,
            "minLength": 256
          }
        }
      },
      "alias": "credit_card_token"
    },
    "Currency": {
      "description": "The currency and amount for a transaction.",
      "fields": {
        "currency": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/). PayPal does not support all currencies.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The amount. Includes the specified number of digits after decimal separator for the [ISO-4217 currency code](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "currency"
    },
    "CurrencyInput": {
      "description": "The currency and amount for a transaction.",
      "fields": {
        "currency": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/). PayPal does not support all currencies.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The amount. Includes the specified number of digits after decimal separator for the [ISO-4217 currency code](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "currency"
    },
    "DetailedRefund": {
      "description": "The refund transaction details.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Amount",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "capture_id": {
          "description": "The ID of the sale transaction being refunded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "create_time": {
          "description": "The date and time when the refund was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "custom": {
          "description": "The note to the payer in this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "description": {
          "description": "The refund description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "The ID of the refund transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 17
          }
        },
        "invoice_number": {
          "description": "Your own invoice or tracking ID number. Value is a string of single-byte alphanumeric characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "parent_payment": {
          "description": "The ID of the payment on which this transaction is based.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reason": {
          "description": "The reason that the transaction is being refunded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "refund_from_received_amount": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "refund_from_transaction_fee": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "sale_id": {
          "description": "The ID of the sale transaction being refunded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "state": {
          "description": "The state of the refund.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Refund2State",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "total_refunded_amount": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "update_time": {
          "description": "The date and time when the resource was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      }
    },
    "FmfDetails": {
      "description": "The Fraud Management Filter (FMF) details that are applied to the payment that result in an accept, deny, or pending action. Returned in a payment response only if the merchant has enabled FMF in the profile settings and one of the fraud filters was triggered based on those settings. For more information, see [Fraud Management Filters Summary](/docs/classic/fmf/integration-guide/FMFSummary/).",
      "fields": {
        "description": {
          "description": "The filter description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "filter_id": {
          "description": "The filter ID.",
          "type": {
            "name": "FmfDetailsFilterId",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "filter_type": {
          "description": "The filter type.",
          "type": {
            "name": "FmfDetailsFilterType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The filter name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "fmf_details"
    },
    "FmfDetailsInput": {
      "description": "The Fraud Management Filter (FMF) details that are applied to the payment that result in an accept, deny, or pending action. Returned in a payment response only if the merchant has enabled FMF in the profile settings and one of the fraud filters was triggered based on those settings. For more information, see [Fraud Management Filters Summary](/docs/classic/fmf/integration-guide/FMFSummary/).",
      "fields": {
        "xmlValue": {
          "description": "Value of the xml field",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "text": true
            }
          }
        }
      },
      "alias": "fmf_details"
    },
    "FundingInstrument": {
      "description": "The funding instrument details. An instance of this schema is valid if and only if it validates against exactly one of these supported properties.",
      "fields": {
        "credit_card_token": {
          "description": "The tokenized credit card details. You can use this instrument to fund a payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreditCardToken",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "funding_instrument"
    },
    "FundingInstrumentInput": {
      "description": "The funding instrument details. An instance of this schema is valid if and only if it validates against exactly one of these supported properties.",
      "fields": {
        "credit_card_token": {
          "description": "The tokenized credit card details. You can use this instrument to fund a payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreditCardTokenInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "funding_instrument"
    },
    "Item": {
      "description": "The item details.",
      "fields": {
        "currency": {
          "description": "The [three-character ISO-4217 currency code](/docs/api/reference/currency-codes/) that identifies the currency.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3
          }
        },
        "description": {
          "description": "The item description. Supported for only the PayPal payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "name": {
          "description": "The item name. If this value is greater than the maximum allowed length, the API truncates the string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "price": {
          "description": "The item cost. Supports two decimal places.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{0,10}(\\.[0-9]{0,2})?$",
            "maxLength": 10
          }
        },
        "quantity": {
          "description": "The item quantity. Must be a whole number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{0,10}$",
            "maxLength": 10
          }
        },
        "sku": {
          "description": "The stock keeping unit (SKU) for the item.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "tax": {
          "description": "The item tax. Supported only for the PayPal payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "item"
    },
    "ItemInput": {
      "description": "The item details.",
      "fields": {
        "currency": {
          "description": "The [three-character ISO-4217 currency code](/docs/api/reference/currency-codes/) that identifies the currency.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3
          }
        },
        "description": {
          "description": "The item description. Supported for only the PayPal payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "name": {
          "description": "The item name. If this value is greater than the maximum allowed length, the API truncates the string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "price": {
          "description": "The item cost. Supports two decimal places.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{0,10}(\\.[0-9]{0,2})?$",
            "maxLength": 10
          }
        },
        "quantity": {
          "description": "The item quantity. Must be a whole number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{0,10}$",
            "maxLength": 10
          }
        },
        "sku": {
          "description": "The stock keeping unit (SKU) for the item.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "tax": {
          "description": "The item tax. Supported only for the PayPal payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "item"
    },
    "LinkDescription": {
      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
      "fields": {
        "href": {
          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "method": {
          "description": "The HTTP method required to make the related call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "LinkDescriptionMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rel": {
          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "link_description"
    },
    "Order": {
      "description": "The order transaction details.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "name": "Amount",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "create_time": {
          "description": "The date and time when the resource was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "fmf_details": {
          "description": "The Fraud Management Filter (FMF) details that are applied to the payment that result in an accept, deny, or pending action. Returned in a payment response only if the merchant has enabled FMF in the profile settings and one of the fraud filters was triggered based on those settings. For more information, see [Fraud Management Filters Summary](/docs/classic/fmf/integration-guide/FMFSummary/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FmfDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "id": {
          "description": "The ID of the order transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "parent_payment": {
          "description": "The ID of the payment on which this transaction is based.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "payment_mode": {
          "description": "The transaction payment mode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderPaymentMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "pending_reason": {
          "description": "Deprecated. The reason code for the pending transaction state. Obsolete. Use `reason_code` instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderPendingReason",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "protection_eligibility": {
          "description": "The level of seller protection in effect for the transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderProtectionEligibility",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "protection_eligibility_type": {
          "description": "The kind of seller protection in effect for the transaction. Returned only when the `protection_eligibility` property is `ELIGIBLE` or `PARTIALLY_ELIGIBLE`. Supported only for PayPal payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderProtectionEligibilityType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reason_code": {
          "description": "The reason code that describes why the transaction state is pending or reversed. Supported only for PayPal payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderReasonCode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "state": {
          "description": "The state of the order transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "update_time": {
          "description": "The date and time when the resource was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      },
      "alias": "order"
    },
    "OrderInput": {
      "description": "The order transaction details.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "name": "AmountInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "fmf_details": {
          "description": "The Fraud Management Filter (FMF) details that are applied to the payment that result in an accept, deny, or pending action. Returned in a payment response only if the merchant has enabled FMF in the profile settings and one of the fraud filters was triggered based on those settings. For more information, see [Fraud Management Filters Summary](/docs/classic/fmf/integration-guide/FMFSummary/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FmfDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "order"
    },
    "PatchInput": {
      "description": "The JSON patch object to apply partial updates to resources.",
      "fields": {
        "from": {
          "description": "The JSON Pointer to the target document location from which to move the value. Required for the move operation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "op": {
          "description": "The operation.",
          "type": {
            "name": "PatchOp",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "path": {
          "description": "The JSON Pointer to the target document location at which to complete the operation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The value to apply. The remove operation does not require a value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        }
      },
      "alias": "patch"
    },
    "Payee": {
      "description": "The payee who receives the funds and fulfills the order.",
      "fields": {
        "email": {
          "description": "The email address associated with the payee's PayPal account. For an intent of authorize or order, the email address must be associated with a confirmed PayPal business account. For an intent of sale, the email can either:Be associated with a confirmed PayPal personal or business account.Not be associated with a PayPal account.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "merchant_id": {
          "description": "The PayPal account ID for the payee.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "payee"
    },
    "PayeeInput": {
      "description": "The payee who receives the funds and fulfills the order.",
      "fields": {
        "email": {
          "description": "The email address associated with the payee's PayPal account. For an intent of authorize or order, the email address must be associated with a confirmed PayPal business account. For an intent of sale, the email can either:Be associated with a confirmed PayPal personal or business account.Not be associated with a PayPal account.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "merchant_id": {
          "description": "The PayPal account ID for the payee.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "payee"
    },
    "Payer": {
      "description": "The payer. The payer funds the payment.",
      "fields": {
        "funding_instruments": {
          "description": "An array of a single funding instrument for the current payment. Valid only and required for the credit card payment method. The array must include either a `credit_card` or `credit_card_token` object. If the array contains more than one instrument, the payment is declined.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "FundingInstrument",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "payer_info": {
          "description": "The payer information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayerInfo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payment_method": {
          "description": "The payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayerPaymentMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 17,
            "minLength": 4
          }
        },
        "status": {
          "description": "The status of payer's PayPal account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayerStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 10,
            "minLength": 8
          }
        }
      },
      "alias": "payer"
    },
    "PayerInfo": {
      "description": "The payer information.",
      "fields": {
        "billing_address": {
          "description": "The billing address or shipping address for a payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Address",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "birth_date": {
          "description": "The birth date of the payer, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, `1990-04-12`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "email": {
          "description": "The payer's email address. Maximum length is 127 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "first_name": {
          "description": "The payer's first name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "last_name": {
          "description": "The payer's last name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "middle_name": {
          "description": "The payer's middle name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "payer_id": {
          "description": "The PayPal-assigned encrypted payer ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "salutation": {
          "description": "The payer's salutation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "shipping_address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShippingAddress",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "suffix": {
          "description": "The payer's suffix.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "tax_id": {
          "description": "The payer's tax ID. Supported for the PayPal payment method only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 14
          }
        },
        "tax_id_type": {
          "description": "The payer's tax ID type. Supported for the PayPal payment method only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayerInfoTaxIdType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "payer_info"
    },
    "PayerInfoInput": {
      "description": "The payer information.",
      "fields": {
        "billing_address": {
          "description": "The billing address or shipping address for a payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "birth_date": {
          "description": "The birth date of the payer, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, `1990-04-12`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "email": {
          "description": "The payer's email address. Maximum length is 127 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "shipping_address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShippingAddressInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "tax_id": {
          "description": "The payer's tax ID. Supported for the PayPal payment method only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 14
          }
        },
        "tax_id_type": {
          "description": "The payer's tax ID type. Supported for the PayPal payment method only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayerInfoTaxIdType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "payer_info"
    },
    "PayerInput": {
      "description": "The payer. The payer funds the payment.",
      "fields": {
        "funding_instruments": {
          "description": "An array of a single funding instrument for the current payment. Valid only and required for the credit card payment method. The array must include either a `credit_card` or `credit_card_token` object. If the array contains more than one instrument, the payment is declined.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "FundingInstrumentInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "payer_info": {
          "description": "The payer information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayerInfoInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payment_method": {
          "description": "The payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayerPaymentMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 17,
            "minLength": 4
          }
        }
      },
      "alias": "payer"
    },
    "Payment": {
      "description": "The payment details.",
      "fields": {
        "application_context": {
          "description": "The application context. Set these properties to customize the payment flow experience for your customers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplicationContext",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "create_time": {
          "description": "The date and time when the payment was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "experience_profile_id": {
          "description": "Deprecated. The PayPal-generated ID for the merchant's payment experience profile. For information, see [create web experience profile](/docs/api/payment-experience/v1/#web-profiles_create). Use application_context instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "failure_reason": {
          "description": "The reason code for a payment failure.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentFailureReason",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "The ID of the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "intent": {
          "description": "The payment intent. Value is:sale. Makes an immediate payment.authorize. [Authorizes a payment for capture later](/docs/integration/direct/payments/authorize-and-capture-payments/).order. [Creates an order](/docs/integration/direct/payments/orders/).</ul>",
          "type": {
            "name": "PaymentIntent",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "note_to_payer": {
          "description": "A free-form field that clients can use to send a note to the payer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 165
          }
        },
        "payer": {
          "description": "The payer. The payer funds the payment.",
          "type": {
            "name": "Payer",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "redirect_urls": {
          "description": "A set of redirect URLs that you provide for PayPal-based payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentRedirectUrls",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "state": {
          "description": "The state of the payment, authorization, or order transaction. Value is:created. The transaction was successfully created.approved. The customer approved the transaction. The state changes from created to approved on generation of the sale_id for sale transactions, authorization_id for authorization transactions, or order_id for order transactions.failed. The transaction request failed.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "transactions": {
          "description": "An array of payment-related transactions. A transaction defines what the payment is for and who fulfills the payment. For update and execute payment calls, the **`transactions`** object accepts the **`amount`** object only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Transaction",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "update_time": {
          "description": "The date and time when the payment was updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      },
      "alias": "payment"
    },
    "PaymentExecutionInput": {
      "description": "Executes a PayPal account-based payment with the `payer_id` obtained from the web approval URL.",
      "fields": {
        "payer_id": {
          "description": "The ID of the payer that PayPal passes in the `return_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "transactions": {
          "description": "An array of transaction details. Includes the amount and item details. For update and execute payment calls, the `transactions` object accepts only the `amount` object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CartBaseInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "payment_execution"
    },
    "PaymentHistory": {
      "description": "An array of merchant payments that are complete. Payments that you just created with the [create payment](/docs/api/payments/v1/#payment_create) call do not appear in the list.",
      "fields": {
        "count": {
          "description": "The number of items returned in each range of results. Note that the last results range might have fewer items than the requested number of items.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ],
            "maximum": 20
          }
        },
        "next_id": {
          "description": "The ID of the element to use to get the next range of results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "payments": {
          "description": "An array of payments that are complete. Payments that you just created with the [create payment](/docs/api/payments/v1/#payment_create) call do not appear in the list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Payment",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "payment_history"
    },
    "PaymentHoldReason": {
      "description": "The payment-related financial transactions, which include sales, authorizations, captures, and refunds. To show resource details, use the resource ID. For example, to [show details for a related authorization](/docs/api/payments/v1/#authorization_get), use the ID returned in the `authorization` object. You can also use the [HATEOAS links](/docs/api/hateoas-links/) for a resource to complete operations for that resource. For example, a `sale` object provides a `refund` link that enables you to refund the sale.",
      "fields": {
        "payment_hold_reason": {
          "description": "The reason that PayPal holds the recipient fund. Set only if the payment hold status is `HELD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentHoldReasonPaymentHoldReason",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "payment_hold_reason"
    },
    "PaymentInput": {
      "description": "The payment details.",
      "fields": {
        "application_context": {
          "description": "The application context. Set these properties to customize the payment flow experience for your customers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplicationContextInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "experience_profile_id": {
          "description": "Deprecated. The PayPal-generated ID for the merchant's payment experience profile. For information, see [create web experience profile](/docs/api/payment-experience/v1/#web-profiles_create). Use application_context instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "intent": {
          "description": "The payment intent. Value is:sale. Makes an immediate payment.authorize. [Authorizes a payment for capture later](/docs/integration/direct/payments/authorize-and-capture-payments/).order. [Creates an order](/docs/integration/direct/payments/orders/).</ul>",
          "type": {
            "name": "PaymentIntent",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "note_to_payer": {
          "description": "A free-form field that clients can use to send a note to the payer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 165
          }
        },
        "payer": {
          "description": "The payer. The payer funds the payment.",
          "type": {
            "name": "PayerInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "redirect_urls": {
          "description": "A set of redirect URLs that you provide for PayPal-based payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentRedirectUrlsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "transactions": {
          "description": "An array of payment-related transactions. A transaction defines what the payment is for and who fulfills the payment. For update and execute payment calls, the **`transactions`** object accepts the **`amount`** object only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TransactionInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "payment"
    },
    "PaymentRedirectUrls": {
      "description": "A set of redirect URLs that you provide for PayPal-based payments.",
      "fields": {
        "cancel_url": {
          "description": "The URL where the payer is redirected after he or she cancels the payment. **Required for PayPal account payments**.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "return_url": {
          "description": "The URL where the payer is redirected after he or she approves the payment. **Required for PayPal account payments**.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "PaymentRedirectUrlsInput": {
      "description": "A set of redirect URLs that you provide for PayPal-based payments.",
      "fields": {
        "cancel_url": {
          "description": "The URL where the payer is redirected after he or she cancels the payment. **Required for PayPal account payments**.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "return_url": {
          "description": "The URL where the payer is redirected after he or she approves the payment. **Required for PayPal account payments**.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "PaymentSource": {
      "description": "The payment source definition.",
      "fields": {
        "token": {
          "description": "The tokenized payment source to fund a payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Token",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "payment_source"
    },
    "PaymentSourceInput": {
      "description": "The payment source definition.",
      "fields": {
        "token": {
          "description": "The tokenized payment source to fund a payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TokenInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "payment_source"
    },
    "ProcessorResponse": {
      "description": "The processor-provided response codes that describe the submitted payment. Supported only when the `payment_method` is `credit_card`.",
      "fields": {
        "advice_code": {
          "description": "The merchant advice on how to handle declines for recurring payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProcessorResponseAdviceCode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "avs_code": {
          "description": "The [Address Verification System (AVS)](/docs/nvp-soap-api/AVSResponseCodes/) response code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "[A-z0-9]{1}",
            "maxLength": 1
          }
        },
        "cvv_code": {
          "description": "The [CVV](/docs/nvp-soap-api/AVSResponseCodes/) system response code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "[A-z0-9]{1}",
            "maxLength": 1
          }
        },
        "eci_submitted": {
          "description": "The processor-provided authorization response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "response_code": {
          "description": "The PayPal normalized response code, which is generated from the processor's specific response code.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 4
          }
        },
        "vpas": {
          "description": "The processor-provided Visa Payer Authentication Service (VPAS) status.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "processor_response"
    },
    "ProcessorResponseInput": {
      "description": "The processor-provided response codes that describe the submitted payment. Supported only when the `payment_method` is `credit_card`.",
      "fields": {
        "xmlValue": {
          "description": "Value of the xml field",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "text": true
            }
          }
        }
      },
      "alias": "processor_response"
    },
    "Refund": {
      "description": "The refund details.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Amount",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "capture_id": {
          "description": "The ID of the sale transaction being refunded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "create_time": {
          "description": "The date and time when the refund was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "description": {
          "description": "The refund description. Value must be single-byte alphanumeric characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "The ID of the refund transaction. Maximum length is 17 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "invoice_number": {
          "description": "The invoice or tracking ID number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "parent_payment": {
          "description": "The ID of the payment on which this transaction is based.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reason": {
          "description": "The reason that the transaction is being refunded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sale_id": {
          "description": "The ID of the sale transaction being refunded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "state": {
          "description": "The state of the refund.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RefundState",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "update_time": {
          "description": "The date and time when the resource was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      },
      "alias": "refund"
    },
    "RefundRequestInput": {
      "description": "The refund request.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AmountInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "description": {
          "description": "The refund description. Value is a string of single-byte alphanumeric characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255
          }
        },
        "invoice_number": {
          "description": "The invoice number that tracks this payment. Value is a string of single-byte alphanumeric characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "reason": {
          "description": "The refund reason description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 30
          }
        }
      },
      "alias": "refund_request"
    },
    "RelatedResources": {
      "description": "The payment-related financial transactions, which include sales, authorizations, captures, and refunds. To show resource details, use the resource ID. For example, to [show details for a related authorization](/docs/api/payments/v1/#authorization_get), use the ID returned in the `authorization` object. You can also use the [HATEOAS links](/docs/api/hateoas-links/) for a resource to complete operations for that resource. For example, a `sale` object provides a `refund` link that enables you to refund the sale.",
      "fields": {
        "authorization": {
          "description": "The authorization details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Authorization",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "capture": {
          "description": "The capture transaction details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Capture",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "order": {
          "description": "The order transaction details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Order",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "refund": {
          "description": "The refund details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Refund",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "sale": {
          "description": "The sale transaction details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Sale",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "related_resources"
    },
    "Sale": {
      "description": "The sale transaction details.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "name": "Amount",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "billing_agreement_id": {
          "description": "The ID of the billing agreement. Used as reference to execute this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "clearing_time": {
          "description": "The date and time when the PayPal eCheck transaction is expected to clear, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "create_time": {
          "description": "The date and time of the sale, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "exchange_rate": {
          "description": "The exchange rate for this transaction. Returned only in cross-currency use cases where a merchant bills a buyer in a non-primary currency for that buyer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "fmf_details": {
          "description": "The Fraud Management Filter (FMF) details that are applied to the payment that result in an accept, deny, or pending action. Returned in a payment response only if the merchant has enabled FMF in the profile settings and one of the fraud filters was triggered based on those settings. For more information, see [Fraud Management Filters Summary](/docs/classic/fmf/integration-guide/FMFSummary/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FmfDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "id": {
          "description": "The ID of the sale transaction.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "parent_payment": {
          "description": "The ID of the payment on which this transaction is based.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "payment_hold_reasons": {
          "description": "An array of reasons that PayPal holds the recipient fund. Set only if the payment hold status is `HELD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PaymentHoldReason",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "payment_hold_status": {
          "description": "The recipient fund status. Returned only when the fund status is `held`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SalePaymentHoldStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "payment_mode": {
          "description": "The transaction payment mode. Supported only for PayPal payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SalePaymentMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "processor_response": {
          "description": "The processor-provided response codes that describe the submitted payment. Supported only when the `payment_method` is `credit_card`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProcessorResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "protection_eligibility": {
          "description": "The merchant protection level in effect for the transaction. Supported only for PayPal payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SaleProtectionEligibility",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "protection_eligibility_type": {
          "description": "The merchant protection type in effect for the transaction. Returned only when `protection_eligibility` is `ELIGIBLE` or `PARTIALLY_ELIGIBLE`. Supported only for PayPal payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SaleProtectionEligibilityType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reason_code": {
          "description": "A reason code that describes why the transaction state is pending or reversed. Supported only for PayPal payments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SaleReasonCode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "receipt_id": {
          "description": "The receipt ID, which is a payment ID number that is returned for guest users to identify the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}$"
          }
        },
        "receivable_amount": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "state": {
          "description": "The state of the sale transaction.",
          "type": {
            "name": "SaleState",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "transaction_fee": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "transaction_fee_in_receivable_currency": {
          "description": "The currency and amount for a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "update_time": {
          "description": "The date and time when the resource was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      },
      "alias": "sale"
    },
    "ShippingAddress": {
      "description": "The shipping address details.",
      "fields": {
        "city": {
          "description": "The city name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 64
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "line1": {
          "description": "The first line of the address. For example, number, street, and so on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "line2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "normalization_status": {
          "description": "The address normalization status. Returned only for payers from Brazil.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressNormalizationStatus",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "phone": {
          "description": "The phone number, in [E.123 format](https://www.itu.int/rec/T-REC-E.123-200102-I/en). Maximum length is 50 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone"
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "recipient_name": {
          "description": "The name of the recipient at this address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "state": {
          "description": "The [code](/docs/integration/direct/rest/state-codes/) for a US state or the equivalent for other countries. Required for transactions if the address is in one of these countries: [Argentina](/docs/integration/direct/rest/state-codes/#argentina), [Brazil](/docs/integration/direct/rest/state-codes/#brazil), [Canada](/docs/integration/direct/rest/state-codes/#canada), [China](/docs/integration/direct/rest/state-codes/#china), [India](/docs/integration/direct/rest/state-codes/#india), [Italy](/docs/integration/direct/rest/state-codes/#italy), [Japan](/docs/integration/direct/rest/state-codes/#japan), [Mexico](/docs/integration/direct/rest/state-codes/#mexico), [Thailand](/docs/integration/direct/rest/state-codes/#thailand), or [United States](/docs/integration/direct/rest/state-codes/#usa).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "type": {
          "description": "The type of address. For example, `HOME_OR_WORK`, `GIFT`, and so on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ShippingAddressInput": {
      "description": "The shipping address details.",
      "fields": {
        "city": {
          "description": "The city name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 64
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "line1": {
          "description": "The first line of the address. For example, number, street, and so on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "line2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "phone": {
          "description": "The phone number, in [E.123 format](https://www.itu.int/rec/T-REC-E.123-200102-I/en). Maximum length is 50 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "phone"
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "recipient_name": {
          "description": "The name of the recipient at this address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "state": {
          "description": "The [code](/docs/integration/direct/rest/state-codes/) for a US state or the equivalent for other countries. Required for transactions if the address is in one of these countries: [Argentina](/docs/integration/direct/rest/state-codes/#argentina), [Brazil](/docs/integration/direct/rest/state-codes/#brazil), [Canada](/docs/integration/direct/rest/state-codes/#canada), [China](/docs/integration/direct/rest/state-codes/#china), [India](/docs/integration/direct/rest/state-codes/#india), [Italy](/docs/integration/direct/rest/state-codes/#italy), [Japan](/docs/integration/direct/rest/state-codes/#japan), [Mexico](/docs/integration/direct/rest/state-codes/#mexico), [Thailand](/docs/integration/direct/rest/state-codes/#thailand), or [United States](/docs/integration/direct/rest/state-codes/#usa).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "type": {
          "description": "The type of address. For example, `HOME_OR_WORK`, `GIFT`, and so on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "Token": {
      "description": "The tokenized payment source to fund a payment.",
      "fields": {
        "id": {
          "description": "The PayPal-generated ID for the token.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255,
            "minLength": 1
          }
        },
        "type": {
          "description": "The tokenization method that generated the ID.",
          "type": {
            "name": "TokenType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "token"
    },
    "TokenInput": {
      "description": "The tokenized payment source to fund a payment.",
      "fields": {
        "id": {
          "description": "The PayPal-generated ID for the token.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255,
            "minLength": 1
          }
        },
        "type": {
          "description": "The tokenization method that generated the ID.",
          "type": {
            "name": "TokenType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "token"
    },
    "Transaction": {
      "description": "An array of payment-related transactions. A transaction defines what the payment is for and who fulfills the payment.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Amount",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom": {
          "description": "The free-form field for the client's use.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "description": {
          "description": "The purchase description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "invoice_number": {
          "description": "The invoice number to track this payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "item_list": {
          "description": "An array of items that are being purchased.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionItemList",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "note_to_payee": {
          "description": "The note to the recipient of the funds in this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255
          }
        },
        "notify_url": {
          "description": "The URL to send payment notifications.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 2048
          }
        },
        "payee": {
          "description": "The payee who receives the funds and fulfills the order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Payee",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payment_options": {
          "description": "The payment options for this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionPaymentOptions",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "related_resources": {
          "description": "An array of payment-related transactions. A transaction defines what the payment is for and who fulfills the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "RelatedResources",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "soft_descriptor": {
          "description": "The soft descriptor to use to charge this funding source. If greater than the maximum allowed length, the API truncates the string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 22
          }
        }
      },
      "alias": "transaction"
    },
    "TransactionInput": {
      "description": "An array of payment-related transactions. A transaction defines what the payment is for and who fulfills the payment.",
      "fields": {
        "amount": {
          "description": "The payment amount, with details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AmountInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom": {
          "description": "The free-form field for the client's use.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "description": {
          "description": "The purchase description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "invoice_number": {
          "description": "The invoice number to track this payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "item_list": {
          "description": "An array of items that are being purchased.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionItemListInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "note_to_payee": {
          "description": "The note to the recipient of the funds in this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255
          }
        },
        "notify_url": {
          "description": "The URL to send payment notifications.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 2048
          }
        },
        "payee": {
          "description": "The payee who receives the funds and fulfills the order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayeeInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payment_options": {
          "description": "The payment options for this transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionPaymentOptionsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "soft_descriptor": {
          "description": "The soft descriptor to use to charge this funding source. If greater than the maximum allowed length, the API truncates the string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 22
          }
        }
      },
      "alias": "transaction"
    },
    "TransactionItemList": {
      "description": "An array of items that are being purchased.",
      "fields": {
        "items": {
          "description": "An array of items that are being purchased.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Item",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "shipping_address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShippingAddress",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "shipping_method": {
          "description": "The shipping method used for this payment, such as USPS Parcel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "shipping_phone_number": {
          "description": "The shipping phone number, in its canonical international format as defined by the [E.164](https://en.wikipedia.org/wiki/E.164) numbering plan. Enables merchants to share payers contact number with PayPal for the current payment. The final contact number for the payer who is associated with the transaction might be the same as or different from the `shipping_phone_number` based on the payers action on PayPal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TransactionItemListInput": {
      "description": "An array of items that are being purchased.",
      "fields": {
        "items": {
          "description": "An array of items that are being purchased.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ItemInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "shipping_address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShippingAddressInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "shipping_method": {
          "description": "The shipping method used for this payment, such as USPS Parcel.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "shipping_phone_number": {
          "description": "The shipping phone number, in its canonical international format as defined by the [E.164](https://en.wikipedia.org/wiki/E.164) numbering plan. Enables merchants to share payers contact number with PayPal for the current payment. The final contact number for the payer who is associated with the transaction might be the same as or different from the `shipping_phone_number` based on the payers action on PayPal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TransactionPaymentOptions": {
      "description": "The payment options for this transaction.",
      "fields": {
        "allowed_payment_method": {
          "description": "The payment method for this transaction. This field does not apply to the credit card payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionPaymentOptionsAllowedPaymentMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TransactionPaymentOptionsInput": {
      "description": "The payment options for this transaction.",
      "fields": {
        "allowed_payment_method": {
          "description": "The payment method for this transaction. This field does not apply to the credit card payment method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionPaymentOptionsAllowedPaymentMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    }
  },
  "procedures": {
    "authorization_capture": {
      "request": {
        "url": "/v1/payments/authorization/{authorization_id}/capture",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "authorization_id": {
          "description": "The ID of the authorization to re-authorize.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "authorization_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "The capture transaction details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CaptureInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Capture authorization",
      "result_type": {
        "name": "Capture",
        "type": "named"
      }
    },
    "authorization_reauthorize": {
      "request": {
        "url": "/v1/payments/authorization/{authorization_id}/reauthorize",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "authorization_id": {
          "description": "The ID of the authorization to re-authorize.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "authorization_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "The authorization details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuthorizationInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Re-authorize payment",
      "result_type": {
        "name": "Authorization",
        "type": "named"
      }
    },
    "authorization_void": {
      "request": {
        "url": "/v1/payments/authorization/{authorization_id}/void",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Request-Id": {
          "description": "The server stores keys for 30 days.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Request-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 78
            }
          }
        },
        "authorization_id": {
          "description": "The ID of the authorization to re-authorize.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "authorization_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Void authorization",
      "result_type": {
        "name": "Authorization",
        "type": "named"
      }
    },
    "capture_refund": {
      "request": {
        "url": "/v1/payments/capture/{capture_id}/refund",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/refund"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/unilateralrefund"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Request-Id": {
          "description": "The server stores keys for 30 days.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Request-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 78
            }
          }
        },
        "body": {
          "description": "The refund request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RefundRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "capture_id": {
          "description": "The ID of the captured payment to refund.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "capture_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Refund captured payment",
      "result_type": {
        "name": "DetailedRefund",
        "type": "named"
      }
    },
    "orders_authorize": {
      "request": {
        "url": "/v1/payments/orders/{order_id}/authorize",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "The order transaction details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "order_id": {
          "description": "The ID of the order to authorize.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "order_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Authorize order",
      "result_type": {
        "name": "Authorization",
        "type": "named"
      }
    },
    "orders_capture": {
      "request": {
        "url": "/v1/payments/orders/{order_id}/capture",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "The capture transaction details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CaptureInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "order_id": {
          "description": "The ID of the order to authorize.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "order_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Capture order",
      "result_type": {
        "name": "Capture",
        "type": "named"
      }
    },
    "orders_void": {
      "request": {
        "url": "/v1/payments/orders/{order_id}/do-void",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment/authcapture"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Request-Id": {
          "description": "The server stores keys for 30 days.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Request-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 78
            }
          }
        },
        "order_id": {
          "description": "The ID of the order to authorize.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "order_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Void order",
      "result_type": {
        "name": "Order",
        "type": "named"
      }
    },
    "payment_create": {
      "request": {
        "url": "/v1/payments/payment",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/realtimepayment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/paymentcard"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/channelpartner"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Partner-Attribution-Id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Partner-Attribution-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 32
            }
          }
        },
        "body": {
          "description": "The payment details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create payment",
      "result_type": {
        "name": "Payment",
        "type": "named"
      }
    },
    "payment_execute": {
      "request": {
        "url": "/v1/payments/payment/{payment_id}/execute",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/realtimepayment"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Partner-Attribution-Id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Partner-Attribution-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 32
            }
          }
        },
        "PayPal-Request-Id": {
          "description": "The server stores keys for 30 days.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Request-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 78
            }
          }
        },
        "body": {
          "description": "Executes a PayPal account-based payment with the `payer_id` obtained from the web approval URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentExecutionInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "payment_id": {
          "description": "The ID of the payment to execute.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "payment_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Execute approved PayPal payment",
      "result_type": {
        "name": "Payment",
        "type": "named"
      }
    },
    "payment_update": {
      "request": {
        "url": "/v1/payments/payment/{payment_id}",
        "method": "patch",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/realtimepayment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/channelpartner"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "An array of JSON patch objects to apply partial updates to resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PatchInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ]
              }
            }
          }
        },
        "payment_id": {
          "description": "The ID of the payment to execute.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "payment_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Partially update payment",
      "result_type": {
        "name": "Payment",
        "type": "named"
      }
    },
    "sale_refund": {
      "request": {
        "url": "/v1/payments/sale/{sale_id}/refund",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://api.paypal.com/v1/payments/.*"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/refund"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/unilateralrefund"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Request-Id": {
          "description": "The server stores keys for 30 days.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Request-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 78
            }
          }
        },
        "body": {
          "description": "The refund request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RefundRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "sale_id": {
          "description": "The ID of the sale transaction to refund.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "sale_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Refund sale",
      "result_type": {
        "name": "DetailedRefund",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "AddressNormalizationStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "UNKNOWN",
          "UNNORMALIZED_USER_PREFERRED",
          "NORMALIZED",
          "UNNORMALIZED"
        ],
        "type": "enum"
      }
    },
    "ApplicationContextShippingPreference": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "NO_SHIPPING",
          "GET_FROM_FILE",
          "SET_PROVIDED_ADDRESS"
        ],
        "type": "enum"
      }
    },
    "AuthorizationPaymentMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "INSTANT_TRANSFER"
        ],
        "type": "enum"
      }
    },
    "AuthorizationPendingReason": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "AUTHORIZATION"
        ],
        "type": "enum"
      }
    },
    "AuthorizationProtectionEligibility": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ELIGIBLE",
          "PARTIALLY_ELIGIBLE",
          "INELIGIBLE"
        ],
        "type": "enum"
      }
    },
    "AuthorizationProtectionEligibilityType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ITEM_NOT_RECEIVED_ELIGIBLE",
          "UNAUTHORIZED_PAYMENT_ELIGIBLE",
          "ITEM_NOT_RECEIVED_ELIGIBLE,UNAUTHORIZED_PAYMENT_ELIGIBLE"
        ],
        "type": "enum"
      }
    },
    "AuthorizationReasonCode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "AUTHORIZATION"
        ],
        "type": "enum"
      }
    },
    "AuthorizationState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "pending",
          "authorized",
          "partially_captured",
          "captured",
          "expired",
          "denied",
          "voided"
        ],
        "type": "enum"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "CaptureReasonCode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CHARGEBACK",
          "GUARANTEE",
          "BUYER_COMPLAINT",
          "REFUND",
          "UNCONFIRMED_SHIPPING_ADDRESS",
          "ECHECK",
          "INTERNATIONAL_WITHDRAWAL",
          "RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION",
          "PAYMENT_REVIEW",
          "REGULATORY_REVIEW",
          "UNILATERAL",
          "VERIFICATION_REQUIRED",
          "TRANSACTION_APPROVED_AWAITING_FUNDING",
          "NONE"
        ],
        "type": "enum"
      }
    },
    "CaptureState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "pending",
          "completed",
          "refunded",
          "partially_refunded",
          "denied"
        ],
        "type": "enum"
      }
    },
    "CartBasePaymentOptionsAllowedPaymentMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "UNRESTRICTED",
          "INSTANT_FUNDING_SOURCE",
          "IMMEDIATE_PAY"
        ],
        "type": "enum"
      }
    },
    "FmfDetailsFilterId": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "AVS_NO_MATCH",
          "AVS_PARTIAL_MATCH",
          "AVS_UNAVAILABLE_OR_UNSUPPORTED",
          "CARD_SECURITY_CODE_MISMATCH",
          "MAXIMUM_TRANSACTION_AMOUNT",
          "UNCONFIRMED_ADDRESS",
          "COUNTRY_MONITOR",
          "LARGE_ORDER_NUMBER",
          "BILLING_OR_SHIPPING_ADDRESS_MISMATCH",
          "RISKY_ZIP_CODE",
          "SUSPECTED_FREIGHT_FORWARDER_CHECK",
          "TOTAL_PURCHASE_PRICE_MINIMUM",
          "IP_ADDRESS_VELOCITY",
          "RISKY_EMAIL_ADDRESS_DOMAIN_CHECK",
          "RISKY_BANK_IDENTIFICATION_NUMBER_CHECK",
          "RISKY_IP_ADDRESS_RANGE",
          "PAYPAL_FRAUD_MODEL"
        ],
        "type": "enum"
      }
    },
    "FmfDetailsFilterType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ACCEPT",
          "PENDING",
          "DENY",
          "REPORT"
        ],
        "type": "enum"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "LinkDescriptionMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "HEAD",
          "CONNECT",
          "OPTIONS",
          "PATCH"
        ],
        "type": "enum"
      }
    },
    "OrderPaymentMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "INSTANT_TRANSFER",
          "MANUAL_BANK_TRANSFER",
          "DELAYED_TRANSFER",
          "ECHECK"
        ],
        "type": "enum"
      }
    },
    "OrderPendingReason": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "payer_shipping_unconfirmed",
          "multi_currency",
          "risk_review",
          "regulatory_review",
          "verification_required",
          "order",
          "other"
        ],
        "type": "enum"
      }
    },
    "OrderProtectionEligibility": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ELIGIBLE",
          "PARTIALLY_ELIGIBLE",
          "INELIGIBLE"
        ],
        "type": "enum"
      }
    },
    "OrderProtectionEligibilityType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ITEM_NOT_RECEIVED_ELIGIBLE",
          "UNAUTHORIZED_PAYMENT_ELIGIBLE",
          "ITEM_NOT_RECEIVED_ELIGIBLE,UNAUTHORIZED_PAYMENT_ELIGIBLE"
        ],
        "type": "enum"
      }
    },
    "OrderReasonCode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PAYER_SHIPPING_UNCONFIRMED",
          "MULTI_CURRENCY",
          "RISK_REVIEW",
          "REGULATORY_REVIEW",
          "VERIFICATION_REQUIRED",
          "ORDER",
          "OTHER"
        ],
        "type": "enum"
      }
    },
    "OrderState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PENDING",
          "AUTHORIZED",
          "CAPTURED",
          "COMPLETED",
          "VOIDED"
        ],
        "type": "enum"
      }
    },
    "PatchOp": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "add",
          "remove",
          "replace",
          "move",
          "copy",
          "test"
        ],
        "type": "enum"
      }
    },
    "PayerInfoTaxIdType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BR_CPF",
          "BR_CNPJ"
        ],
        "type": "enum"
      }
    },
    "PayerPaymentMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "credit_card",
          "paypal",
          "pay_upon_invoice",
          "carrier",
          "alternate_payment",
          "bank"
        ],
        "type": "enum"
      }
    },
    "PayerStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "VERIFIED",
          "UNVERIFIED"
        ],
        "type": "enum"
      }
    },
    "PaymentFailureReason": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "UNABLE_TO_COMPLETE_TRANSACTION",
          "INVALID_PAYMENT_METHOD",
          "PAYER_CANNOT_PAY",
          "CANNOT_PAY_THIS_PAYEE",
          "REDIRECT_REQUIRED",
          "PAYEE_FILTER_RESTRICTIONS"
        ],
        "type": "enum"
      }
    },
    "PaymentHoldReasonPaymentHoldReason": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PAYMENT_HOLD",
          "SHIPPING_RISK_HOLD"
        ],
        "type": "enum"
      }
    },
    "PaymentIntent": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "sale",
          "authorize",
          "order"
        ],
        "type": "enum"
      }
    },
    "PaymentListSortBy": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "create_time"
        ],
        "type": "enum"
      }
    },
    "PaymentListSortOrder": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "desc"
        ],
        "type": "enum"
      }
    },
    "PaymentPattern": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CUSTOMER_PRESENT_ONETIME_PURCHASE",
          "CUSTOMER_NOT_PRESENT_RECURRING",
          "CUSTOMER_PRESENT_RECURRING_FIRST",
          "CUSTOMER_PRESENT_ONETIME_PURCHASE_VAULTED",
          "CUSTOMER_NOT_PRESENT_ONETIME_PURCHASE_VAULTED",
          "MAIL_ORDER_TELEPHONE_ORDER"
        ],
        "type": "enum"
      }
    },
    "PaymentState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created",
          "approved",
          "failed",
          "partially_completed",
          "in_progress"
        ],
        "type": "enum"
      }
    },
    "ProcessorResponseAdviceCode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "01_NEW_ACCOUNT_INFORMATION",
          "02_TRY_AGAIN_LATER",
          "02_STOP_SPECIFIC_PAYMENT",
          "03_DO_NOT_TRY_AGAIN",
          "03_REVOKE_AUTHORIZATION_FOR_FUTURE_PAYMENT",
          "21_DO_NOT_TRY_AGAIN_CARD_HOLDER_CANCELLED_RECURRRING_CHARGE",
          "21_CANCEL_ALL_RECURRING_PAYMENTS"
        ],
        "type": "enum"
      }
    },
    "Refund2State": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "pending",
          "completed",
          "cancelled",
          "failed"
        ],
        "type": "enum"
      }
    },
    "RefundState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "pending",
          "completed",
          "cancelled",
          "failed"
        ],
        "type": "enum"
      }
    },
    "SalePaymentHoldStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "HELD"
        ],
        "type": "enum"
      }
    },
    "SalePaymentMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "INSTANT_TRANSFER",
          "MANUAL_BANK_TRANSFER",
          "DELAYED_TRANSFER",
          "ECHECK"
        ],
        "type": "enum"
      }
    },
    "SaleProtectionEligibility": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ELIGIBLE",
          "PARTIALLY_ELIGIBLE",
          "INELIGIBLE"
        ],
        "type": "enum"
      }
    },
    "SaleProtectionEligibilityType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ITEM_NOT_RECEIVED_ELIGIBLE",
          "UNAUTHORIZED_PAYMENT_ELIGIBLE",
          "ITEM_NOT_RECEIVED_ELIGIBLE,UNAUTHORIZED_PAYMENT_ELIGIBLE"
        ],
        "type": "enum"
      }
    },
    "SaleReasonCode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CHARGEBACK",
          "GUARANTEE",
          "BUYER_COMPLAINT",
          "REFUND",
          "UNCONFIRMED_SHIPPING_ADDRESS",
          "ECHECK",
          "INTERNATIONAL_WITHDRAWAL",
          "RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION",
          "PAYMENT_REVIEW",
          "REGULATORY_REVIEW",
          "UNILATERAL",
          "VERIFICATION_REQUIRED",
          "TRANSACTION_APPROVED_AWAITING_FUNDING"
        ],
        "type": "enum"
      }
    },
    "SaleState": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "completed",
          "partially_refunded",
          "pending",
          "refunded",
          "denied"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "TokenType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BILLING_AGREEMENT"
        ],
        "type": "enum"
      }
    },
    "TransactionPaymentOptionsAllowedPaymentMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "UNRESTRICTED",
          "INSTANT_FUNDING_SOURCE",
          "IMMEDIATE_PAY"
        ],
        "type": "enum"
      }
    },
    "URIString": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
