{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api-m.paypal.com",
          "env": "PAYPAL_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "Oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": {
              "value": "/v1/oauth2/token",
              "env": "PAYPAL_OAUTH2_TOKEN_URL"
            },
            "scopes": {
              "https://uri.paypal.com/services/payments/initiatepayment": "Initiates payments and checkout workflows.",
              "https://uri.paypal.com/services/payments/orders/client-side-integration": "Allows client-side integration on Create, Get, Patch, Authorize \u0026 Capture Order endpoints.",
              "https://uri.paypal.com/services/payments/payment": "Manage payments and checkout workflow.",
              "https://uri.paypal.com/services/payments/payment/reference-transaction": "Permission to initiate reference transaction"
            },
            "clientId": {
              "env": "PAYPAL_OAUTH2_CLIENT_ID"
            },
            "clientSecret": {
              "env": "PAYPAL_OAUTH2_CLIENT_SECRET"
            }
          }
        }
      }
    },
    "version": "2.13"
  },
  "functions": {
    "orders_get": {
      "request": {
        "url": "/v2/checkout/orders/{id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment",
              "https://uri.paypal.com/services/payments/orders/client-side-integration"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "fields": {
          "description": "A comma-separated list of fields that should be returned for the order. Valid filter field is `payment_source`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[a-z_]*$"
            }
          }
        },
        "id": {
          "description": "The ID of the order that the tracking information is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9]+$",
              "maxLength": 36,
              "minLength": 1
            }
          }
        }
      },
      "description": "Show order details",
      "result_type": {
        "name": "ActivityTimestamps",
        "type": "named"
      }
    }
  },
  "object_types": {
    "ActivityTimestamps": {
      "description": "The date and time stamps that are common to authorized payment, captured payment, and refund transactions.",
      "fields": {
        "create_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20,
            "xml": {
              "name": "date_time"
            }
          }
        },
        "update_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20,
            "xml": {
              "name": "date_time"
            }
          }
        }
      }
    },
    "AddressPortable2AddressDetailsInput": {
      "description": "The non-portable additional address details include fine-grain address information for Compliance, Risk, and other scenarios. This isn't portable with common third-party and open source applications. This can include data that is redundant with core fields. For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
      "fields": {
        "building_name": {
          "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, Craven House.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "delivery_service": {
          "description": "The delivery service. Post office box, bag number, or post office name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_name": {
          "description": "The street name. Just `Drury` in `Drury Lane`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_number": {
          "description": "The street number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_type": {
          "description": "The street type. For example, avenue, boulevard, road, or expressway.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "sub_building": {
          "description": "The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "AddressPortable2Input": {
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details include fine-grain address information for Compliance, Risk, and other scenarios. This isn't portable with common third-party and open source applications. This can include data that is redundant with core fields. For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortable2AddressDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address, such as number and street, for example, `173 Drury Lane`. Needed for data entry, and Compliance and Risk checks. This field needs to pass the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address, for example, a suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. Examples include a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest-level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. This data is formatted for postal delivery, for example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A *kanton*.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "The sub-locality, suburb, neighborhood, or district. This is smaller than `admin_area_level_2`. Value is:Brazil. Suburb, *bairro*, or neighborhood.India. Sub-locality or district. Street name information isn't always available, but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. This is smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code that is used in Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [2-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code-2"
            }
          }
        },
        "postal_code": {
          "description": "The postal code, which is the ZIP code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        }
      }
    },
    "AddressPortableAddressDetailsInput": {
      "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
      "fields": {
        "building_name": {
          "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, Craven House.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "delivery_service": {
          "description": "The delivery service. Post office box, bag number, or post office name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_name": {
          "description": "The street name. Just `Drury` in `Drury Lane`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_number": {
          "description": "The street number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_type": {
          "description": "The street type. For example, avenue, boulevard, road, or expressway.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "sub_building": {
          "description": "The first-order entity below a named building or location that represents the sub-premises. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "AddressPortableInput": {
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableAddressDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A kanton.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:Brazil. Suburb, bairro, or neighborhood.India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code for Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        }
      }
    },
    "ApplePayDecryptedTokenDataInput": {
      "description": "Information about the Payment data obtained by decrypting Apple Pay token.",
      "fields": {
        "device_manufacturer_id": {
          "description": "Apple Pay Hex-encoded device manufacturer identifier. The pattern is defined by an external party and supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "payment_data": {
          "description": "Information about the decrypted apple pay payment data for the token like cryptogram, eci indicator.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplePayPaymentDataInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "apple_pay_payment_data"
            }
          }
        },
        "payment_data_type": {
          "description": "Indicates the type of payment data passed, in case of Non China the payment data is 3DSECURE and for China it is EMV.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplePayDecryptedTokenDataPaymentDataType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 16,
            "minLength": 1
          }
        },
        "tokenized_card": {
          "description": "The payment card to use to fund a payment. Can be a credit or debit card.",
          "type": {
            "name": "CardInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "card"
            }
          }
        },
        "transaction_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money2Input",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money-2"
            }
          }
        }
      }
    },
    "ApplePayPaymentDataInput": {
      "description": "Information about the decrypted apple pay payment data for the token like cryptogram, eci indicator.",
      "fields": {
        "cryptogram": {
          "description": "Online payment cryptogram, as defined by 3D Secure. The pattern is defined by an external party and supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "eci_indicator": {
          "description": "ECI indicator, as defined by 3- Secure. The pattern is defined by an external party and supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 256,
            "minLength": 1
          }
        },
        "emv_data": {
          "description": "Encoded Apple Pay EMV Payment Structure used for payments in China. The pattern is defined by an external party and supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "pin": {
          "description": "Bank Key encrypted Apple Pay PIN. The pattern is defined by an external party and supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 2000,
            "minLength": 1
          }
        }
      }
    },
    "ApplePayRequestInput": {
      "description": "Information needed to pay using ApplePay.",
      "fields": {
        "attributes": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplePayAttributes",
              "type": "named"
            }
          },
          "http": {
            "xml": {
              "name": "apple_pay_attributes"
            }
          }
        },
        "decrypted_token": {
          "description": "Information about the Payment data obtained by decrypting Apple Pay token.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplePayDecryptedTokenDataInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "apple_pay_decrypted_token_data"
            }
          }
        },
        "email_address": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_email_address_v2",
            "pattern": "^(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$",
            "maxLength": 254,
            "minLength": 3,
            "xml": {
              "name": "email_address"
            }
          }
        },
        "id": {
          "description": "ApplePay transaction identifier, this will be the unique identifier for this transaction provided by Apple. The pattern is defined by an external party and supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 250,
            "minLength": 1
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        },
        "phone_number": {
          "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PhoneInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "phone"
            }
          }
        },
        "stored_credential": {
          "description": "Provides additional details to process a payment using a `card` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).Parameter compatibility:`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardStoredCredentialInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "card_stored_credential"
            }
          }
        },
        "vault_id": {
          "description": "The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9a-zA-Z_-]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "vault_id"
            }
          }
        }
      }
    },
    "BancontactRequestInput": {
      "description": "Information needed to pay using Bancontact.",
      "fields": {
        "attributes": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AltpayRecurringAttributesRequest",
              "type": "named"
            }
          },
          "http": {
            "xml": {
              "name": "altpay_recurring_attributes_request"
            }
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "experience_context_base"
            }
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        }
      }
    },
    "BlikOneClickInput": {
      "description": "Information used to pay using BLIK one-click flow.",
      "fields": {
        "alias_key": {
          "description": "A Blik-defined identifier for a specific Blik-enabled bank account that is associated with a given merchant. Used only in conjunction with a Consumer Reference.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]+$",
            "maxLength": 19,
            "minLength": 1
          }
        },
        "alias_label": {
          "description": "A bank defined identifier used as a display name to allow the payer to differentiate between multiple registered bank accounts.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[ -~]{8,35}$",
            "maxLength": 35,
            "minLength": 8
          }
        },
        "auth_code": {
          "description": "The 6-digit code used to authenticate a consumer within BLIK.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{6}$",
            "maxLength": 6,
            "minLength": 6
          }
        },
        "consumer_reference": {
          "description": "The merchant generated, unique reference serving as a primary identifier for accounts connected between Blik and a merchant.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[ -~]{3,64}$",
            "maxLength": 64,
            "minLength": 3
          }
        }
      }
    },
    "BlikRequestInput": {
      "description": "Information needed to pay using BLIK.",
      "fields": {
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "email": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_email_address_v2",
            "pattern": "^(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$",
            "maxLength": 254,
            "minLength": 3,
            "xml": {
              "name": "email_address"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "experience_context_base"
            }
          }
        },
        "level_0": {
          "description": "Information used to pay using BLIK level_0 flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BlikSeamlessInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "blik_seamless"
            }
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        },
        "one_click": {
          "description": "Information used to pay using BLIK one-click flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BlikOneClickInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "blik_one_click"
            }
          }
        }
      }
    },
    "BlikSeamlessInput": {
      "description": "Information used to pay using BLIK level_0 flow.",
      "fields": {
        "auth_code": {
          "description": "The 6-digit code used to authenticate a consumer within BLIK.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{6}$",
            "maxLength": 6,
            "minLength": 6
          }
        }
      }
    },
    "CardAttributesInput": {
      "description": "Additional attributes associated with the use of this card.",
      "fields": {
        "customer": {
          "description": "The details about a customer in PayPal's system of record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomerInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "customer"
            }
          }
        },
        "vault": {
          "description": "Basic vault instruction specification that can be extended by specific payment sources that supports vaulting.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "VaultInstructionBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "vault_instruction_base"
            }
          }
        }
      }
    },
    "CardInput": {
      "description": "The payment card to use to fund a payment. Can be a credit or debit card.",
      "fields": {
        "attributes": {
          "description": "Additional attributes associated with the use of this card.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardAttributesInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "card_attributes"
            }
          }
        },
        "billing_address": {
          "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "address_portable"
            }
          }
        },
        "brand": {
          "description": "The card network or brand. Applies to credit, debit, gift, and payment cards.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardBrand",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "card_brand"
            }
          }
        },
        "card_type": {
          "description": "The card network or brand. Applies to credit, debit, gift, and payment cards.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardBrand",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "card_brand"
            }
          }
        },
        "expiry": {
          "description": "The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])$",
            "maxLength": 7,
            "minLength": 7,
            "xml": {
              "name": "date_year_month"
            }
          }
        },
        "id": {
          "description": "The identifier of the instrument.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9-_.+=]+$",
            "maxLength": 256,
            "minLength": 1,
            "xml": {
              "name": "instrument_id"
            }
          }
        },
        "name": {
          "description": "The card holder's name as it appears on the card.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.{1,300}$",
            "maxLength": 300,
            "minLength": 1
          }
        },
        "number": {
          "description": "The primary account number (PAN) for the payment card.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{13,19}$",
            "maxLength": 19,
            "minLength": 13
          }
        },
        "security_code": {
          "description": "The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID. This parameter cannot be present in the request when `payment_initiator=MERCHANT`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{3,4}$",
            "maxLength": 4,
            "minLength": 3
          }
        },
        "type": {
          "description": "Type of card. i.e Credit, Debit and so on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "card_type"
            }
          }
        }
      }
    },
    "CardStoredCredentialInput": {
      "description": "Provides additional details to process a payment using a `card` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).Parameter compatibility:`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</ul>",
      "fields": {
        "payment_initiator": {
          "description": "The person or party who initiated or triggered the payment.",
          "type": {
            "name": "PaymentInitiator",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "payment_initiator"
            }
          }
        },
        "payment_type": {
          "description": "Indicates the type of the stored payment_source payment.",
          "type": {
            "name": "StoredPaymentSourcePaymentType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "stored_payment_source_payment_type"
            }
          }
        },
        "previous_network_transaction_reference": {
          "description": "Reference values used by the card network to identify a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NetworkTransactionReferenceInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "network_transaction_reference"
            }
          }
        },
        "usage": {
          "description": "Indicates if this is a `first` or `subsequent` payment using a stored payment source (also referred to as stored credential or card on file).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoredPaymentSourceUsageType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "stored_payment_source_usage_type"
            }
          }
        }
      }
    },
    "CardSupplementaryDataInput": {
      "description": "Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see checkout or multiparty checkout.",
      "fields": {
        "level_2": {
          "description": "The level 2 card processing data collections. If your merchant account has been configured for Level 2 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 2 data for your business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Level2CardProcessingDataInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "level_2_card_processing_data"
            }
          }
        },
        "level_3": {
          "description": "The level 3 card processing data collections, If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 3 data for your business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Level3CardProcessingDataInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "level_3_card_processing_data"
            }
          }
        }
      }
    },
    "CustomerInput": {
      "description": "The details about a customer in PayPal's system of record.",
      "fields": {
        "email_address": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "merchant_common_email_address_v2",
            "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
            "maxLength": 254,
            "minLength": 3,
            "xml": {
              "name": "email"
            }
          }
        },
        "id": {
          "description": "The unique ID for a customer generated by PayPal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9a-zA-Z_-]+$",
            "maxLength": 22,
            "minLength": 1,
            "xml": {
              "name": "merchant_partner_customer_id"
            }
          }
        },
        "phone": {
          "description": "The phone information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PhoneWithTypeInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "phone_with_type"
            }
          }
        }
      }
    },
    "EpsRequestInput": {
      "description": "Information needed to pay using eps.",
      "fields": {
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "experience_context_base"
            }
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        }
      }
    },
    "ExperienceContextBaseInput": {
      "description": "Customizes the payer experience during the approval process for the payment.",
      "fields": {
        "brand_name": {
          "description": "The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "cancel_url": {
          "description": "Describes the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "xml": {
              "name": "url"
            }
          }
        },
        "locale": {
          "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_language_v3",
            "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}|[0-9]{3}))?$",
            "maxLength": 10,
            "minLength": 2,
            "xml": {
              "name": "language"
            }
          }
        },
        "return_url": {
          "description": "Describes the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "xml": {
              "name": "url"
            }
          }
        },
        "shipping_preference": {
          "description": "The location from which the shipping address is derived.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseShippingPreference",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 24,
            "minLength": 1
          }
        }
      }
    },
    "GiropayRequestInput": {
      "description": "Information needed to pay using giropay.",
      "fields": {
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "experience_context_base"
            }
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        }
      }
    },
    "IdealRequestInput": {
      "description": "Information needed to pay using iDEAL.",
      "fields": {
        "attributes": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AltpayRecurringAttributesRequest",
              "type": "named"
            }
          },
          "http": {
            "xml": {
              "name": "altpay_recurring_attributes_request"
            }
          }
        },
        "bic": {
          "description": "The business identification code (BIC). In payments systems, a BIC is used to identify a specific business, most commonly a bank.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$",
            "maxLength": 11,
            "minLength": 8,
            "xml": {
              "name": "bic"
            }
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "experience_context_base"
            }
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        }
      }
    },
    "ItemInput": {
      "description": "The details for the items to be purchased.",
      "fields": {
        "category": {
          "description": "The item category type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ItemCategory",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 20,
            "minLength": 1
          }
        },
        "description": {
          "description": "The detailed item description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "name": {
          "description": "The item name or title.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127,
            "minLength": 1
          }
        },
        "quantity": {
          "description": "The item quantity. Must be a whole number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[1-9][0-9]{0,9}$",
            "maxLength": 10
          }
        },
        "sku": {
          "description": "The stock keeping unit (SKU) for the item.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "tax": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money"
            }
          }
        },
        "unit_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "name": "MoneyInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money"
            }
          }
        }
      }
    },
    "Level2CardProcessingDataInput": {
      "description": "The level 2 card processing data collections. If your merchant account has been configured for Level 2 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 2 data for your business.",
      "fields": {
        "invoice_id": {
          "description": "Use this field to pass a purchase identification value of up to 12 ASCII characters for AIB and 17 ASCII characters for all other processors.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[\\w\\-.,\":;\\!?]*$",
            "maxLength": 17,
            "minLength": 1
          }
        },
        "tax_total": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money"
            }
          }
        }
      }
    },
    "Level3CardProcessingDataInput": {
      "description": "The level 3 card processing data collections, If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 3 data for your business.",
      "fields": {
        "discount_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money"
            }
          }
        },
        "duty_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money"
            }
          }
        },
        "line_items": {
          "description": "A list of the items that were purchased with this payment. If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ItemInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "item"
              }
            }
          }
        },
        "shipping_address": {
          "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "address_portable"
            }
          }
        },
        "shipping_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money"
            }
          }
        },
        "ships_from_postal_code": {
          "description": "Use this field to specify the postal code of the shipping location.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9_'.-]*$",
            "maxLength": 60,
            "minLength": 1
          }
        }
      }
    },
    "Money2Input": {
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "fields": {
        "currency_code": {
          "description": "The [3-character ISO-4217 currency code](/api/rest/reference/currency-codes/) that identifies the currency.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3,
            "xml": {
              "name": "currency_code-2"
            }
          }
        },
        "value": {
          "description": "The value, which might be:An integer for currencies like `JPY` that are not typically fractional.A decimal fraction for currencies like `TND` that are subdivided into thousandths.For the required number of decimal places for a currency code, see [Currency Codes](/api/rest/reference/currency-codes/).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
            "maxLength": 32
          }
        }
      }
    },
    "MoneyInput": {
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "fields": {
        "currency_code": {
          "description": "The [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) that identifies the currency.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3,
            "xml": {
              "name": "currency_code"
            }
          }
        },
        "value": {
          "description": "The value, which might be:An integer for currencies like `JPY` that are not typically fractional.A decimal fraction for currencies like `TND` that are subdivided into thousandths.For the required number of decimal places for a currency code, see [Currency Codes](/api/rest/reference/currency-codes/).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
            "maxLength": 32
          }
        }
      }
    },
    "MybankRequestInput": {
      "description": "Information needed to pay using MyBank.",
      "fields": {
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "experience_context_base"
            }
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        }
      }
    },
    "Name2Input": {
      "description": "The name of the party.",
      "fields": {
        "full_name": {
          "description": "When the party is a person, the party's full name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "given_name": {
          "description": "When the party is a person, the party's given, or first, name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "middle_name": {
          "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "prefix": {
          "description": "The prefix, or title, to the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "suffix": {
          "description": "The suffix for the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "surname": {
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        }
      }
    },
    "NameInput": {
      "description": "The name of the party.",
      "fields": {
        "alternate_full_name": {
          "description": "DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "full_name": {
          "description": "When the party is a person, the party's full name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "given_name": {
          "description": "When the party is a person, the party's given, or first, name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "middle_name": {
          "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "prefix": {
          "description": "The prefix, or title, to the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "suffix": {
          "description": "The suffix for the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "surname": {
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        }
      }
    },
    "NetworkTransactionReferenceInput": {
      "description": "Reference values used by the card network to identify a transaction.",
      "fields": {
        "acquirer_reference_number": {
          "description": "Reference ID issued for the card transaction. This ID can be used to track the transaction across processors, card brands and issuing banks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9]+$",
            "maxLength": 36,
            "minLength": 1
          }
        },
        "date": {
          "description": "The date that the transaction was authorized by the scheme. This field may not be returned for all networks. MasterCard refers to this field as \"BankNet reference date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]+$",
            "maxLength": 4,
            "minLength": 4
          }
        },
        "id": {
          "description": "Transaction reference id returned by the scheme. For Visa and Amex, this is the \"Tran id\" field in response. For MasterCard, this is the \"BankNet reference id\" field in response. For Discover, this is the \"NRID\" field in response. The pattern we expect for this field from Visa/Amex/CB/Discover is numeric, Mastercard/BNPP is alphanumeric and Paysecure is alphanumeric with special character -.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-_@.:&+=*^'~#!$%()]+$",
            "maxLength": 36,
            "minLength": 9
          }
        },
        "network": {
          "description": "The card network or brand. Applies to credit, debit, gift, and payment cards.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardBrand",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "card_brand"
            }
          }
        }
      }
    },
    "OrderApplicationContextInput": {
      "description": "Customizes the payer experience during the approval process for the payment with PayPal.Note: Partners and Marketplaces might configure brand_name and shipping_preference during partner account setup, which overrides the request values.",
      "fields": {
        "brand_name": {
          "description": "DEPRECATED. The label that overrides the business name in the PayPal account on the PayPal site. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.brand_name`). Please specify this field in the `experience_context` object instead of the `application_context` object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127,
            "minLength": 1
          }
        },
        "cancel_url": {
          "description": "DEPRECATED. The URL where the customer is redirected after the customer cancels the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.cancel_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "landing_page": {
          "description": "DEPRECATED. DEPRECATED. The type of landing page to show on the PayPal site for customer checkout.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.landing_page`). Please specify this field in the `experience_context` object instead of the `application_context` object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderApplicationContextLandingPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 13,
            "minLength": 1
          }
        },
        "locale": {
          "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_language_v3",
            "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}|[0-9]{3}))?$",
            "maxLength": 10,
            "minLength": 2,
            "xml": {
              "name": "language"
            }
          }
        },
        "payment_method": {
          "description": "The customer and merchant payment preferences.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentMethodInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "payment_method"
            }
          }
        },
        "return_url": {
          "description": "DEPRECATED. The URL where the customer is redirected after the customer approves the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.return_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "shipping_preference": {
          "description": "DEPRECATED. DEPRECATED. The shipping preference:Displays the shipping address to the customer.Enables the customer to choose an address on the PayPal site.Restricts the customer from changing the address during the payment-approval process..  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.shipping_preference`). Please specify this field in the `experience_context` object instead of the `application_context` object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderApplicationContextShippingPreference",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "stored_payment_source": {
          "description": "Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).Parameter compatibility:`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoredPaymentSourceInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "stored_payment_source"
            }
          }
        },
        "user_action": {
          "description": "DEPRECATED. Configures a Continue or Pay Now checkout flow.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.user_action`). Please specify this field in the `experience_context` object instead of the `application_context` object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderApplicationContextUserAction",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 8,
            "minLength": 1
          }
        }
      }
    },
    "OrderAuthorizeRequestInput": {
      "description": "The authorization of an order request.",
      "fields": {
        "payment_source": {
          "description": "The payment source definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentSourceInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "payment_source"
            }
          }
        }
      }
    },
    "OrderCaptureRequestInput": {
      "description": "Completes an capture payment for an order.",
      "fields": {
        "payment_source": {
          "description": "The payment source definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentSourceInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "payment_source"
            }
          }
        }
      }
    },
    "OrderRequestInput": {
      "description": "The order request details.",
      "fields": {
        "application_context": {
          "description": "Customizes the payer experience during the approval process for the payment with PayPal.Note: Partners and Marketplaces might configure brand_name and shipping_preference during partner account setup, which overrides the request values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderApplicationContextInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "order_application_context"
            }
          }
        },
        "intent": {
          "description": "The intent to either capture payment immediately or authorize a payment for an order after order creation.",
          "type": {
            "name": "CheckoutPaymentIntent",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "checkout_payment_intent"
            }
          }
        },
        "payer": {
          "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayerBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "payer_base"
            }
          }
        },
        "payment_source": {
          "description": "The payment source definition.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentSourceInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "payment_source"
            }
          }
        },
        "purchase_units": {
          "description": "An array of purchase units. Each purchase unit establishes a contract between a payer and the payee. Each purchase unit represents either a full or partial order that the payer intends to purchase from the payee.",
          "type": {
            "element_type": {
              "name": "PurchaseUnitRequestInput",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "purchase_unit_request"
              }
            }
          }
        }
      }
    },
    "P24RequestInput": {
      "description": "Information needed to pay using P24 (Przelewy24).",
      "fields": {
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "email": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_email_address_v2",
            "pattern": "^(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$",
            "maxLength": 254,
            "minLength": 3,
            "xml": {
              "name": "email_address"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "experience_context_base"
            }
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        }
      }
    },
    "PatchInput": {
      "description": "The JSON patch object to apply partial updates to resources.",
      "fields": {
        "from": {
          "description": "The JSON Pointer to the target document location from which to move the value. Required for the move operation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "op": {
          "description": "The operation.",
          "type": {
            "name": "PatchOp",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "path": {
          "description": "The JSON Pointer to the target document location at which to complete the operation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The value to apply. The remove, copy, and move operations do not require a value. Since JSON Patch allows any type for value, the type property is not specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        }
      }
    },
    "PayeeBaseInput": {
      "description": "The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "fields": {
        "email_address": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "merchant_common_email_address_v2",
            "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
            "maxLength": 254,
            "minLength": 3,
            "xml": {
              "name": "email"
            }
          }
        },
        "merchant_id": {
          "description": "The account identifier for a PayPal account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_payer_id_v3",
            "pattern": "^[2-9A-HJ-NP-Z]{13}$",
            "maxLength": 13,
            "minLength": 13,
            "xml": {
              "name": "account_id"
            }
          }
        }
      }
    },
    "PayerBaseInput": {
      "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
      "fields": {
        "email_address": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "merchant_common_email_address_v2",
            "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
            "maxLength": 254,
            "minLength": 3,
            "xml": {
              "name": "email"
            }
          }
        },
        "payer_id": {
          "description": "The account identifier for a PayPal account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_payer_id_v3",
            "pattern": "^[2-9A-HJ-NP-Z]{13}$",
            "maxLength": 13,
            "minLength": 13,
            "xml": {
              "name": "account_id"
            }
          }
        }
      }
    },
    "PaymentInstructionInput": {
      "description": "Any additional payment instructions to be consider during payment processing. This processing instruction is applicable for Capturing an order or Authorizing an Order.",
      "fields": {
        "disbursement_mode": {
          "description": "The funds that are held on behalf of the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DisbursementMode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 16,
            "minLength": 1,
            "xml": {
              "name": "disbursement_mode"
            }
          }
        },
        "payee_pricing_tier_id": {
          "description": "This field is only enabled for selected merchants/partners to use and provides the ability to trigger a specific pricing rate/plan for a payment transaction. The list of eligible 'payee_pricing_tier_id' would be provided to you by your Account Manager. Specifying values other than the one provided to you by your account manager would result in an error.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "payee_receivable_fx_rate_id": {
          "description": "FX identifier generated returned by PayPal to be used for payment processing in order to honor FX rate (for eligible integrations) to be used when amount is settled/received into the payee account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 4000,
            "minLength": 1
          }
        },
        "platform_fees": {
          "description": "An array of various fees, commissions, tips, or donations. This field is only applicable to merchants that been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PlatformFeeInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "platform_fee"
              }
            }
          }
        }
      }
    },
    "PaymentMethodInput": {
      "description": "The customer and merchant payment preferences.",
      "fields": {
        "payee_preferred": {
          "description": "The merchant-preferred payment methods.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayeePaymentMethodPreference",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "payee_payment_method_preference"
            }
          }
        },
        "standard_entry_class_code": {
          "description": "NACHA (the regulatory body governing the ACH network) requires that API callers (merchants, partners) obtain the consumers explicit authorization before initiating a transaction. To stay compliant, youll need to make sure that you retain a compliant authorization for each transaction that you originate to the ACH Network using this API. ACH transactions are categorized (using SEC codes) by how you capture authorization from the Receiver (the person whose bank account is being debited or credited). PayPal supports the following SEC codes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentMethodStandardEntryClassCode",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255,
            "minLength": 3
          }
        }
      }
    },
    "PaymentSourceInput": {
      "description": "The payment source definition.",
      "fields": {
        "apple_pay": {
          "description": "Information needed to pay using ApplePay.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplePayRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "apple_pay_request"
            }
          }
        },
        "bancontact": {
          "description": "Information needed to pay using Bancontact.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BancontactRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "bancontact_request"
            }
          }
        },
        "blik": {
          "description": "Information needed to pay using BLIK.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BlikRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "blik_request"
            }
          }
        },
        "card": {
          "description": "The payment card to use to fund a payment. Can be a credit or debit card.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "card"
            }
          }
        },
        "eps": {
          "description": "Information needed to pay using eps.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EpsRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "eps_request"
            }
          }
        },
        "giropay": {
          "description": "Information needed to pay using giropay.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GiropayRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "giropay_request"
            }
          }
        },
        "google_pay": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GooglePayRequest",
              "type": "named"
            }
          },
          "http": {
            "xml": {
              "name": "google_pay_request"
            }
          }
        },
        "ideal": {
          "description": "Information needed to pay using iDEAL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdealRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "ideal_request"
            }
          }
        },
        "mybank": {
          "description": "Information needed to pay using MyBank.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MybankRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "mybank_request"
            }
          }
        },
        "p24": {
          "description": "Information needed to pay using P24 (Przelewy24).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "P24RequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "p24_request"
            }
          }
        },
        "paypal": {
          "description": "A resource that identifies a PayPal Wallet is used for payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaypalWalletInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "paypal_wallet"
            }
          }
        },
        "sofort": {
          "description": "Information needed to pay using Sofort.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SofortRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "sofort_request"
            }
          }
        },
        "token": {
          "description": "The tokenized payment source to fund a payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TokenInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "token"
            }
          }
        },
        "trustly": {
          "description": "Information needed to pay using Trustly.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TrustlyRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "trustly_request"
            }
          }
        },
        "venmo": {
          "description": "Information needed to pay using Venmo.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "VenmoWalletRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "venmo_wallet_request"
            }
          }
        }
      }
    },
    "PaypalWalletAttributesInput": {
      "description": "Additional attributes associated with the use of this PayPal Wallet.",
      "fields": {
        "customer": {
          "description": "The details about a customer in PayPal's system of record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomerInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "customer"
            }
          }
        },
        "vault": {
          "description": "Basic vault instruction specification that can be extended by specific payment sources that supports vaulting.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "VaultInstructionBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "vault_instruction_base"
            }
          }
        }
      }
    },
    "PaypalWalletExperienceContextInput": {
      "description": "Customizes the payer experience during the approval process for payment with PayPal.Note: Partners and Marketplaces might configure brand_name and shipping_preference during partner account setup, which overrides the request values.",
      "fields": {
        "brand_name": {
          "description": "The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "cancel_url": {
          "description": "Describes the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "xml": {
              "name": "url"
            }
          }
        },
        "landing_page": {
          "description": "The type of landing page to show on the PayPal site for customer checkout.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaypalWalletExperienceContextLandingPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 13,
            "minLength": 1
          }
        },
        "locale": {
          "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_language_v3",
            "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}|[0-9]{3}))?$",
            "maxLength": 10,
            "minLength": 2,
            "xml": {
              "name": "language"
            }
          }
        },
        "payment_method_preference": {
          "description": "The merchant-preferred payment methods.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaypalWalletExperienceContextPaymentMethodPreference",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "return_url": {
          "description": "Describes the URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "xml": {
              "name": "url"
            }
          }
        },
        "shipping_preference": {
          "description": "The location from which the shipping address is derived.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaypalWalletExperienceContextShippingPreference",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 24,
            "minLength": 1
          }
        },
        "user_action": {
          "description": "Configures a Continue or Pay Now checkout flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaypalWalletExperienceContextUserAction",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 8,
            "minLength": 1
          }
        }
      }
    },
    "PaypalWalletInput": {
      "description": "A resource that identifies a PayPal Wallet is used for payment.",
      "fields": {
        "address": {
          "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortable2Input",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "address_portable-2"
            }
          }
        },
        "attributes": {
          "description": "Additional attributes associated with the use of this PayPal Wallet.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaypalWalletAttributesInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "paypal_wallet_attributes"
            }
          }
        },
        "billing_agreement_id": {
          "description": "The PayPal billing agreement ID. References an approved recurring payment for goods or services.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-]+$",
            "maxLength": 128,
            "minLength": 2,
            "xml": {
              "name": "billing_agreement_id"
            }
          }
        },
        "birth_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10,
            "xml": {
              "name": "date_no_time"
            }
          }
        },
        "email_address": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "merchant_common_email_address_v2",
            "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
            "maxLength": 254,
            "minLength": 3,
            "xml": {
              "name": "email"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for payment with PayPal.Note: Partners and Marketplaces might configure brand_name and shipping_preference during partner account setup, which overrides the request values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaypalWalletExperienceContextInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "paypal_wallet_experience_context"
            }
          }
        },
        "name": {
          "description": "The name of the party.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Name2Input",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "name-2"
            }
          }
        },
        "phone": {
          "description": "The phone information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PhoneWithTypeInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "phone_with_type"
            }
          }
        },
        "tax_info": {
          "description": "The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaxInfoInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "tax_info"
            }
          }
        },
        "vault_id": {
          "description": "The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9a-zA-Z_-]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "vault_id"
            }
          }
        }
      }
    },
    "PhoneInput": {
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "fields": {
        "country_code": {
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,3}?$",
            "maxLength": 3,
            "minLength": 1
          }
        },
        "extension_number": {
          "description": "The extension number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,15}?$",
            "maxLength": 15,
            "minLength": 1
          }
        },
        "national_number": {
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,14}?$",
            "maxLength": 14,
            "minLength": 1
          }
        }
      }
    },
    "PhoneWithTypeInput": {
      "description": "The phone information.",
      "fields": {
        "phone_number": {
          "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
          "type": {
            "name": "PhoneInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "phone"
            }
          }
        },
        "phone_type": {
          "description": "The phone type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PhoneType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "phone_type"
            }
          }
        }
      }
    },
    "PlatformFeeInput": {
      "description": "The platform or partner fee, commission, or brokerage fee that is associated with the transaction. Not a separate or isolated transaction leg from the external perspective. The platform fee is limited in scope and is always associated with the original payment for the purchase unit.",
      "fields": {
        "amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "name": "MoneyInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money"
            }
          }
        },
        "payee": {
          "description": "The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayeeBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "payee_base"
            }
          }
        }
      }
    },
    "PurchaseUnitRequestInput": {
      "description": "The purchase unit request. Includes required information for the payment contract.",
      "fields": {
        "amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "name": "MoneyInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money"
            }
          }
        },
        "custom_id": {
          "description": "The API caller-provided external ID. Used to reconcile client transactions with PayPal transactions. Appears in transaction and settlement reports but is not visible to the payer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127,
            "minLength": 1
          }
        },
        "description": {
          "description": "The purchase description. The maximum length of the character is dependent on the type of characters used. The character length is specified assuming a US ASCII character. Depending on type of character; (e.g. accented character, Japanese characters) the number of characters that that can be specified as input might not equal the permissible max length.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127,
            "minLength": 1
          }
        },
        "invoice_id": {
          "description": "The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127,
            "minLength": 1
          }
        },
        "items": {
          "description": "An array of items that the customer purchases from the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ItemInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "item"
              }
            }
          }
        },
        "payee": {
          "description": "The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayeeBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "payee_base"
            }
          }
        },
        "payment_instruction": {
          "description": "Any additional payment instructions to be consider during payment processing. This processing instruction is applicable for Capturing an order or Authorizing an Order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PaymentInstructionInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "payment_instruction"
            }
          }
        },
        "reference_id": {
          "description": "The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through `PATCH`. If you omit this value and the order contains only one purchase unit, PayPal sets this value to `default`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 256,
            "minLength": 1
          }
        },
        "shipping": {
          "description": "The shipping details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShippingDetailInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "shipping_detail"
            }
          }
        },
        "soft_descriptor": {
          "description": "The soft descriptor is the dynamic text used to construct the statement descriptor that appears on a payer's card statement.If an Order is paid using the \"PayPal Wallet\", the statement descriptor will appear in following format on the payer's card statement: PAYPAL_prefix+(space)+merchant_descriptor+(space)+ soft_descriptorNote: The merchant descriptor is the descriptor of the merchants payment receiving preferences which can be seen by logging into the merchant account https://www.sandbox.paypal.com/businessprofile/settings/info/editThe PAYPAL prefix uses 8 characters. Only the first 22 characters will be displayed in the statement. For example, if:The PayPal prefix toggle is PAYPAL *.The merchant descriptor in the profile is Janes Gift.The soft descriptor is 800-123-1234.Then, the statement descriptor on the card is PAYPAL * Janes Gift 80.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 22,
            "minLength": 1
          }
        },
        "supplementary_data": {
          "description": "Supplementary data about a payment. This object passes information that can be used to improve risk assessments and processing costs, for example, by providing Level 2 and Level 3 payment data.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SupplementaryDataInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "supplementary_data"
            }
          }
        }
      }
    },
    "ShipmentTrackerInput": {
      "description": "The tracking information for a shipment.",
      "fields": {
        "carrier": {
          "description": "The carrier for the shipment. Some carriers have a global version as well as local subsidiaries. The subsidiaries are repeated over many countries and might also have an entry in the global list. Choose the carrier for your country. If the carrier is not available for your country, choose the global version of the carrier. If your carrier name is not in the list, set `carrier` to `OTHER` and set carrier name in `carrier_name_other`. For allowed values, see Carriers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShipmentCarrier",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 64,
            "minLength": 1,
            "xml": {
              "name": "shipment_carrier"
            }
          }
        },
        "carrier_name_other": {
          "description": "The name of the carrier for the shipment. Provide this value only if the carrier parameter is OTHER. This property supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 64,
            "minLength": 1
          }
        },
        "last_updated_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20,
            "xml": {
              "name": "date_time"
            }
          }
        },
        "notify_buyer": {
          "description": "If true, sends an email notification to the buyer of the PayPal transaction. The email contains the tracking information that was uploaded through the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "shipment_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10,
            "xml": {
              "name": "date_no_time"
            }
          }
        },
        "shipment_direction": {
          "description": "To denote whether the shipment is sent forward to the receiver or returned back.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShipmentTrackerShipmentDirection",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 50,
            "minLength": 1
          }
        },
        "status": {
          "description": "The status of the item shipment. For allowed values, see Shipping Statuses.",
          "type": {
            "name": "ShipmentTrackingStatus",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 64,
            "minLength": 1,
            "xml": {
              "name": "shipment_tracking_status"
            }
          }
        },
        "tracking_number": {
          "description": "The tracking number for the shipment. This property supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 64,
            "minLength": 1
          }
        },
        "tracking_number_type": {
          "description": "The tracking number type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShipmentTrackingNumberType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 64,
            "minLength": 1,
            "xml": {
              "name": "shipment_tracking_number_type"
            }
          }
        },
        "transaction_id": {
          "description": "The PayPal transaction ID.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9]*$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      }
    },
    "ShippingDetailInput": {
      "description": "The shipping details.",
      "fields": {
        "address": {
          "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "address_portable"
            }
          }
        },
        "name": {
          "description": "The name of the party.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NameInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "name"
            }
          }
        },
        "options": {
          "description": "An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ShippingOptionInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "shipping_option"
              }
            }
          }
        },
        "type": {
          "description": "A classification for the method of purchase fulfillment (e.g shipping, in-store pickup, etc). Either `type` or `options` may be present, but not both.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShippingDetailType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "ShippingOptionInput": {
      "description": "The options that the payee or merchant offers to the payer to ship or pick up their items.",
      "fields": {
        "amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "money"
            }
          }
        },
        "id": {
          "description": "A unique ID that identifies a payer-selected shipping option.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "label": {
          "description": "A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Expédition prioritaire USPS`, or `USPS yuxin f huò`. Localize this description to the payer's locale.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127
          }
        },
        "selected": {
          "description": "If the API request sets `selected = true`, it represents the shipping option that the payee or merchant expects to be pre-selected for the payer when they first view the `shipping.options` in the PayPal Checkout experience. As part of the response if a `shipping.option` contains `selected=true`, it represents the shipping option that the payer selected during the course of checkout with PayPal. Only one `shipping.option` can be set to `selected=true`.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "type": {
          "description": "A classification for the method of purchase fulfillment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ShippingType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "name": "shipping_type"
            }
          }
        }
      }
    },
    "SofortRequestInput": {
      "description": "Information needed to pay using Sofort.",
      "fields": {
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "experience_context_base"
            }
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        }
      }
    },
    "StoredPaymentSourceInput": {
      "description": "Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).Parameter compatibility:`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</ul>",
      "fields": {
        "payment_initiator": {
          "description": "The person or party who initiated or triggered the payment.",
          "type": {
            "name": "PaymentInitiator",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "payment_initiator"
            }
          }
        },
        "payment_type": {
          "description": "Indicates the type of the stored payment_source payment.",
          "type": {
            "name": "StoredPaymentSourcePaymentType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "stored_payment_source_payment_type"
            }
          }
        },
        "previous_network_transaction_reference": {
          "description": "Reference values used by the card network to identify a transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NetworkTransactionReferenceInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "network_transaction_reference"
            }
          }
        },
        "usage": {
          "description": "Indicates if this is a `first` or `subsequent` payment using a stored payment source (also referred to as stored credential or card on file).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoredPaymentSourceUsageType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "stored_payment_source_usage_type"
            }
          }
        }
      }
    },
    "SupplementaryDataInput": {
      "description": "Supplementary data about a payment. This object passes information that can be used to improve risk assessments and processing costs, for example, by providing Level 2 and Level 3 payment data.",
      "fields": {
        "card": {
          "description": "Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see checkout or multiparty checkout.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CardSupplementaryDataInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "card_supplementary_data"
            }
          }
        }
      }
    },
    "TaxInfoInput": {
      "description": "The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.",
      "fields": {
        "tax_id": {
          "description": "The customer's tax ID value.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "([a-zA-Z0-9])",
            "maxLength": 14,
            "minLength": 1
          }
        },
        "tax_id_type": {
          "description": "The customer's tax ID type.",
          "type": {
            "name": "TaxInfoTaxIdType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z0-9_]+$",
            "maxLength": 14,
            "minLength": 1
          }
        }
      }
    },
    "TokenInput": {
      "description": "The tokenized payment source to fund a payment.",
      "fields": {
        "id": {
          "description": "The PayPal-generated ID for the token.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9a-zA-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "type": {
          "description": "The tokenization method that generated the ID.",
          "type": {
            "name": "TokenType",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "TrustlyRequestInput": {
      "description": "Information needed to pay using Trustly.",
      "fields": {
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2,
            "xml": {
              "name": "country_code"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the payer experience during the approval process for the payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ExperienceContextBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "experience_context_base"
            }
          }
        },
        "name": {
          "description": "The full name representation like Mr J Smith.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "minLength": 3,
            "xml": {
              "name": "full_name"
            }
          }
        }
      }
    },
    "V3VaultInstructionBaseInput": {
      "description": "Base vaulting specification. The object can be extended for specific use cases within each payment_source that supports vaulting.",
      "fields": {
        "store_in_vault": {
          "description": "Defines how and when the payment source gets vaulted.",
          "type": {
            "name": "StoreInVaultInstruction",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "store_in_vault_instruction"
            }
          }
        }
      }
    },
    "VaultInstructionBaseInput": {
      "description": "Basic vault instruction specification that can be extended by specific payment sources that supports vaulting.",
      "fields": {
        "store_in_vault": {
          "description": "Defines how and when the payment source gets vaulted.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoreInVaultInstruction",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "store_in_vault_instruction"
            }
          }
        }
      }
    },
    "VenmoWalletAttributesInput": {
      "description": "Additional attributes associated with the use of this Venmo Wallet.",
      "fields": {
        "customer": {
          "description": "The details about a customer in PayPal's system of record.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomerInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "customer"
            }
          }
        },
        "vault": {
          "description": "Base vaulting specification. The object can be extended for specific use cases within each payment_source that supports vaulting.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "V3VaultInstructionBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "v3_vault_instruction_base"
            }
          }
        }
      }
    },
    "VenmoWalletExperienceContextInput": {
      "description": "Customizes the buyer experience during the approval process for payment with Venmo.Note: Partners and Marketplaces might configure shipping_preference during partner account setup, which overrides the request values.",
      "fields": {
        "brand_name": {
          "description": "The business name of the merchant. The pattern is defined by an external party and supports Unicode.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "shipping_preference": {
          "description": "The location from which the shipping address is derived.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "VenmoWalletExperienceContextShippingPreference",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z_]+$",
            "maxLength": 24,
            "minLength": 1
          }
        }
      }
    },
    "VenmoWalletRequestInput": {
      "description": "Information needed to pay using Venmo.",
      "fields": {
        "attributes": {
          "description": "Additional attributes associated with the use of this Venmo Wallet.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "VenmoWalletAttributesInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "venmo_wallet_attributes"
            }
          }
        },
        "email_address": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "merchant_common_email_address_v2",
            "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
            "maxLength": 254,
            "minLength": 3,
            "xml": {
              "name": "email"
            }
          }
        },
        "experience_context": {
          "description": "Customizes the buyer experience during the approval process for payment with Venmo.Note: Partners and Marketplaces might configure shipping_preference during partner account setup, which overrides the request values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "VenmoWalletExperienceContextInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ],
            "xml": {
              "name": "venmo_wallet_experience_context"
            }
          }
        },
        "vault_id": {
          "description": "The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9a-zA-Z_-]+$",
            "maxLength": 255,
            "minLength": 1,
            "xml": {
              "name": "vault_id"
            }
          }
        }
      }
    }
  },
  "procedures": {
    "orders_authorize": {
      "request": {
        "url": "/v2/checkout/orders/{id}/authorize",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment",
              "https://uri.paypal.com/services/payments/orders/client-side-integration"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Auth-Assertion": {
          "description": "An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see PayPal-Auth-Assertion.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Auth-Assertion",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "PayPal-Client-Metadata-Id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 36,
              "minLength": 1
            }
          }
        },
        "PayPal-Request-Id": {
          "description": "The server stores keys for 6 hours. The API callers can request the times to up to 72 hours by speaking to their Account Manager.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Request-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 108,
              "minLength": 1
            }
          }
        },
        "Prefer": {
          "description": "The preferred server response upon successful completion of the request. Value is:return=minimal. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the id, status and HATEOAS links.return=representation. The server returns a complete resource representation, including the current state of the resource.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[a-zA-Z=]*$",
              "maxLength": 25,
              "minLength": 1
            }
          }
        },
        "body": {
          "description": "The authorization of an order request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderAuthorizeRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "order_authorize_request"
              }
            }
          }
        },
        "id": {
          "description": "The ID of the order that the tracking information is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9]+$",
              "maxLength": 36,
              "minLength": 1
            }
          }
        }
      },
      "description": "Authorize payment for order",
      "result_type": {
        "name": "ActivityTimestamps",
        "type": "named"
      }
    },
    "orders_capture": {
      "request": {
        "url": "/v2/checkout/orders/{id}/capture",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment",
              "https://uri.paypal.com/services/payments/orders/client-side-integration"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Auth-Assertion": {
          "description": "An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see PayPal-Auth-Assertion.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Auth-Assertion",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "PayPal-Client-Metadata-Id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 36,
              "minLength": 1
            }
          }
        },
        "PayPal-Request-Id": {
          "description": "The server stores keys for 6 hours. The API callers can request the times to up to 72 hours by speaking to their Account Manager.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Request-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 108,
              "minLength": 1
            }
          }
        },
        "Prefer": {
          "description": "The preferred server response upon successful completion of the request. Value is:return=minimal. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the id, status and HATEOAS links.return=representation. The server returns a complete resource representation, including the current state of the resource.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[a-zA-Z=]*$",
              "maxLength": 25,
              "minLength": 1
            }
          }
        },
        "body": {
          "description": "Completes an capture payment for an order.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrderCaptureRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "order_capture_request"
              }
            }
          }
        },
        "id": {
          "description": "The ID of the order that the tracking information is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9]+$",
              "maxLength": 36,
              "minLength": 1
            }
          }
        }
      },
      "description": "Capture payment for order",
      "result_type": {
        "name": "ActivityTimestamps",
        "type": "named"
      }
    },
    "orders_confirm": {
      "request": {
        "url": "/v2/checkout/orders/{id}/confirm-payment-source",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment",
              "https://uri.paypal.com/services/payments/initiatepayment"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Client-Metadata-Id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 36,
              "minLength": 1
            }
          }
        },
        "Prefer": {
          "description": "The preferred server response upon successful completion of the request. Value is:return=minimal. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the id, status and HATEOAS links.return=representation. The server returns a complete resource representation, including the current state of the resource.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[a-zA-Z=]*$",
              "maxLength": 25,
              "minLength": 1
            }
          }
        },
        "body": {
          "description": "Payer confirms the intent to pay for the Order using the provided payment source.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ConfirmOrderRequest",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "xml": {
                "name": "confirm_order_request"
              }
            }
          }
        },
        "id": {
          "description": "The ID of the order that the tracking information is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9]+$",
              "maxLength": 36,
              "minLength": 1
            }
          }
        }
      },
      "description": "Confirm the Order",
      "result_type": {
        "name": "ActivityTimestamps",
        "type": "named"
      }
    },
    "orders_create": {
      "request": {
        "url": "/v2/checkout/orders",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment",
              "https://uri.paypal.com/services/payments/orders/client-side-integration"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Client-Metadata-Id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Client-Metadata-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 36,
              "minLength": 1
            }
          }
        },
        "PayPal-Partner-Attribution-Id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Partner-Attribution-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 36,
              "minLength": 1
            }
          }
        },
        "PayPal-Request-Id": {
          "description": "The server stores keys for 6 hours. The API callers can request the times to up to 72 hours by speaking to their Account Manager.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Request-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "maxLength": 108,
              "minLength": 1
            }
          }
        },
        "Prefer": {
          "description": "The preferred server response upon successful completion of the request. Value is:return=minimal. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the id, status and HATEOAS links.return=representation. The server returns a complete resource representation, including the current state of the resource.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[a-zA-Z=]*$",
              "maxLength": 25,
              "minLength": 1
            }
          }
        },
        "body": {
          "description": "The order request details.",
          "type": {
            "name": "OrderRequestInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "order_request"
              }
            }
          }
        }
      },
      "description": "Create order",
      "result_type": {
        "name": "ActivityTimestamps",
        "type": "named"
      }
    },
    "orders_patch": {
      "request": {
        "url": "/v2/checkout/orders/{id}",
        "method": "patch",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment",
              "https://uri.paypal.com/services/payments/orders/client-side-integration"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "An array of JSON patch objects to apply partial updates to resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PatchInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "patch"
                }
              },
              "xml": {
                "name": "patch_request"
              }
            }
          }
        },
        "id": {
          "description": "The ID of the order that the tracking information is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9]+$",
              "maxLength": 36,
              "minLength": 1
            }
          }
        }
      },
      "description": "Update order",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "orders_track_create": {
      "request": {
        "url": "/v2/checkout/orders/{id}/track",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Auth-Assertion": {
          "description": "An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see PayPal-Auth-Assertion.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Auth-Assertion",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "The tracking information for a shipment.",
          "type": {
            "name": "ShipmentTrackerInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "shipment_tracker"
              }
            }
          }
        },
        "id": {
          "description": "The ID of the order that the tracking information is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9]+$",
              "maxLength": 36,
              "minLength": 1
            }
          }
        }
      },
      "description": "Add tracking information for an Order.",
      "result_type": {
        "name": "ActivityTimestamps",
        "type": "named"
      }
    },
    "orders_trackers_patch": {
      "request": {
        "url": "/v2/checkout/orders/{id}/trackers/{tracker_id}",
        "method": "patch",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/payments/payment"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "An array of JSON patch objects to apply partial updates to resources.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PatchInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "patch"
                }
              },
              "xml": {
                "name": "patch_request"
              }
            }
          }
        },
        "id": {
          "description": "The ID of the order that the tracking information is associated with.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9]+$",
              "maxLength": 36,
              "minLength": 1
            }
          }
        },
        "tracker_id": {
          "description": "The order tracking ID.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "tracker_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9]+$",
              "maxLength": 36,
              "minLength": 1
            }
          }
        }
      },
      "description": "Update or cancel tracking information for a PayPal order",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    }
  },
  "scalar_types": {
    "AltpayRecurringAttributesRequest": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ApplePayAttributes": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ApplePayDecryptedTokenDataPaymentDataType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "3DSECURE",
          "EMV"
        ],
        "type": "enum"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "CardBrand": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "VISA",
          "MASTERCARD",
          "DISCOVER",
          "AMEX",
          "SOLO",
          "JCB",
          "STAR",
          "DELTA",
          "SWITCH",
          "MAESTRO",
          "CB_NATIONALE",
          "CONFIGOGA",
          "CONFIDIS",
          "ELECTRON",
          "CETELEM",
          "CHINA_UNION_PAY"
        ],
        "type": "enum"
      }
    },
    "CardType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CREDIT",
          "DEBIT",
          "PREPAID",
          "STORE",
          "UNKNOWN"
        ],
        "type": "enum"
      }
    },
    "CheckoutPaymentIntent": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CAPTURE",
          "AUTHORIZE"
        ],
        "type": "enum"
      }
    },
    "ConfirmOrderRequest": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "DisbursementMode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "INSTANT",
          "DELAYED"
        ],
        "type": "enum"
      }
    },
    "ExperienceContextBaseShippingPreference": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET_FROM_FILE",
          "NO_SHIPPING",
          "SET_PROVIDED_ADDRESS"
        ],
        "type": "enum"
      }
    },
    "GooglePayRequest": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "ItemCategory": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DIGITAL_GOODS",
          "PHYSICAL_GOODS",
          "DONATION"
        ],
        "type": "enum"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "OrderApplicationContextLandingPage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "LOGIN",
          "BILLING",
          "NO_PREFERENCE"
        ],
        "type": "enum"
      }
    },
    "OrderApplicationContextShippingPreference": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET_FROM_FILE",
          "NO_SHIPPING",
          "SET_PROVIDED_ADDRESS"
        ],
        "type": "enum"
      }
    },
    "OrderApplicationContextUserAction": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CONTINUE",
          "PAY_NOW"
        ],
        "type": "enum"
      }
    },
    "PatchOp": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "add",
          "remove",
          "replace",
          "move",
          "copy",
          "test"
        ],
        "type": "enum"
      }
    },
    "PayeePaymentMethodPreference": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "UNRESTRICTED",
          "IMMEDIATE_PAYMENT_REQUIRED"
        ],
        "type": "enum"
      }
    },
    "PaymentInitiator": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CUSTOMER",
          "MERCHANT"
        ],
        "type": "enum"
      }
    },
    "PaymentMethodStandardEntryClassCode": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "TEL",
          "WEB",
          "CCD",
          "PPD"
        ],
        "type": "enum"
      }
    },
    "PaypalWalletExperienceContextLandingPage": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "LOGIN",
          "GUEST_CHECKOUT",
          "NO_PREFERENCE"
        ],
        "type": "enum"
      }
    },
    "PaypalWalletExperienceContextPaymentMethodPreference": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "UNRESTRICTED",
          "IMMEDIATE_PAYMENT_REQUIRED"
        ],
        "type": "enum"
      }
    },
    "PaypalWalletExperienceContextShippingPreference": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET_FROM_FILE",
          "NO_SHIPPING",
          "SET_PROVIDED_ADDRESS"
        ],
        "type": "enum"
      }
    },
    "PaypalWalletExperienceContextUserAction": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CONTINUE",
          "PAY_NOW"
        ],
        "type": "enum"
      }
    },
    "PhoneType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "FAX",
          "HOME",
          "MOBILE",
          "OTHER",
          "PAGER"
        ],
        "type": "enum"
      }
    },
    "ShipmentCarrier": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DPD_RU",
          "BG_BULGARIAN_POST",
          "KR_KOREA_POST",
          "ZA_COURIERIT",
          "FR_EXAPAQ",
          "ARE_EMIRATES_POST",
          "GAC",
          "GEIS",
          "SF_EX",
          "PAGO",
          "MYHERMES",
          "DIAMOND_EUROGISTICS",
          "CORPORATECOURIERS_WEBHOOK",
          "BOND",
          "OMNIPARCEL",
          "SK_POSTA",
          "PUROLATOR",
          "FETCHR_WEBHOOK",
          "THEDELIVERYGROUP",
          "CELLO_SQUARE",
          "TARRIVE",
          "COLLIVERY",
          "MAINFREIGHT",
          "IND_FIRSTFLIGHT",
          "ACSWORLDWIDE",
          "AMSTAN",
          "OKAYPARCEL",
          "ENVIALIA_REFERENCE",
          "SEUR_ES",
          "CONTINENTAL",
          "FDSEXPRESS",
          "AMAZON_FBA_SWISHIP",
          "WYNGS",
          "DHL_ACTIVE_TRACING",
          "ZYLLEM",
          "RUSTON",
          "XPOST",
          "CORREOS_ES",
          "DHL_FR",
          "PAN_ASIA",
          "BRT_IT",
          "SRE_KOREA",
          "SPEEDEE",
          "TNT_UK",
          "VENIPAK",
          "SHREENANDANCOURIER",
          "CROSHOT",
          "NIPOST_NG",
          "EPST_GLBL",
          "NEWGISTICS",
          "POST_SLOVENIA",
          "JERSEY_POST",
          "BOMBINOEXP",
          "WMG",
          "XQ_EXPRESS",
          "FURDECO",
          "LHT_EXPRESS",
          "SOUTH_AFRICAN_POST_OFFICE",
          "SPOTON",
          "DIMERCO",
          "CYPRUS_POST_CYP",
          "ABCUSTOM",
          "IND_DELIVREE",
          "CN_BESTEXPRESS",
          "DX_SFTP",
          "PICKUPP_MYS",
          "FMX",
          "HELLMANN",
          "SHIP_IT_ASIA",
          "KERRY_ECOMMERCE",
          "FRETERAPIDO",
          "PITNEY_BOWES",
          "XPRESSEN_DK",
          "SEUR_SP_API",
          "DELIVERYONTIME",
          "JINSUNG",
          "TRANS_KARGO",
          "SWISHIP_DE",
          "IVOY_WEBHOOK",
          "AIRMEE_WEBHOOK",
          "DHL_BENELUX",
          "FIRSTMILE",
          "FASTWAY_IR",
          "HH_EXP",
          "MYS_MYPOST_ONLINE",
          "TNT_NL",
          "TIPSA",
          "TAQBIN_MY",
          "KGMHUB",
          "INTEXPRESS",
          "OVERSE_EXP",
          "ONECLICK",
          "ROADRUNNER_FREIGHT",
          "GLS_CROTIA",
          "MRW_FTP",
          "BLUEX",
          "DYLT",
          "DPD_IR",
          "SIN_GLBL",
          "TUFFNELLS_REFERENCE",
          "CJPACKET",
          "MILKMAN",
          "ASIGNA",
          "ONEWORLDEXPRESS",
          "ROYAL_MAIL",
          "VIA_EXPRESS",
          "TIGFREIGHT",
          "ZTO_EXPRESS",
          "TWO_GO",
          "IML",
          "INTEL_VALLEY",
          "EFS",
          "UK_UK_MAIL",
          "RAM",
          "ALLIEDEXPRESS",
          "APC_OVERNIGHT",
          "SHIPPIT",
          "TFM",
          "M_XPRESS",
          "HDB_BOX",
          "CLEVY_LINKS",
          "IBEONE",
          "FIEGE_NL",
          "KWE_GLOBAL",
          "CTC_EXPRESS",
          "LAO_POST",
          "AMAZON",
          "MORE_LINK",
          "JX",
          "EASY_MAIL",
          "ADUIEPYLE",
          "GB_PANTHER",
          "EXPRESSSALE",
          "SG_DETRACK",
          "TRUNKRS_WEBHOOK",
          "MATDESPATCH",
          "DICOM",
          "MBW",
          "KHM_CAMBODIA_POST",
          "SINOTRANS",
          "BRT_IT_PARCELID",
          "DHL_SUPPLY_CHAIN",
          "DHL_PL",
          "TOPYOU",
          "PALEXPRESS",
          "DHL_SG",
          "CN_WEDO",
          "FULFILLME",
          "DPD_DELISTRACK",
          "UPS_REFERENCE",
          "CARIBOU",
          "LOCUS_WEBHOOK",
          "DSV",
          "CN_GOFLY",
          "P2P_TRC",
          "DIRECTPARCELS",
          "NOVA_POSHTA_INT",
          "FEDEX_POLAND",
          "CN_JCEX",
          "FAR_INTERNATIONAL",
          "IDEXPRESS",
          "GANGBAO",
          "NEWAY",
          "POSTNL_INT_3_S",
          "RPX_ID",
          "DESIGNERTRANSPORT_WEBHOOK",
          "GLS_SLOVEN",
          "PARCELLED_IN",
          "GSI_EXPRESS",
          "CON_WAY",
          "BROUWER_TRANSPORT",
          "CPEX",
          "ISRAEL_POST",
          "DTDC_IN",
          "PTT_POST",
          "XDE_WEBHOOK",
          "TOLOS",
          "GIAO_HANG",
          "GEODIS_ESPACE",
          "MAGYAR_HU",
          "DOORDASH_WEBHOOK",
          "TIKI_ID",
          "CJ_HK_INTERNATIONAL",
          "STAR_TRACK_EXPRESS",
          "HELTHJEM",
          "SFB2C",
          "FREIGHTQUOTE",
          "LANDMARK_GLOBAL_REFERENCE",
          "PARCEL2GO",
          "DELNEXT",
          "RCL",
          "CGS_EXPRESS",
          "HK_POST",
          "SAP_EXPRESS",
          "PARCELPOST_SG",
          "HERMES",
          "IND_SAFEEXPRESS",
          "TOPHATTEREXPRESS",
          "MGLOBAL",
          "AVERITT",
          "LEADER",
          "_2EBOX",
          "SG_SPEEDPOST",
          "DBSCHENKER_SE",
          "ISR_POST_DOMESTIC",
          "BESTWAYPARCEL",
          "ASENDIA_DE",
          "NIGHTLINE_UK",
          "TAQBIN_SG",
          "TCK_EXPRESS",
          "ENDEAVOUR_DELIVERY",
          "NANJINGWOYUAN",
          "HEPPNER_FR",
          "EMPS_CN",
          "FONSEN",
          "PICKRR",
          "APC_OVERNIGHT_CONNUM",
          "STAR_TRACK_NEXT_FLIGHT",
          "DAJIN",
          "UPS_FREIGHT",
          "POSTA_PLUS",
          "CEVA",
          "ANSERX",
          "JS_EXPRESS",
          "PADTF",
          "UPS_MAIL_INNOVATIONS",
          "EZSHIP",
          "SYPOST",
          "AMAZON_SHIP_MCF",
          "YUSEN",
          "BRING",
          "SDA_IT",
          "GBA",
          "NEWEGGEXPRESS",
          "SPEEDCOURIERS_GR",
          "FORRUN",
          "PICKUP",
          "ECMS",
          "INTELIPOST",
          "FLASHEXPRESS",
          "CN_STO",
          "SEKO_SFTP",
          "HOME_DELIVERY_SOLUTIONS",
          "DPD_HGRY",
          "KERRYTTC_VN",
          "JOYING_BOX",
          "TOTAL_EXPRESS",
          "ZJS_EXPRESS",
          "STARKEN",
          "DEMANDSHIP",
          "CN_DPEX",
          "AUPOST_CN",
          "LOGISTERS",
          "GOGLOBALPOST",
          "GLS_CZ",
          "PAACK_WEBHOOK",
          "GRAB_WEBHOOK",
          "PARCELPOINT",
          "ICUMULUS",
          "DAIGLOBALTRACK",
          "GLOBAL_IPARCEL",
          "YURTICI_KARGO",
          "CN_PAYPAL_PACKAGE",
          "PARCEL_2_POST",
          "GLS_IT",
          "PIL_LOGISTICS",
          "HEPPNER",
          "GENERAL_OVERNIGHT",
          "HAPPY2POINT",
          "CHITCHATS",
          "SMOOTH",
          "CLE_LOGISTICS",
          "FIEGE",
          "MX_CARGO",
          "ZIINGFINALMILE",
          "DAYTON_FREIGHT",
          "TCS",
          "AEX",
          "HERMES_DE",
          "ROUTIFIC_WEBHOOK",
          "GLOBAVEND",
          "CJ_LOGISTICS",
          "PALLET_NETWORK",
          "RAF_PH",
          "UK_XDP",
          "PAPER_EXPRESS",
          "LA_POSTE_SUIVI",
          "PAQUETEXPRESS",
          "LIEFERY",
          "STRECK_TRANSPORT",
          "PONY_EXPRESS",
          "ALWAYS_EXPRESS",
          "GBS_BROKER",
          "CITYLINK_MY",
          "ALLJOY",
          "YODEL",
          "YODEL_DIR",
          "STONE3PL",
          "PARCELPAL_WEBHOOK",
          "DHL_ECOMERCE_ASA",
          "SIMPLYPOST",
          "KY_EXPRESS",
          "SHENZHEN",
          "US_LASERSHIP",
          "UC_EXPRE",
          "DIDADI",
          "CJ_KR",
          "DBSCHENKER_B2B",
          "MXE",
          "CAE_DELIVERS",
          "PFCEXPRESS",
          "WHISTL",
          "WEPOST",
          "DHL_PARCEL_ES",
          "DDEXPRESS",
          "ARAMEX_AU",
          "BNEED",
          "HK_TGX",
          "LATVIJAS_PASTS",
          "VIAEUROPE",
          "CORREO_UY",
          "CHRONOPOST_FR",
          "J_NET",
          "_6LS",
          "BLR_BELPOST",
          "BIRDSYSTEM",
          "DOBROPOST",
          "WAHANA_ID",
          "WEASHIP",
          "SONICTL",
          "KWT",
          "AFLLOG_FTP",
          "SKYNET_WORLDWIDE",
          "NOVA_POSHTA",
          "SEINO",
          "SZENDEX",
          "BPOST_INT",
          "DBSCHENKER_SV",
          "AO_DEUTSCHLAND",
          "EU_FLEET_SOLUTIONS",
          "PCFCORP",
          "LINKBRIDGE",
          "PRIMAMULTICIPTA",
          "COUREX",
          "ZAJIL_EXPRESS",
          "COLLECTCO",
          "JTEXPRESS",
          "FEDEX_UK",
          "USHIP",
          "PIXSELL",
          "SHIPTOR",
          "CDEK",
          "VNM_VIETTELPOST",
          "CJ_CENTURY",
          "GSO",
          "VIWO",
          "SKYBOX",
          "KERRYTJ",
          "NTLOGISTICS_VN",
          "SDH_SCM",
          "ZINC",
          "DPE_SOUTH_AFRC",
          "CESKA_CZ",
          "ACS_GR",
          "DEALERSEND",
          "JOCOM",
          "CSE",
          "TFORCE_FINALMILE",
          "SHIP_GATE",
          "SHIPTER",
          "NATIONAL_SAMEDAY",
          "YUNEXPRESS",
          "CAINIAO",
          "DMS_MATRIX",
          "DIRECTLOG",
          "ASENDIA_US",
          "_3JMSLOGISTICS",
          "LICCARDI_EXPRESS",
          "SKY_POSTAL",
          "CNWANGTONG",
          "POSTNORD_LOGISTICS_DK",
          "LOGISTIKA",
          "CELERITAS",
          "PRESSIODE",
          "SHREE_MARUTI",
          "LOGISTICSWORLDWIDE_HK",
          "EFEX",
          "LOTTE",
          "LONESTAR",
          "APRISAEXPRESS",
          "BEL_RS",
          "OSM_WORLDWIDE",
          "WESTGATE_GL",
          "FASTRACK",
          "DTD_EXPR",
          "ALFATREX",
          "PROMEDDELIVERY",
          "THABIT_LOGISTICS",
          "HCT_LOGISTICS",
          "CARRY_FLAP",
          "US_OLD_DOMINION",
          "ANICAM_BOX",
          "WANBEXPRESS",
          "AN_POST",
          "DPD_LOCAL",
          "STALLIONEXPRESS",
          "RAIDEREX",
          "SHOPFANS",
          "KYUNGDONG_PARCEL",
          "CHAMPION_LOGISTICS",
          "PICKUPP_SGP",
          "MORNING_EXPRESS",
          "NACEX",
          "THENILE_WEBHOOK",
          "HOLISOL",
          "LBCEXPRESS_FTP",
          "KURASI",
          "USF_REDDAWAY",
          "APG",
          "CN_BOXC",
          "ECOSCOOTING",
          "MAINWAY",
          "PAPERFLY",
          "HOUNDEXPRESS",
          "BOX_BERRY",
          "EP_BOX",
          "PLUS_LOG_UK",
          "FULFILLA",
          "ASE",
          "MAIL_PLUS",
          "XPO_LOGISTICS",
          "WNDIRECT",
          "CLOUDWISH_ASIA",
          "ZELERIS",
          "GIO_EXPRESS",
          "OCS_WORLDWIDE",
          "ARK_LOGISTICS",
          "AQUILINE",
          "PILOT_FREIGHT",
          "QWINTRY",
          "DANSKE_FRAGT",
          "CARRIERS",
          "AIR_CANADA_GLOBAL",
          "PRESIDENT_TRANS",
          "STEPFORWARDFS",
          "SKYNET_UK",
          "PITTOHIO",
          "CORREOS_EXPRESS",
          "RL_US",
          "MARA_XPRESS",
          "DESTINY",
          "UK_YODEL",
          "COMET_TECH",
          "DHL_PARCEL_RU",
          "TNT_REFR",
          "SHREE_ANJANI_COURIER",
          "MIKROPAKKET_BE",
          "ETS_EXPRESS",
          "COLIS_PRIVE",
          "CN_YUNDA",
          "AAA_COOPER",
          "ROCKET_PARCEL",
          "_360LION",
          "PANDU",
          "PROFESSIONAL_COURIERS",
          "FLYTEXPRESS",
          "LOGISTICSWORLDWIDE_MY",
          "CORREOS_DE_ESPANA",
          "IMX",
          "FOUR_PX_EXPRESS",
          "XPRESSBEES",
          "PICKUPP_VNM",
          "STARTRACK_EXPRESS",
          "FR_COLISSIMO",
          "NACEX_SPAIN_REFERENCE",
          "DHL_SUPPLY_CHAIN_AU",
          "ESHIPPING",
          "SHREETIRUPATI",
          "HX_EXPRESS",
          "INDOPAKET",
          "CN_17POST",
          "K1_EXPRESS",
          "CJ_GLS",
          "MYS_GDEX",
          "NATIONEX",
          "ANJUN",
          "FARGOOD",
          "SMG_EXPRESS",
          "RZYEXPRESS",
          "SEFL",
          "TNT_CLICK_IT",
          "HDB",
          "HIPSHIPPER",
          "RPXLOGISTICS",
          "KUEHNE",
          "IT_NEXIVE",
          "PTS",
          "SWISS_POST_FTP",
          "FASTRK_SERV",
          "_4_72",
          "US_YRC",
          "POSTNL_INTL_3S",
          "ELIAN_POST",
          "CUBYN",
          "SAU_SAUDI_POST",
          "ABXEXPRESS_MY",
          "HUAHAN_EXPRESS",
          "IND_JAYONEXPRESS",
          "ZES_EXPRESS",
          "ZEPTO_EXPRESS",
          "SKYNET_ZA",
          "ZEEK_2_DOOR",
          "BLINKLASTMILE",
          "POSTA_UKR",
          "CHROBINSON",
          "CN_POST56",
          "COURANT_PLUS",
          "SCUDEX_EXPRESS",
          "SHIPENTEGRA",
          "B_TWO_C_EUROPE",
          "COPE",
          "IND_GATI",
          "CN_WISHPOST",
          "NACEX_ES",
          "TAQBIN_HK",
          "GLOBALTRANZ",
          "HKD",
          "BJSHOMEDELIVERY",
          "OMNIVA",
          "SUTTON",
          "PANTHER_REFERENCE",
          "SFCSERVICE",
          "LTL",
          "PARKNPARCEL",
          "SPRING_GDS",
          "ECEXPRESS",
          "INTERPARCEL_AU",
          "AGILITY",
          "XL_EXPRESS",
          "ADERONLINE",
          "DIRECTCOURIERS",
          "PLANZER",
          "SENDING",
          "NINJAVAN_WB",
          "NATIONWIDE_MY",
          "SENDIT",
          "GB_ARROW",
          "IND_GOJAVAS",
          "KPOST",
          "DHL_FREIGHT",
          "BLUECARE",
          "JINDOUYUN",
          "TRACKON",
          "GB_TUFFNELLS",
          "TRUMPCARD",
          "ETOTAL",
          "SFPLUS_WEBHOOK",
          "SEKOLOGISTICS",
          "HERMES_2MANN_HANDLING",
          "DPD_LOCAL_REF",
          "UDS",
          "ZA_SPECIALISED_FREIGHT",
          "THA_KERRY",
          "PRT_INT_SEUR",
          "BRA_CORREIOS",
          "NZ_NZ_POST",
          "CN_EQUICK",
          "MYS_EMS",
          "GB_NORSK",
          "ESP_MRW",
          "ESP_PACKLINK",
          "KANGAROO_MY",
          "RPX",
          "XDP_UK_REFERENCE",
          "NINJAVAN_MY",
          "ADICIONAL",
          "NINJAVAN_ID",
          "ROADBULL",
          "YAKIT",
          "MAILAMERICAS",
          "MIKROPAKKET",
          "DYNALOGIC",
          "DHL_ES",
          "DHL_PARCEL_NL",
          "DHL_GLOBAL_MAIL_ASIA",
          "DAWN_WING",
          "GENIKI_GR",
          "HERMESWORLD_UK",
          "ALPHAFAST",
          "BUYLOGIC",
          "EKART",
          "MEX_SENDA",
          "SFC_LOGISTICS",
          "POST_SERBIA",
          "IND_DELHIVERY",
          "DE_DPD_DELISTRACK",
          "RPD2MAN",
          "CN_SF_EXPRESS",
          "YANWEN",
          "MYS_SKYNET",
          "CORREOS_DE_MEXICO",
          "CBL_LOGISTICA",
          "MEX_ESTAFETA",
          "AU_AUSTRIAN_POST",
          "RINCOS",
          "NLD_DHL",
          "RUSSIAN_POST",
          "COURIERS_PLEASE",
          "POSTNORD_LOGISTICS",
          "FEDEX",
          "DPE_EXPRESS",
          "DPD",
          "ADSONE",
          "IDN_JNE",
          "THECOURIERGUY",
          "CNEXPS",
          "PRT_CHRONOPOST",
          "LANDMARK_GLOBAL",
          "IT_DHL_ECOMMERCE",
          "ESP_NACEX",
          "PRT_CTT",
          "BE_KIALA",
          "ASENDIA_UK",
          "GLOBAL_TNT",
          "POSTUR_IS",
          "EPARCEL_KR",
          "INPOST_PACZKOMATY",
          "IT_POSTE_ITALIA",
          "BE_BPOST",
          "PL_POCZTA_POLSKA",
          "MYS_MYS_POST",
          "SG_SG_POST",
          "THA_THAILAND_POST",
          "LEXSHIP",
          "FASTWAY_NZ",
          "DHL_AU",
          "COSTMETICSNOW",
          "PFLOGISTICS",
          "LOOMIS_EXPRESS",
          "GLS_ITALY",
          "LINE",
          "GEL_EXPRESS",
          "HUODULL",
          "NINJAVAN_SG",
          "JANIO",
          "AO_COURIER",
          "BRT_IT_SENDER_REF",
          "SAILPOST",
          "LALAMOVE",
          "NEWZEALAND_COURIERS",
          "ETOMARS",
          "VIRTRANSPORT",
          "WIZMO",
          "PALLETWAYS",
          "I_DIKA",
          "CFL_LOGISTICS",
          "GEMWORLDWIDE",
          "GLOBAL_EXPRESS",
          "LOGISTYX_TRANSGROUP",
          "WESTBANK_COURIER",
          "ARCO_SPEDIZIONI",
          "YDH_EXPRESS",
          "PARCELINKLOGISTICS",
          "CNDEXPRESS",
          "NOX_NIGHT_TIME_EXPRESS",
          "AERONET",
          "LTIANEXP",
          "INTEGRA2_FTP",
          "PARCELONE",
          "NOX_NACHTEXPRESS",
          "CN_CHINA_POST_EMS",
          "CHUKOU1",
          "GLS_SLOV",
          "ORANGE_DS",
          "JOOM_LOGIS",
          "AUS_STARTRACK",
          "DHL",
          "GB_APC",
          "BONDSCOURIERS",
          "JPN_JAPAN_POST",
          "USPS",
          "WINIT",
          "ARG_OCA",
          "TW_TAIWAN_POST",
          "DMM_NETWORK",
          "TNT",
          "BH_POSTA",
          "SWE_POSTNORD",
          "CA_CANADA_POST",
          "WISELOADS",
          "ASENDIA_HK",
          "NLD_GLS",
          "MEX_REDPACK",
          "JET_SHIP",
          "DE_DHL_EXPRESS",
          "NINJAVAN_THAI",
          "RABEN_GROUP",
          "ESP_ASM",
          "HRV_HRVATSKA",
          "GLOBAL_ESTES",
          "LTU_LIETUVOS",
          "BEL_DHL",
          "AU_AU_POST",
          "SPEEDEXCOURIER",
          "FR_COLIS",
          "ARAMEX",
          "DPEX",
          "MYS_AIRPAK",
          "CUCKOOEXPRESS",
          "DPD_POLAND",
          "NLD_POSTNL",
          "NIM_EXPRESS",
          "QUANTIUM",
          "SENDLE",
          "ESP_REDUR",
          "MATKAHUOLTO",
          "CPACKET",
          "POSTI",
          "HUNTER_EXPRESS",
          "CHOIR_EXP",
          "LEGION_EXPRESS",
          "AUSTRIAN_POST_EXPRESS",
          "GRUPO",
          "POSTA_RO",
          "INTERPARCEL_UK",
          "GLOBAL_ABF",
          "POSTEN_NORGE",
          "XPERT_DELIVERY",
          "DHL_REFR",
          "DHL_HK",
          "SKYNET_UAE",
          "GOJEK",
          "YODEL_INTNL",
          "JANCO",
          "YTO",
          "WISE_EXPRESS",
          "JTEXPRESS_VN",
          "FEDEX_INTL_MLSERV",
          "VAMOX",
          "AMS_GRP",
          "DHL_JP",
          "HRPARCEL",
          "GESWL",
          "BLUESTAR",
          "CDEK_TR",
          "DESCARTES",
          "DELTEC_UK",
          "DTDC_EXPRESS",
          "TOURLINE",
          "BH_WORLDWIDE",
          "OCS",
          "YINGNUO_LOGISTICS",
          "UPS",
          "TOLL",
          "PRT_SEUR",
          "DTDC_AU",
          "THA_DYNAMIC_LOGISTICS",
          "UBI_LOGISTICS",
          "FEDEX_CROSSBORDER",
          "A1POST",
          "TAZMANIAN_FREIGHT",
          "CJ_INT_MY",
          "SAIA_FREIGHT",
          "SG_QXPRESS",
          "NHANS_SOLUTIONS",
          "DPD_FR",
          "COORDINADORA",
          "ANDREANI",
          "DOORA",
          "INTERPARCEL_NZ",
          "PHL_JAMEXPRESS",
          "BEL_BELGIUM_POST",
          "US_APC",
          "IDN_POS",
          "FR_MONDIAL",
          "DE_DHL",
          "HK_RPX",
          "DHL_PIECEID",
          "VNPOST_EMS",
          "RRDONNELLEY",
          "DPD_DE",
          "DELCART_IN",
          "IMEXGLOBALSOLUTIONS",
          "ACOMMERCE",
          "EURODIS",
          "CANPAR",
          "GLS",
          "IND_ECOM",
          "ESP_ENVIALIA",
          "DHL_UK",
          "SMSA_EXPRESS",
          "TNT_FR",
          "DEX_I",
          "BUDBEE_WEBHOOK",
          "COPA_COURIER",
          "VNM_VIETNAM_POST",
          "DPD_HK",
          "TOLL_NZ",
          "ECHO",
          "FEDEX_FR",
          "BORDEREXPRESS",
          "MAILPLUS_JPN",
          "TNT_UK_REFR",
          "KEC",
          "DPD_RO",
          "TNT_JP",
          "TH_CJ",
          "EC_CN",
          "FASTWAY_UK",
          "FASTWAY_US",
          "GLS_DE",
          "GLS_ES",
          "GLS_FR",
          "MONDIAL_BE",
          "SGT_IT",
          "TNT_CN",
          "TNT_DE",
          "TNT_ES",
          "TNT_PL",
          "PARCELFORCE",
          "SWISS_POST",
          "TOLL_IPEC",
          "AIR_21",
          "AIRSPEED",
          "BERT",
          "BLUEDART",
          "COLLECTPLUS",
          "COURIERPLUS",
          "COURIER_POST",
          "DHL_GLOBAL_MAIL",
          "DPD_UK",
          "DELTEC_DE",
          "DEUTSCHE_DE",
          "DOTZOT",
          "ELTA_GR",
          "EMS_CN",
          "ECARGO",
          "ENSENDA",
          "FERCAM_IT",
          "FASTWAY_ZA",
          "FASTWAY_AU",
          "FIRST_LOGISITCS",
          "GEODIS",
          "GLOBEGISTICS",
          "GREYHOUND",
          "JETSHIP_MY",
          "LION_PARCEL",
          "AEROFLASH",
          "ONTRAC",
          "SAGAWA",
          "SIODEMKA",
          "STARTRACK",
          "TNT_AU",
          "TNT_IT",
          "TRANSMISSION",
          "YAMATO",
          "DHL_IT",
          "DHL_AT",
          "LOGISTICSWORLDWIDE_KR",
          "GLS_SPAIN",
          "AMAZON_UK_API",
          "DPD_FR_REFERENCE",
          "DHLPARCEL_UK",
          "MEGASAVE",
          "QUALITYPOST",
          "IDS_LOGISTICS",
          "JOYINGBOX",
          "PANTHER_ORDER_NUMBER",
          "WATKINS_SHEPARD",
          "FASTTRACK",
          "UP_EXPRESS",
          "ELOGISTICA",
          "ECOURIER",
          "CJ_PHILIPPINES",
          "SPEEDEX",
          "ORANGECONNEX",
          "TECOR",
          "SAEE",
          "GLS_ITALY_FTP",
          "DELIVERE",
          "YYCOM",
          "ADICIONAL_PT",
          "DKSH",
          "NIPPON_EXPRESS_FTP",
          "GOLS",
          "FUJEXP",
          "QTRACK",
          "OMLOGISTICS_API",
          "GDPHARM",
          "MISUMI_CN",
          "AIR_CANADA",
          "CITY56_WEBHOOK",
          "SAGAWA_API",
          "KEDAEX",
          "PGEON_API",
          "WEWORLDEXPRESS",
          "JT_LOGISTICS",
          "TRUSK",
          "VIAXPRESS",
          "DHL_SUPPLYCHAIN_ID",
          "ZUELLIGPHARMA_SFTP",
          "MEEST",
          "TOLL_PRIORITY",
          "MOTHERSHIP_API",
          "CAPITAL",
          "EUROPAKET_API",
          "HFD",
          "TOURLINE_REFERENCE",
          "GIO_ECOURIER",
          "CN_LOGISTICS",
          "PANDION",
          "BPOST_API",
          "PASSPORTSHIPPING",
          "PAKAJO",
          "DACHSER",
          "YUSEN_SFTP",
          "SHYPLITE",
          "XYY",
          "MWD",
          "FAXECARGO",
          "MAZET",
          "FIRST_LOGISTICS_API",
          "SPRINT_PACK",
          "HERMES_DE_FTP",
          "CONCISE",
          "KERRY_EXPRESS_TW_API",
          "EWE",
          "FASTDESPATCH",
          "ABCUSTOM_SFTP",
          "CHAZKI",
          "SHIPPIE",
          "GEODIS_API",
          "NAQEL_EXPRESS",
          "PAPA_WEBHOOK",
          "FORWARDAIR",
          "DIALOGO_LOGISTICA_API",
          "LALAMOVE_API",
          "TOMYDOOR",
          "KRONOS_WEBHOOK",
          "JTCARGO",
          "T_CAT",
          "CONCISE_WEBHOOK",
          "TELEPORT_WEBHOOK",
          "CUSTOMCO_API",
          "SPX_TH",
          "BOLLORE_LOGISTICS",
          "CLICKLINK_SFTP",
          "M3LOGISTICS",
          "VNPOST_API",
          "AXLEHIRE_FTP",
          "SHADOWFAX",
          "MYHERMES_UK_API",
          "DAIICHI",
          "MENSAJEROSURBANOS_API",
          "POLARSPEED",
          "IDEXPRESS_ID",
          "PAYO",
          "WHISTL_SFTP",
          "INTEX_DE",
          "TRANS2U",
          "PRODUCTCAREGROUP_SFTP",
          "BIGSMART",
          "EXPEDITORS_API_REF",
          "AITWORLDWIDE_API",
          "WORLDCOURIER",
          "QUIQUP",
          "AGEDISS_SFTP",
          "ANDREANI_API",
          "CRLEXPRESS",
          "SMARTCAT",
          "CROSSFLIGHT",
          "PROCARRIER",
          "DHL_REFERENCE_API",
          "SEINO_API",
          "WSPEXPRESS",
          "KRONOS",
          "TOTAL_EXPRESS_API",
          "PARCLL",
          "XPEDIGO",
          "STAR_TRACK_WEBHOOK",
          "GPOST",
          "UCS",
          "DMFGROUP",
          "COORDINADORA_API",
          "MARKEN",
          "NTL",
          "REDJEPAKKETJE",
          "ALLIED_EXPRESS_FTP",
          "MONDIALRELAY_ES",
          "NAEKO_FTP",
          "MHI",
          "SHIPPIFY",
          "MALCA_AMIT_API",
          "JTEXPRESS_SG_API",
          "DACHSER_WEB",
          "FLIGHTLG",
          "CAGO",
          "COM1EXPRESS",
          "TONAMI_FTP",
          "PACKFLEET",
          "PUROLATOR_INTERNATIONAL",
          "WINESHIPPING_WEBHOOK",
          "DHL_ES_SFTP",
          "PCHOME_API",
          "CESKAPOSTA_API",
          "GORUSH",
          "HOMERUNNER",
          "AMAZON_ORDER",
          "EFWNOW_API",
          "CBL_LOGISTICA_API",
          "NIMBUSPOST",
          "LOGWIN_LOGISTICS",
          "NOWLOG_API",
          "DPD_NL",
          "GODEPENDABLE",
          "ESDEX",
          "LOGISYSTEMS_SFTP",
          "EXPEDITORS",
          "SNTGLOBAL_API",
          "SHIPX",
          "QINTL_API",
          "PACKS",
          "POSTNL_INTERNATIONAL",
          "AMAZON_EMAIL_PUSH",
          "DHL_API",
          "SPX",
          "AXLEHIRE",
          "ICSCOURIER",
          "DIALOGO_LOGISTICA",
          "SHUNBANG_EXPRESS",
          "TCS_API",
          "SF_EXPRESS_CN",
          "PACKETA",
          "SIC_TELIWAY",
          "MONDIALRELAY_FR",
          "INTIME_FTP",
          "JD_EXPRESS",
          "FASTBOX",
          "PATHEON",
          "INDIA_POST",
          "TIPSA_REF",
          "ECOFREIGHT",
          "VOX",
          "DIRECTFREIGHT_AU_REF",
          "BESTTRANSPORT_SFTP",
          "AUSTRALIA_POST_API",
          "FRAGILEPAK_SFTP",
          "FLIPXP",
          "VALUE_WEBHOOK",
          "DAESHIN",
          "SHERPA",
          "MWD_API",
          "SMARTKARGO",
          "DNJ_EXPRESS",
          "GOPEOPLE",
          "MYSENDLE_API",
          "ARAMEX_API",
          "PIDGE",
          "THAIPARCELS",
          "PANTHER_REFERENCE_API",
          "POSTAPLUS",
          "BUFFALO",
          "U_ENVIOS",
          "ELITE_CO",
          "BARQEXP",
          "ROCHE_INTERNAL_SFTP",
          "DBSCHENKER_ICELAND",
          "TNT_FR_REFERENCE",
          "NEWGISTICSAPI",
          "GLOVO",
          "GWLOGIS_API",
          "SPREETAIL_API",
          "MOOVA",
          "PLYCONGROUP",
          "USPS_WEBHOOK",
          "REIMAGINEDELIVERY",
          "EDF_FTP",
          "DAO365",
          "BIOCAIR_FTP",
          "RANSA_WEBHOOK",
          "SHIPXPRES",
          "COURANT_PLUS_API",
          "SHIPA",
          "HOMELOGISTICS",
          "DX",
          "POSTE_ITALIANE_PACCOCELERE",
          "TOLL_WEBHOOK",
          "LCTBR_API",
          "DX_FREIGHT",
          "DHL_SFTP",
          "SHIPROCKET",
          "UBER_WEBHOOK",
          "STATOVERNIGHT",
          "BURD",
          "FASTSHIP",
          "IBVENTURE_WEBHOOK",
          "GATI_KWE_API",
          "CRYOPDP_FTP",
          "HUBBED",
          "TIPSA_API",
          "ARASKARGO",
          "THIJS_NL",
          "ATSHEALTHCARE_REFERENCE",
          "99MINUTOS",
          "HELLENIC_POST",
          "HSM_GLOBAL",
          "MNX",
          "NMTRANSFER",
          "LOGYSTO",
          "INDIA_POST_INT",
          "AMAZON_FBA_SWISHIP_IN",
          "SRT_TRANSPORT",
          "BOMI",
          "DELIVERR_SFTP",
          "HSDEXPRESS",
          "SIMPLETIRE_WEBHOOK",
          "HUNTER_EXPRESS_SFTP",
          "UPS_API",
          "WOOYOUNG_LOGISTICS_SFTP",
          "PHSE_API",
          "WISH_EMAIL_PUSH",
          "NORTHLINE",
          "MEDAFRICA",
          "DPD_AT_SFTP",
          "ANTERAJA",
          "DHL_GLOBAL_FORWARDING_API",
          "LBCEXPRESS_API",
          "SIMSGLOBAL",
          "CDLDELIVERS",
          "TYP",
          "TESTING_COURIER_WEBHOOK",
          "PANDAGO_API",
          "ROYAL_MAIL_FTP",
          "THUNDEREXPRESS",
          "SECRETLAB_WEBHOOK",
          "SETEL",
          "JD_WORLDWIDE",
          "DPD_RU_API",
          "ARGENTS_WEBHOOK",
          "POSTONE",
          "TUSKLOGISTICS",
          "RHENUS_UK_API",
          "TAQBIN_SG_API",
          "INNTRALOG_SFTP",
          "DAYROSS",
          "CORREOSEXPRESS_API",
          "INTERNATIONAL_SEUR_API",
          "YODEL_API",
          "HEROEXPRESS",
          "DHL_SUPPLYCHAIN_IN",
          "URGENT_CARGUS",
          "FRONTDOORCORP",
          "JTEXPRESS_PH",
          "PARCELSTARS_WEBHOOK",
          "DPD_SK_SFTP",
          "MOVIANTO",
          "OZEPARTS_SHIPPING",
          "KARGOMKOLAY",
          "TRUNKRS",
          "OMNIRPS_WEBHOOK",
          "CHILEXPRESS",
          "TESTING_COURIER",
          "JNE_API",
          "BJSHOMEDELIVERY_FTP",
          "DEXPRESS_WEBHOOK",
          "USPS_API",
          "TRANSVIRTUAL",
          "SOLISTICA_API",
          "CHIENVENTURE_WEBHOOK",
          "DPD_UK_SFTP",
          "INPOST_UK",
          "JAVIT",
          "ZTO_DOMESTIC",
          "DHL_GT_API",
          "CEVA_TRACKING",
          "KOMON_EXPRESS",
          "EASTWESTCOURIER_FTP",
          "DANNIAO",
          "SPECTRAN",
          "DELIVER_IT",
          "RELAISCOLIS",
          "GLS_SPAIN_API",
          "POSTPLUS",
          "AIRTERRA",
          "GIO_ECOURIER_API",
          "DPD_CH_SFTP",
          "FEDEX_API",
          "INTERSMARTTRANS",
          "HERMES_UK_SFTP",
          "EXELOT_FTP",
          "DHL_PA_API",
          "VIRTRANSPORT_SFTP",
          "WORLDNET",
          "INSTABOX_WEBHOOK",
          "KNG",
          "FLASHEXPRESS_WEBHOOK",
          "MAGYAR_POSTA_API",
          "WESHIP_API",
          "OHI_WEBHOOK",
          "MUDITA",
          "BLUEDART_API",
          "T_CAT_API",
          "ADS",
          "HERMES_IT",
          "FITZMARK_API",
          "POSTI_API",
          "SMSA_EXPRESS_WEBHOOK",
          "TAMERGROUP_WEBHOOK",
          "LIVRAPIDE",
          "NIPPON_EXPRESS",
          "BETTERTRUCKS",
          "FAN",
          "PB_USPSFLATS_FTP",
          "PARCELRIGHT",
          "ITHINKLOGISTICS",
          "KERRY_EXPRESS_TH_WEBHOOK",
          "ECOUTIER",
          "SHOWL",
          "BRT_IT_API",
          "RIXONHK_API",
          "DBSCHENKER_API",
          "ILYANGLOGIS",
          "MAIL_BOX_ETC",
          "WESHIP",
          "DHL_GLOBAL_MAIL_API",
          "ACTIVOS24_API",
          "ATSHEALTHCARE",
          "LUWJISTIK",
          "GW_WORLD",
          "FAIRSENDEN_API",
          "SERVIP_WEBHOOK",
          "SWISHIP",
          "TANET",
          "HOTSIN_CARGO",
          "DIREX",
          "HUANTONG",
          "IMILE_API",
          "BDMNET",
          "AUEXPRESS",
          "NYTLOGISTICS",
          "DSV_REFERENCE",
          "NOVOFARMA_WEBHOOK",
          "AITWORLDWIDE_SFTP",
          "SHOPOLIVE",
          "FNF_ZA",
          "DHL_ECOMMERCE_GC",
          "FETCHR",
          "STARLINKS_API",
          "YYEXPRESS",
          "SERVIENTREGA",
          "HANJIN",
          "SPANISH_SEUR_FTP",
          "DX_B2B_CONNUM",
          "HELTHJEM_API",
          "INEXPOST",
          "A2B_BA",
          "RHENUS_GROUP",
          "SBERLOGISTICS_RU",
          "MALCA_AMIT",
          "PPL",
          "OSM_WORLDWIDE_SFTP",
          "ACILOGISTIX",
          "OPTIMACOURIER",
          "NOVA_POSHTA_API",
          "LOGGI",
          "YIFAN",
          "MYDYNALOGIC",
          "MORNINGLOBAL",
          "CONCISE_API",
          "FXTRAN",
          "DELIVERYOURPARCEL_ZA",
          "UPARCEL",
          "MOBI_BR",
          "LOGINEXT_WEBHOOK",
          "EMS",
          "SPEEDY"
        ],
        "type": "enum"
      }
    },
    "ShipmentTrackerShipmentDirection": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "FORWARD",
          "RETURN"
        ],
        "type": "enum"
      }
    },
    "ShipmentTrackingNumberType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CARRIER_PROVIDED",
          "E2E_PARTNER_PROVIDED"
        ],
        "type": "enum"
      }
    },
    "ShipmentTrackingStatus": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CANCELLED",
          "DELIVERED",
          "LOCAL_PICKUP",
          "ON_HOLD",
          "SHIPPED",
          "SHIPMENT_CREATED",
          "DROPPED_OFF",
          "IN_TRANSIT",
          "RETURNED",
          "LABEL_PRINTED",
          "ERROR",
          "UNCONFIRMED",
          "PICKUP_FAILED",
          "DELIVERY_DELAYED",
          "DELIVERY_SCHEDULED",
          "DELIVERY_FAILED",
          "INRETURN",
          "IN_PROCESS",
          "NEW",
          "VOID",
          "PROCESSED",
          "NOT_SHIPPED",
          "COMPLETED"
        ],
        "type": "enum"
      }
    },
    "ShippingDetailType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SHIPPING",
          "PICKUP_IN_PERSON",
          "PICKUP_IN_STORE",
          "PICKUP_FROM_PERSON"
        ],
        "type": "enum"
      }
    },
    "ShippingType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SHIPPING",
          "PICKUP",
          "PICKUP_IN_STORE",
          "PICKUP_FROM_PERSON"
        ],
        "type": "enum"
      }
    },
    "StoreInVaultInstruction": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ON_SUCCESS"
        ],
        "type": "enum"
      }
    },
    "StoredPaymentSourcePaymentType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ONE_TIME",
          "RECURRING",
          "UNSCHEDULED"
        ],
        "type": "enum"
      }
    },
    "StoredPaymentSourceUsageType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "FIRST",
          "SUBSEQUENT",
          "DERIVED"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TaxInfoTaxIdType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BR_CPF",
          "BR_CNPJ"
        ],
        "type": "enum"
      }
    },
    "TokenType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BILLING_AGREEMENT"
        ],
        "type": "enum"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "VenmoWalletExperienceContextShippingPreference": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET_FROM_FILE",
          "NO_SHIPPING",
          "SET_PROVIDED_ADDRESS"
        ],
        "type": "enum"
      }
    }
  }
}
