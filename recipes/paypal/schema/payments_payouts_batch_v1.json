{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api-m.paypal.com",
          "env": "PAYPAL_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "Oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": {
              "value": "/v1/oauth2/token",
              "env": "PAYPAL_OAUTH2_TOKEN_URL"
            },
            "scopes": {
              "https://uri.paypal.com/payments/payouts": "Payout to a list of recipients.",
              "https://uri.paypal.com/services/payments/payouts-item/reverse": "For reversing a completed payout item."
            },
            "clientId": {
              "env": "PAYPAL_OAUTH2_CLIENT_ID"
            },
            "clientSecret": {
              "env": "PAYPAL_OAUTH2_CLIENT_SECRET"
            }
          }
        }
      }
    },
    "version": "1.9"
  },
  "functions": {
    "payouts_get": {
      "request": {
        "url": "/v1/payments/payouts/{id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/payments/payouts"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "fields": {
          "description": "Shows details for only the specified fields.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^.*$",
              "maxLength": 1000,
              "minLength": 1
            }
          }
        },
        "id": {
          "description": "The ID of the payout for which to show details.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^.*$",
              "maxLength": 1000,
              "minLength": 1
            }
          }
        },
        "page": {
          "description": "A non-zero integer representing the page of the results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "page",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 0
            }
          }
        },
        "page_size": {
          "description": "The maximum number of results to return at one time. Value is a non-negative, non-zero integer. If the user chooses pagination, the maximum page is `1000`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 1000,
              "minimum": 0
            }
          }
        },
        "total_required": {
          "description": "Indicates whether to show the total items and total pages count in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "total_required",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Show payout batch details",
      "result_type": {
        "name": "PayoutBatch",
        "type": "named"
      }
    },
    "payouts_item_get": {
      "request": {
        "url": "/v1/payments/payouts-item/{payout_item_id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/payments/payouts"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "payout_item_id": {
          "description": "The ID of the payout item to cancel.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "payout_item_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^.*$",
              "maxLength": 32,
              "minLength": 1
            }
          }
        }
      },
      "description": "Show payout item details",
      "result_type": {
        "name": "PayoutItem2",
        "type": "named"
      }
    }
  },
  "object_types": {
    "AlternateNotificationMethodInput": {
      "description": "Captures additional notification modes to reach out to the receiver regarding this payment.",
      "fields": {
        "phone": {
          "description": "The phone number in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PhoneInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "alternate_notification_method"
    },
    "ApplicationContextInput": {
      "description": "Metadata for Venmo transactions.",
      "fields": {
        "holler_url": {
          "description": "Link to a Holler sticker. For Venmo recipients, the sticker displays with the payout message. The maximum URL length is 151.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 1000,
            "minLength": 1
          }
        },
        "logo_url": {
          "description": "Link to a logo that displays as the sender's profile image in the recipient's Venmo feed. Used to add or update the business profile image. Max image size: 1024 x 1024 pixels. The image should be square and maximum URL length is 2000.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 1000,
            "minLength": 0
          }
        },
        "social_feed_privacy": {
          "description": "This attribute controls the privacy of a payout transaction in recipients feed. PUBLIC, FRIENDS_ONLY & PRIVATE are the values that can be used. PUBLIC - The payment displays on the recipient's public Venmo feed. FRIENDS_ONLY - The payment displays only to the recipient's Venmo friends. PRIVATE - The payment displays only on the recipient's personal feed. Defaults to `PRIVATE` if left blank.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 15,
            "minLength": 1
          }
        }
      },
      "alias": "application_context"
    },
    "CreatePayoutRequestInput": {
      "description": "The create payout request.",
      "fields": {
        "items": {
          "description": "An array of individual payout items.",
          "type": {
            "element_type": {
              "name": "PayoutItemInput",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "sender_batch_header": {
          "description": "The sender-provided payout header for a payout request.",
          "type": {
            "name": "SenderBatchHeaderInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "create_payout_request"
    },
    "Currency": {
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "fields": {
        "currency": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The value, which might be:An integer for currencies like `JPY` that are not typically fractional.A decimal fraction for currencies like `TND` that are subdivided into thousandths.For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "currency"
    },
    "CurrencyInput": {
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "fields": {
        "currency": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The value, which might be:An integer for currencies like `JPY` that are not typically fractional.A decimal fraction for currencies like `TND` that are subdivided into thousandths.For the required number of decimal places for a currency code, see [Currency codes - ISO 4217](https://www.iso.org/iso-4217-currency-codes.html).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "currency"
    },
    "Error": {
      "description": "The error details.",
      "fields": {
        "debug_id": {
          "description": "The PayPal internal ID. Used for correlation purposes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "details": {
          "description": "An array of additional details about the error.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ErrorDetails2",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "information_link": {
          "description": "The information link, or URI, that shows detailed information about this error for the developer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "message": {
          "description": "The message that describes the error.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The human-readable, unique name of the error.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "error"
    },
    "ErrorDetails2": {
      "description": "The error details. Required for client-side `4XX` errors.",
      "fields": {
        "description": {
          "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "field": {
          "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "issue": {
          "description": "The unique, fine-grained application-level error code.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "location": {
          "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The value of the field that caused the error.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "error_details-2"
    },
    "LinkDescription": {
      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
      "fields": {
        "href": {
          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "method": {
          "description": "The HTTP method required to make the related call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "LinkDescriptionMethod",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rel": {
          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "link_description"
    },
    "Name": {
      "description": "The name of the party.",
      "fields": {
        "alternate_full_name": {
          "description": "DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "full_name": {
          "description": "When the party is a person, the party's full name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "given_name": {
          "description": "When the party is a person, the party's given, or first, name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "middle_name": {
          "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "prefix": {
          "description": "The prefix, or title, to the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "suffix": {
          "description": "The suffix for the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "surname": {
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        }
      },
      "alias": "name"
    },
    "Payout": {
      "description": "The create payout response.",
      "fields": {
        "batch_header": {
          "description": "The payout header that is returned in response to a payout header request. Shows details for an entire payout request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayoutHeader",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "payout"
    },
    "PayoutBatch": {
      "description": "The PayPal-generated batch status.",
      "fields": {
        "batch_header": {
          "description": "The payout header that is returned in response to a payout header request. Shows details for an entire payout request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayoutBatchHeader",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "items": {
          "description": "An array of individual items.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PayoutBatchItems",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "total_items": {
          "description": "The total number of items in the full result list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ],
            "maximum": 15000,
            "minimum": 0
          }
        },
        "total_pages": {
          "description": "The total number of pages.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ],
            "maximum": 1000,
            "minimum": 0
          }
        }
      },
      "alias": "payout_batch"
    },
    "PayoutBatchHeader": {
      "description": "The payout header that is returned in response to a payout header request. Shows details for an entire payout request.",
      "fields": {
        "amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "batch_status": {
          "description": "The payouts status.",
          "type": {
            "name": "BatchEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 36,
            "minLength": 1
          }
        },
        "fees": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "funding_source": {
          "description": "Identifies a funding source type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FundingSource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 36,
            "minLength": 1
          }
        },
        "payout_batch_id": {
          "description": "The PayPal-generated ID for a payout.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "sender_batch_header": {
          "description": "The sender-provided header for a payout request.",
          "type": {
            "name": "PayoutSenderBatchHeader",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "time_closed": {
          "description": "The date and time when the payout was closed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). A payout is considered closed when all items in a batch are processed and the available balance from the temporary hold is released.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "maxLength": 100,
            "minLength": 0
          }
        },
        "time_completed": {
          "description": "The date and time when processing for the payout was completed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "maxLength": 100,
            "minLength": 0
          }
        },
        "time_created": {
          "description": "The date and time when processing for the payout began, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "alias": "payout_batch_header"
    },
    "PayoutBatchItems": {
      "description": "The payout item status and other details.",
      "fields": {
        "activity_id": {
          "description": "The unique PayPal-generated common ID created to link sender side and receiver side transaction. Used for tracking.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "currency_conversion": {
          "description": "The currency conversion resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayoutCurrencyConversion",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "errors": {
          "description": "The error details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Error",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "payout_batch_id": {
          "description": "The PayPal-generated ID for the payout.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "payout_item": {
          "description": "The details for a sender-created payout to a single recipient.",
          "type": {
            "name": "PayoutItemDetail",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payout_item_fee": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payout_item_id": {
          "description": "The ID for the payout item. Viewable when you show details for a payout.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "time_processed": {
          "description": "The date and time when this item was last processed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "maxLength": 100,
            "minLength": 0
          }
        },
        "transaction_id": {
          "description": "The PayPal-generated ID for the transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "transaction_status": {
          "description": "The item transaction status.Note: For POST/v1/payments/payouts-item/{payout_item_id}/cancel, the only possible transaction_status value is RETURNED.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 36,
            "minLength": 1
          }
        }
      },
      "alias": "payout_batch_items"
    },
    "PayoutCurrencyConversion": {
      "description": "The currency conversion resource.",
      "fields": {
        "exchange_rate": {
          "description": "The exchange rate that is applied for this payout.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "from_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "to_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "payout_currency_conversion"
    },
    "PayoutHeader": {
      "description": "The payout header that is returned in response to a payout header request. Shows details for an entire payout request.",
      "fields": {
        "batch_status": {
          "description": "The payouts status.",
          "type": {
            "name": "BatchEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 36,
            "minLength": 1
          }
        },
        "payout_batch_id": {
          "description": "The PayPal-generated ID for a payout.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "sender_batch_header": {
          "description": "The sender-provided header for a payout request.",
          "type": {
            "name": "PayoutSenderBatchHeader",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "time_created": {
          "description": "The date and time when processing for the payout began, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "alias": "payout_header"
    },
    "PayoutItem2": {
      "description": "The payout item status and other details. A payout_item_id helps you identify denied payments. If a payment is denied, you can use the payout_item_id to identify the payment even if it lacks a transaction_id.",
      "fields": {
        "activity_id": {
          "description": "The unique PayPal-generated common ID that links the sender- and receiver-side transactions. Used for tracking.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "currency_conversion": {
          "description": "The currency conversion resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayoutCurrencyConversion",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "errors": {
          "description": "The error details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Error",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "links": {
          "description": "An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "payout_batch_id": {
          "description": "The PayPal-generated ID for the payout batch.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "payout_item": {
          "description": "The details for a sender-created payout to a single recipient.",
          "type": {
            "name": "PayoutItemDetail",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payout_item_fee": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Currency",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payout_item_id": {
          "description": "The ID for the payout item. Visible when you show details for a payout.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "sender_batch_id": {
          "description": "A sender-specified ID. Tracks the payout in an accounting system. Should be unique within 30 days.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 256,
            "minLength": 0
          }
        },
        "time_processed": {
          "description": "The date and time when this item was last processed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "maxLength": 100,
            "minLength": 1
          }
        },
        "transaction_id": {
          "description": "The PayPal-generated ID for the transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 30,
            "minLength": 0
          }
        },
        "transaction_status": {
          "description": "The item transaction status.Note: For POST/v1/payments/payouts-item/{payout_item_id}/cancel, the only possible transaction_status value is RETURNED.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 36,
            "minLength": 1
          }
        }
      },
      "alias": "payout_item-2"
    },
    "PayoutItemDetail": {
      "description": "The details for a sender-created payout to a single recipient.",
      "fields": {
        "amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "name": "Currency",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "note": {
          "description": "The sender-specified note for notifications. Supports up to 4000 ASCII characters and 1000 non-ASCII characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 4000,
            "minLength": 0
          }
        },
        "purpose": {
          "description": "The purpose of the transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PurposeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z0-9_]+$",
            "maxLength": 40,
            "minLength": 1
          }
        },
        "receiver": {
          "description": "The receiver of the payment. Corresponds to the `recipient_type` value in the request.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 127,
            "minLength": 0
          }
        },
        "recipient_name": {
          "description": "The name of the party.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Name",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "recipient_type": {
          "description": "The ID type that identifies the payment receiver.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RecipientEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 36,
            "minLength": 1
          }
        },
        "recipient_wallet": {
          "description": "The wallet where the recipient receives the payout. Payouts to Venmo recipients require a 'note' string and a US mobile phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RecipientWalletEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 36,
            "minLength": 1
          }
        },
        "sender_item_id": {
          "description": "A sender-specified ID number. Tracks the payout in an accounting system.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 63,
            "minLength": 0
          }
        }
      },
      "alias": "payout_item_detail"
    },
    "PayoutItemInput": {
      "description": "The sender-created payout to a recipient.",
      "fields": {
        "alternate_notification_method": {
          "description": "Captures additional notification modes to reach out to the receiver regarding this payment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AlternateNotificationMethodInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "name": "CurrencyInput",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "application_context": {
          "description": "Metadata for Venmo transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ApplicationContextInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "note": {
          "description": "The sender-specified note for notifications. Supports up to 4000 ASCII characters and 1000 non-ASCII characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 4000,
            "minLength": 0
          }
        },
        "notification_language": {
          "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/docs/integration/direct/rest/country-codes/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_language_v3",
            "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}))?$",
            "maxLength": 10,
            "minLength": 2
          }
        },
        "purpose": {
          "description": "The purpose of the transaction.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PurposeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z0-9_]+$",
            "maxLength": 40,
            "minLength": 1
          }
        },
        "receiver": {
          "description": "The receiver of the payment. Corresponds to the `recipient_type` value in the request. Max value of up to 127 single-byte characters.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 127,
            "minLength": 0
          }
        },
        "recipient_type": {
          "description": "The recipient type. Value is:EMAIL. The unencrypted email. Value is a string of up to 127 single-byte characters.PHONE. The unencrypted phone number.Note: The PayPal sandbox does not support the PHONE recipient type.PAYPAL_ID. The encrypted PayPal account number.USER_HANDLE. User handle (or) Username associated with Venmo account.If the sender_batch_header includes the recipient_type attribute, payout items use the recipient_type of the sender_batch_header, unless a payout item has its own recipient_type attribute. If the sender_batch_header omits the recipient_type attribute, each payout item must include its own recipient_type value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 13,
            "minLength": 0
          }
        },
        "recipient_wallet": {
          "description": "The recipient wallet.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 36,
            "minLength": 0
          }
        },
        "sender_item_id": {
          "description": "The sender-specified ID number. Tracks the payout in an accounting system.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 63,
            "minLength": 0
          }
        }
      },
      "alias": "payout_item"
    },
    "PayoutSenderBatchHeader": {
      "description": "The sender-provided header for a payout request.",
      "fields": {
        "email_message": {
          "description": "The email message that PayPal sends when the payout item completes. The message is the same for all recipients.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 1000,
            "minLength": 0
          }
        },
        "email_subject": {
          "description": "The subject line for the email that PayPal sends when payment for a payout item completes. The subject line is the same for all recipients. Value is an alphanumeric string with a maximum length of 255 single-byte characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 255,
            "minLength": 0
          }
        },
        "recipient_type": {
          "description": "The ID type that identifies the payment receiver.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RecipientEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 36,
            "minLength": 1
          }
        },
        "sender_batch_id": {
          "description": "The sender-specified ID number. Tracks the payout in an accounting system.Note: PayPal does not process duplicate payouts. If you specify a sender_batch_id that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate sender_batch_id and includes a HATEOAS link to the original payout with the same sender_batch_id.If you receive an HTTP 5nn status code, you can safely retry the request with the same sender_batch_id. The API completes a payment only once for a sender_batch_id that is used within 30 days.</blockquote>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 256,
            "minLength": 0
          }
        }
      },
      "alias": "payout_sender_batch_header"
    },
    "PhoneInput": {
      "description": "The phone number in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "fields": {
        "country_code": {
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,3}?$",
            "maxLength": 3,
            "minLength": 1
          }
        },
        "extension_number": {
          "description": "The extension number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,15}?$",
            "maxLength": 15,
            "minLength": 1
          }
        },
        "national_number": {
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,14}?$",
            "maxLength": 14,
            "minLength": 1
          }
        }
      },
      "alias": "phone"
    },
    "SenderBatchHeaderInput": {
      "description": "The sender-provided payout header for a payout request.",
      "fields": {
        "email_message": {
          "description": "The email message that PayPal sends when the payout item completes. The message is the same for all recipients.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 1000,
            "minLength": 0
          }
        },
        "email_subject": {
          "description": "The subject line for the email that PayPal sends when payment for a payout item completes. The subject line is the same for all recipients. Value is an alphanumeric string of up to 255 single-byte characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 255,
            "minLength": 0
          }
        },
        "note": {
          "description": "The payouts and item-level notes are concatenated in the email. The maximum combined length of the notes is 1000 characters.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 1000,
            "minLength": 0
          }
        },
        "recipient_type": {
          "description": "The ID type that identifies the recipient of the payment. For example, EMAIL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 13,
            "minLength": 0
          }
        },
        "sender_batch_id": {
          "description": "A sender-specified ID number. Tracks the payout in an accounting system.Note: PayPal does not process duplicate payouts. If you specify a sender_batch_id that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate sender_batch_id and includes a HATEOAS link to the original payout with the same sender_batch_id.If you receive an HTTP 5nn status code, you can safely retry the request with the same sender_batch_id. The API completes a payment only once for a sender_batch_id that is used within 30 days.</blockquote>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.*$",
            "maxLength": 256,
            "minLength": 0
          }
        }
      },
      "alias": "sender_batch_header"
    }
  },
  "procedures": {
    "payouts_item_cancel": {
      "request": {
        "url": "/v1/payments/payouts-item/{payout_item_id}/cancel",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/payments/payouts"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "payout_item_id": {
          "description": "The ID of the payout item to cancel.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "payout_item_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^.*$",
              "maxLength": 32,
              "minLength": 1
            }
          }
        }
      },
      "description": "Cancel unclaimed payout item",
      "result_type": {
        "name": "PayoutItem2",
        "type": "named"
      }
    },
    "payouts_post": {
      "request": {
        "url": "/v1/payments/payouts",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/payments/payouts"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "PayPal-Request-Id": {
          "description": "The server stores keys for 30 days.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "PayPal-Request-Id",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ],
              "pattern": "^.*$",
              "maxLength": 1000,
              "minLength": 1
            }
          }
        },
        "body": {
          "description": "The create payout request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreatePayoutRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create batch payout",
      "result_type": {
        "name": "Payout",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "BatchEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DENIED",
          "PENDING",
          "PROCESSING",
          "SUCCESS",
          "CANCELED"
        ],
        "type": "enum"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "FundingSource": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BALANCE"
        ],
        "type": "enum"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "LinkDescriptionMethod": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "HEAD",
          "CONNECT",
          "OPTIONS",
          "PATCH"
        ],
        "type": "enum"
      }
    },
    "PurposeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "AWARDS",
          "PRIZES",
          "DONATIONS",
          "GOODS",
          "SERVICES",
          "REBATES",
          "CASHBACK",
          "DISCOUNTS",
          "NON_GOODS_OR_SERVICES"
        ],
        "type": "enum"
      }
    },
    "RecipientEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "EMAIL",
          "PHONE",
          "PAYPAL_ID"
        ],
        "type": "enum"
      }
    },
    "RecipientWalletEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PAYPAL",
          "VENMO",
          "RECIPIENT_SELECTED"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "TransactionEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SUCCESS",
          "FAILED",
          "PENDING",
          "UNCLAIMED",
          "RETURNED",
          "ONHOLD",
          "BLOCKED",
          "REFUNDED",
          "REVERSED"
        ],
        "type": "enum"
      }
    },
    "URIString": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
