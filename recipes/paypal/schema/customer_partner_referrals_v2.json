{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api-m.paypal.com",
          "env": "PAYPAL_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "Oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": {
              "value": "/v1/oauth2/token",
              "env": "PAYPAL_OAUTH2_TOKEN_URL"
            },
            "scopes": {
              "https://uri.paypal.com/services/customer/partner": "Manage seller resources.",
              "https://uri.paypal.com/services/customer/partner-referrals": "Manage referral data shared by Partner with PayPal. To be used by only internal apps",
              "https://uri.paypal.com/services/customer/partner-referrals/readwrite": "Manage external referral data with PayPal"
            },
            "clientId": {
              "env": "PAYPAL_OAUTH2_CLIENT_ID"
            },
            "clientSecret": {
              "env": "PAYPAL_OAUTH2_CLIENT_SECRET"
            }
          }
        }
      }
    },
    "version": "2.4"
  },
  "functions": {
    "partner_referrals_read": {
      "request": {
        "url": "/v2/customer/partner-referrals/{partner_referral_id}",
        "method": "get",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/customer/partner-referrals/readwrite"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/customer/partner-referrals"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "partner_referral_id": {
          "description": "The ID of the partner-referrals data for which to show details.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "partner_referral_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Show referral data",
      "result_type": {
        "name": "ReferralDataResponse",
        "type": "named"
      }
    }
  },
  "object_types": {
    "AddressPortable2": {
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortable2AddressDetailsObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A kanton.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:Brazil. Suburb, bairro, or neighborhood.India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code for Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/integration/direct/rest/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        }
      },
      "alias": "address_portable-2"
    },
    "AddressPortable2AddressDetailsObject": {
      "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
      "fields": {
        "building_name": {
          "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, Craven House.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "delivery_service": {
          "description": "The delivery service. Post office box, bag number, or post office name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_name": {
          "description": "The street name. Just `Drury` in `Drury Lane`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_number": {
          "description": "The street number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_type": {
          "description": "The street type. For example, avenue, boulevard, road, or expressway.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "sub_building": {
          "description": "The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "AddressPortable2AddressDetailsObjectInput": {
      "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
      "fields": {
        "building_name": {
          "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, Craven House.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "delivery_service": {
          "description": "The delivery service. Post office box, bag number, or post office name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_name": {
          "description": "The street name. Just `Drury` in `Drury Lane`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_number": {
          "description": "The street number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_type": {
          "description": "The street type. For example, avenue, boulevard, road, or expressway.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "sub_building": {
          "description": "The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "AddressPortable2Input": {
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortable2AddressDetailsObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A kanton.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:Brazil. Suburb, bairro, or neighborhood.India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code for Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/integration/direct/rest/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        }
      },
      "alias": "address_portable-2"
    },
    "AddressPortableAddressDetailsObject": {
      "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
      "fields": {
        "building_name": {
          "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, Craven House.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "delivery_service": {
          "description": "The delivery service. Post office box, bag number, or post office name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_name": {
          "description": "The street name. Just `Drury` in `Drury Lane`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_number": {
          "description": "The street number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_type": {
          "description": "The street type. For example, avenue, boulevard, road, or expressway.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "sub_building": {
          "description": "The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "AddressPortableAddressDetailsObjectInput": {
      "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
      "fields": {
        "building_name": {
          "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, Craven House.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "delivery_service": {
          "description": "The delivery service. Post office box, bag number, or post office name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_name": {
          "description": "The street name. Just `Drury` in `Drury Lane`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_number": {
          "description": "The street number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "street_type": {
          "description": "The street type. For example, avenue, boulevard, road, or expressway.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "sub_building": {
          "description": "The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "Bank": {
      "description": "The bank account information.",
      "fields": {
        "account_number": {
          "description": "The bank account number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "\\d+",
            "maxLength": 50,
            "minLength": 1
          }
        },
        "account_type": {
          "description": "The type of bank account.",
          "type": {
            "name": "BankAccountTypeEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 50,
            "minLength": 1
          }
        },
        "branch_location": {
          "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortable2",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "currency_code": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3
          }
        },
        "identifiers": {
          "description": "An array of instrument institute attributes. Used with the account number to uniquely identify the instrument. Value is:For banks with IBAN information, the IBAN number.For banks with BBAN information, the BBAN number.For banks with both IBAN and BBAN information, the IBAN number.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Identifier",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "mandate": {
          "description": "Sellers consent to operate on this financial instrument.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Mandate",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "nick_name": {
          "description": "The user-provided short name for the user's bank account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Za-z_-]+$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      },
      "alias": "bank"
    },
    "BankInput": {
      "description": "The bank account information.",
      "fields": {
        "account_number": {
          "description": "The bank account number.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "\\d+",
            "maxLength": 50,
            "minLength": 1
          }
        },
        "account_type": {
          "description": "The type of bank account.",
          "type": {
            "name": "BankAccountTypeEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 50,
            "minLength": 1
          }
        },
        "branch_location": {
          "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortable2Input",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "currency_code": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3
          }
        },
        "identifiers": {
          "description": "An array of instrument institute attributes. Used with the account number to uniquely identify the instrument. Value is:For banks with IBAN information, the IBAN number.For banks with BBAN information, the BBAN number.For banks with both IBAN and BBAN information, the IBAN number.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IdentifierInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "mandate": {
          "description": "Sellers consent to operate on this financial instrument.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MandateInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "nick_name": {
          "description": "The user-provided short name for the user's bank account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Za-z_-]+$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      },
      "alias": "bank"
    },
    "BeneficialOwners": {
      "description": "Beneficial owners of the entity.",
      "fields": {
        "business_beneficial_owners": {
          "description": "Business beneficial owners.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessBeneficialOwner",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "individual_beneficial_owners": {
          "description": "Individual beneficial owners.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IndividualBeneficialOwner",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "beneficial_owners"
    },
    "BeneficialOwnersInput": {
      "description": "Beneficial owners of the entity.",
      "fields": {
        "business_beneficial_owners": {
          "description": "Business beneficial owners.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessBeneficialOwnerInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "individual_beneficial_owners": {
          "description": "Individual beneficial owners.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IndividualBeneficialOwnerInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "beneficial_owners"
    },
    "BillingAgreement": {
      "description": "The details of the billing agreement between the partner and a seller.",
      "fields": {
        "approval_url": {
          "description": "The URL to which to redirect seller to accept the billing agreement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 125,
            "minLength": 1
          }
        },
        "billing_experience_preference": {
          "description": "The preference that customizes the billing experience of the customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BillingExperiencePreference",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "description": {
          "description": "The billing agreement description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.+$",
            "maxLength": 125,
            "minLength": 1
          }
        },
        "ec_token": {
          "description": "The billing agreement token for the agreement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 50,
            "minLength": 1
          }
        },
        "merchant_custom_data": {
          "description": "The custom data for the billing agreement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-]+$",
            "maxLength": 125,
            "minLength": 1
          }
        }
      },
      "alias": "billing_agreement"
    },
    "BillingAgreementInput": {
      "description": "The details of the billing agreement between the partner and a seller.",
      "fields": {
        "approval_url": {
          "description": "The URL to which to redirect seller to accept the billing agreement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 125,
            "minLength": 1
          }
        },
        "billing_experience_preference": {
          "description": "The preference that customizes the billing experience of the customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BillingExperiencePreferenceInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "description": {
          "description": "The billing agreement description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.+$",
            "maxLength": 125,
            "minLength": 1
          }
        },
        "ec_token": {
          "description": "The billing agreement token for the agreement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 50,
            "minLength": 1
          }
        },
        "merchant_custom_data": {
          "description": "The custom data for the billing agreement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-]+$",
            "maxLength": 125,
            "minLength": 1
          }
        }
      },
      "alias": "billing_agreement"
    },
    "BillingExperiencePreference": {
      "description": "The preference that customizes the billing experience of the customer.",
      "fields": {
        "billing_context_set": {
          "description": "Indicates whether the partner has already displayed the billing context to the seller.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "experience_id": {
          "description": "The ID of the payment web experience profile.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-]+$",
            "maxLength": 20,
            "minLength": 1
          }
        }
      },
      "alias": "billing_experience_preference"
    },
    "BillingExperiencePreferenceInput": {
      "description": "The preference that customizes the billing experience of the customer.",
      "fields": {
        "billing_context_set": {
          "description": "Indicates whether the partner has already displayed the billing context to the seller.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "experience_id": {
          "description": "The ID of the payment web experience profile.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-]+$",
            "maxLength": 20,
            "minLength": 1
          }
        }
      },
      "alias": "billing_experience_preference"
    },
    "BirthDetails": {
      "description": "Date of birth data provided by the user",
      "fields": {
        "date_of_birth": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        }
      },
      "alias": "birth_details"
    },
    "BirthDetailsInput": {
      "description": "Date of birth data provided by the user",
      "fields": {
        "date_of_birth": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        }
      },
      "alias": "birth_details"
    },
    "BusinessAddressDetail": {
      "description": "A simple postal address with coarse-grained fields.",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableAddressDetailsObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A kanton.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:Brazil. Suburb, bairro, or neighborhood.India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code for Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "inactive": {
          "description": "Whether this address has been inactivated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        },
        "primary": {
          "description": "Whether this is the primary address of the user. This cannot be directly set to `false`, but rather it is toggled `false` in the datastore when another address is set to primary.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "type": {
          "description": "Address type under which the provided address is tagged",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessAddressType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "BusinessAddressDetailInput": {
      "description": "A simple postal address with coarse-grained fields.",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableAddressDetailsObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A kanton.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:Brazil. Suburb, bairro, or neighborhood.India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code for Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        },
        "primary": {
          "description": "Whether this is the primary address of the user. This cannot be directly set to `false`, but rather it is toggled `false` in the datastore when another address is set to primary.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "type": {
          "description": "Address type under which the provided address is tagged",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessAddressType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "BusinessBeneficialOwner": {
      "description": "The business beneficial owner of the account.",
      "fields": {
        "addresses": {
          "description": "List of addresses associated with the business entity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessAddressDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "business_incorporation": {
          "description": "Business incorporation information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessIncorporation",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_industry": {
          "description": "The category, subcategory and MCC code of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessIndustry",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_type": {
          "description": "The type and subtype of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessTypeInfo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "documents": {
          "description": "Business Party related Document data collected from the customer.. For example SSN, ITIN, Business registration number that were collected from the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessDocument",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "emails": {
          "description": "Email addresses of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Email",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "names": {
          "description": "Name of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessNameDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "percentage_of_ownership": {
          "description": "The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_percentage_v2",
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
          }
        },
        "phones": {
          "description": "List of phone number associated with the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessPhoneDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "website": {
          "description": "Website of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 50,
            "minLength": 1
          }
        }
      }
    },
    "BusinessBeneficialOwnerInput": {
      "description": "The business beneficial owner of the account.",
      "fields": {
        "addresses": {
          "description": "List of addresses associated with the business entity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessAddressDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "business_incorporation": {
          "description": "Business incorporation information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessIncorporationInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_industry": {
          "description": "The category, subcategory and MCC code of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessIndustryInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_type": {
          "description": "The type and subtype of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessTypeInfoInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "documents": {
          "description": "Business Party related Document data collected from the customer.. For example SSN, ITIN, Business registration number that were collected from the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessDocumentInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "emails": {
          "description": "Email addresses of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EmailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "names": {
          "description": "Name of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessNameDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "percentage_of_ownership": {
          "description": "The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_percentage_v2",
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
          }
        },
        "phones": {
          "description": "List of phone number associated with the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessPhoneDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "website": {
          "description": "Website of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 50,
            "minLength": 1
          }
        }
      }
    },
    "BusinessDocument": {
      "description": "The documents associated with the business.",
      "fields": {
        "expiry_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "files": {
          "description": "The files contained in the document. For example, a document could be represented by a front page file and a back page file, etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "FileReference",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The encrypted identifier for the document.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z]+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "identification_number": {
          "description": "The number for the document. It is the ID number if the document is `ID CARD`, the passport number if the document is `PASSPORT`, etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-]+$",
            "maxLength": 100,
            "minLength": 1
          }
        },
        "issue_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "issuing_country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "labels": {
          "description": "The document labels. A document could be classfied to multiple categories. For example, a bill document can be classfified as `BILL DOCUMENT` and `UTILITY DOCUMENT`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "links": {
          "description": "The HATEOAS links.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "name": {
          "description": "The file name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Za-z_-]+$",
            "maxLength": 100,
            "minLength": 1
          }
        },
        "type": {
          "description": "The type of documents.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessDocumentType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "BusinessDocumentInput": {
      "description": "The documents associated with the business.",
      "fields": {
        "expiry_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "files": {
          "description": "The files contained in the document. For example, a document could be represented by a front page file and a back page file, etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "FileReferenceInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "identification_number": {
          "description": "The number for the document. It is the ID number if the document is `ID CARD`, the passport number if the document is `PASSPORT`, etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-]+$",
            "maxLength": 100,
            "minLength": 1
          }
        },
        "issue_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "issuing_country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "labels": {
          "description": "The document labels. A document could be classfied to multiple categories. For example, a bill document can be classfified as `BILL DOCUMENT` and `UTILITY DOCUMENT`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "The file name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Za-z_-]+$",
            "maxLength": 100,
            "minLength": 1
          }
        },
        "type": {
          "description": "The type of documents.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessDocumentType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "BusinessEntity": {
      "description": "The business entity of the account.",
      "fields": {
        "addresses": {
          "description": "List of addresses associated with the business entity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessAddressDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "annual_sales_volume_range": {
          "description": "The currency range, from the minimum inclusive amount to the maximum inclusive amount.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CurrencyRange",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "average_monthly_volume_range": {
          "description": "The currency range, from the minimum inclusive amount to the maximum inclusive amount.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CurrencyRange",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "beneficial_owners": {
          "description": "Beneficial owners of the entity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BeneficialOwners",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_description": {
          "description": "The business goals description. For example, a mission statement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 256,
            "minLength": 1
          }
        },
        "business_incorporation": {
          "description": "Business incorporation information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessIncorporation",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_industry": {
          "description": "The category, subcategory and MCC code of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessIndustry",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_type": {
          "description": "The type and subtype of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessTypeInfo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "documents": {
          "description": "Business Party related Document data collected from the customer.. For example SSN, ITIN, Business registration number that were collected from the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessDocument",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "emails": {
          "description": "Email addresses of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Email",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "names": {
          "description": "Name of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessNameDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "office_bearers": {
          "description": "List of Directors present as part of the business entity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OfficeBearer",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "phones": {
          "description": "List of phone number associated with the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessPhoneDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "purpose_code": {
          "description": "The account's purpose code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PurposeCodeEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_ ])+$",
              "maxLength": 50,
              "minLength": 1
            }
          }
        },
        "website": {
          "description": "Website of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 50,
            "minLength": 1
          }
        }
      }
    },
    "BusinessEntityInput": {
      "description": "The business entity of the account.",
      "fields": {
        "addresses": {
          "description": "List of addresses associated with the business entity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessAddressDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "annual_sales_volume_range": {
          "description": "The currency range, from the minimum inclusive amount to the maximum inclusive amount.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CurrencyRangeInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "average_monthly_volume_range": {
          "description": "The currency range, from the minimum inclusive amount to the maximum inclusive amount.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CurrencyRangeInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "beneficial_owners": {
          "description": "Beneficial owners of the entity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BeneficialOwnersInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_description": {
          "description": "The business goals description. For example, a mission statement.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 256,
            "minLength": 1
          }
        },
        "business_incorporation": {
          "description": "Business incorporation information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessIncorporationInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_industry": {
          "description": "The category, subcategory and MCC code of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessIndustryInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "business_type": {
          "description": "The type and subtype of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessTypeInfoInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "documents": {
          "description": "Business Party related Document data collected from the customer.. For example SSN, ITIN, Business registration number that were collected from the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessDocumentInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "emails": {
          "description": "Email addresses of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EmailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "names": {
          "description": "Name of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessNameDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "office_bearers": {
          "description": "List of Directors present as part of the business entity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OfficeBearerInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "phones": {
          "description": "List of phone number associated with the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BusinessPhoneDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "purpose_code": {
          "description": "The account's purpose code.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PurposeCodeEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_ ])+$",
              "maxLength": 50,
              "minLength": 1
            }
          }
        },
        "website": {
          "description": "Website of the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 50,
            "minLength": 1
          }
        }
      }
    },
    "BusinessIncorporation": {
      "description": "Business incorporation information.",
      "fields": {
        "incorporation_country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "incorporation_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "incorporation_province_code": {
          "description": "The province of incorporation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z]{2}-([A-Z]{2,3}|[0-9]{2,3})$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      },
      "alias": "business_incorporation"
    },
    "BusinessIncorporationInput": {
      "description": "Business incorporation information.",
      "fields": {
        "incorporation_country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "incorporation_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "incorporation_province_code": {
          "description": "The province of incorporation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Z]{2}-([A-Z]{2,3}|[0-9]{2,3})$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      },
      "alias": "business_incorporation"
    },
    "BusinessIndustry": {
      "description": "The category, subcategory and MCC code of the business.",
      "fields": {
        "category": {
          "description": "The customer's business category code. PayPal uses industry standard seller category codes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^\\d+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "mcc_code": {
          "description": "The customer's business seller category code. PayPal uses industry standard seller category codes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^\\d+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "subcategory": {
          "description": "The customer's business subcategory code. PayPal uses industry standard seller subcategory codes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^\\d+$",
            "maxLength": 20,
            "minLength": 1
          }
        }
      },
      "alias": "business_industry"
    },
    "BusinessIndustryInput": {
      "description": "The category, subcategory and MCC code of the business.",
      "fields": {
        "category": {
          "description": "The customer's business category code. PayPal uses industry standard seller category codes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^\\d+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "mcc_code": {
          "description": "The customer's business seller category code. PayPal uses industry standard seller category codes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^\\d+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "subcategory": {
          "description": "The customer's business subcategory code. PayPal uses industry standard seller subcategory codes.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^\\d+$",
            "maxLength": 20,
            "minLength": 1
          }
        }
      },
      "alias": "business_industry"
    },
    "BusinessNameDetail": {
      "description": "Name of the business provided.",
      "fields": {
        "business_name": {
          "description": "Required. The business name of the party.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "id": {
          "description": "The encrypted ID for the business name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 20,
            "minLength": 1
          }
        },
        "type": {
          "description": "Business name type",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessNameType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "BusinessNameDetailInput": {
      "description": "Name of the business provided.",
      "fields": {
        "business_name": {
          "description": "Required. The business name of the party.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "type": {
          "description": "Business name type",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessNameType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "BusinessPhoneDetail": {
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "fields": {
        "contact_name": {
          "description": "The name that the phone number is connected to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 900,
            "minLength": 1
          }
        },
        "country_code": {
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,3}?$",
            "maxLength": 3,
            "minLength": 1
          }
        },
        "extension_number": {
          "description": "The extension number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,15}?$",
            "maxLength": 15,
            "minLength": 1
          }
        },
        "inactive": {
          "description": "Whether this phone number has been inactivated by the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "national_number": {
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,14}?$",
            "maxLength": 14,
            "minLength": 1
          }
        },
        "primary": {
          "description": "Whether this is the primary contact phone number of the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "tags": {
          "description": "Array of tags for this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PhoneNumberTag",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        },
        "type": {
          "description": "The type of phone number provided. For example, home, work, or mobile.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessPhoneType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "BusinessPhoneDetailInput": {
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "fields": {
        "contact_name": {
          "description": "The name that the phone number is connected to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 900,
            "minLength": 1
          }
        },
        "country_code": {
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,3}?$",
            "maxLength": 3,
            "minLength": 1
          }
        },
        "extension_number": {
          "description": "The extension number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,15}?$",
            "maxLength": 15,
            "minLength": 1
          }
        },
        "national_number": {
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,14}?$",
            "maxLength": 14,
            "minLength": 1
          }
        },
        "primary": {
          "description": "Whether this is the primary contact phone number of the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "tags": {
          "description": "Array of tags for this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PhoneNumberTag",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        },
        "type": {
          "description": "The type of phone number provided. For example, home, work, or mobile.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessPhoneType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "BusinessTypeInfo": {
      "description": "The type and subtype of the business.",
      "fields": {
        "subtype": {
          "description": "Sub classification of the business type",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessSubType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "type": {
          "description": "The business types classified",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "business_type_info"
    },
    "BusinessTypeInfoInput": {
      "description": "The type and subtype of the business.",
      "fields": {
        "subtype": {
          "description": "Sub classification of the business type",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessSubType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "type": {
          "description": "The business types classified",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "business_type_info"
    },
    "CountryTransferMethodCurrencySelection": {
      "description": "Requested country, transfer method and currency.",
      "fields": {
        "country": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "transfer_methods": {
          "description": "Requested transfer method and currency for a country.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TransferMethod",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "country_transfer_method_currency_selection"
    },
    "CountryTransferMethodCurrencySelectionInput": {
      "description": "Requested country, transfer method and currency.",
      "fields": {
        "country": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "transfer_methods": {
          "description": "Requested transfer method and currency for a country.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TransferMethodInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "country_transfer_method_currency_selection"
    },
    "CreateReferralDataResponse": {
      "description": "The shared referral data.",
      "fields": {
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/overview/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "create_referral_data_response"
    },
    "CurrencyRange": {
      "description": "The currency range, from the minimum inclusive amount to the maximum inclusive amount.",
      "fields": {
        "maximum_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "minimum_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Money",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "currency_range"
    },
    "CurrencyRangeInput": {
      "description": "The currency range, from the minimum inclusive amount to the maximum inclusive amount.",
      "fields": {
        "maximum_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "minimum_amount": {
          "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MoneyInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "currency_range"
    },
    "Email": {
      "description": "An email address at which the person or business can be contacted.",
      "fields": {
        "email": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_email_address_v2",
            "pattern": "^.+@[^\"\\-].+$",
            "maxLength": 254,
            "minLength": 3
          }
        },
        "type": {
          "description": "The role of the email address.",
          "type": {
            "name": "EmailTypeEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      },
      "alias": "email"
    },
    "EmailInput": {
      "description": "An email address at which the person or business can be contacted.",
      "fields": {
        "email": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_email_address_v2",
            "pattern": "^.+@[^\"\\-].+$",
            "maxLength": 254,
            "minLength": 3
          }
        },
        "type": {
          "description": "The role of the email address.",
          "type": {
            "name": "EmailTypeEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      },
      "alias": "email"
    },
    "FileReference": {
      "description": "The file reference. Can be a file in PayPal MediaServ, PayPal DMS, or another custom store.",
      "fields": {
        "content_type": {
          "description": "The [Internet Assigned Numbers Authority (IANA) media type of the file](https://www.iana.org/assignments/media-types/media-types.xhtml).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "create_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "id": {
          "description": "The ID of the referenced file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255,
            "minLength": 1
          }
        },
        "reference_url": {
          "description": "The reference URL for the file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "size": {
          "description": "The size of the file, in bytes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]+$"
          }
        }
      },
      "alias": "file_reference"
    },
    "FileReferenceInput": {
      "description": "The file reference. Can be a file in PayPal MediaServ, PayPal DMS, or another custom store.",
      "fields": {
        "content_type": {
          "description": "The [Internet Assigned Numbers Authority (IANA) media type of the file](https://www.iana.org/assignments/media-types/media-types.xhtml).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "create_time": {
          "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.Note: The regular expression provides guidance but does not reject all invalid dates.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_time_v3",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "maxLength": 64,
            "minLength": 20
          }
        },
        "id": {
          "description": "The ID of the referenced file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255,
            "minLength": 1
          }
        },
        "reference_url": {
          "description": "The reference URL for the file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 2000,
            "minLength": 1
          }
        },
        "size": {
          "description": "The size of the file, in bytes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]+$"
          }
        }
      },
      "alias": "file_reference"
    },
    "FinancialInstruments": {
      "description": "Financial instruments attached to this account.",
      "fields": {
        "banks": {
          "description": "An array of banks attached to this managed account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Bank",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "financial_instruments"
    },
    "FinancialInstrumentsInput": {
      "description": "Financial instruments attached to this account.",
      "fields": {
        "banks": {
          "description": "An array of banks attached to this managed account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BankInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "financial_instruments"
    },
    "Identifier": {
      "description": "The bank account ID. An ID with `ROUTING_NUMBER_1` is required.",
      "fields": {
        "type": {
          "description": "The bank account ID type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdentifierTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 125,
            "minLength": 1
          }
        },
        "value": {
          "description": "The value of account identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9-_.+/ =]+",
            "maxLength": 125,
            "minLength": 1
          }
        }
      },
      "alias": "identifier"
    },
    "IdentifierInput": {
      "description": "The bank account ID. An ID with `ROUTING_NUMBER_1` is required.",
      "fields": {
        "type": {
          "description": "The bank account ID type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IdentifierTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 125,
            "minLength": 1
          }
        },
        "value": {
          "description": "The value of account identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[A-Za-z0-9-_.+/ =]+",
            "maxLength": 125,
            "minLength": 1
          }
        }
      },
      "alias": "identifier"
    },
    "IndividualBeneficialOwner": {
      "description": "The individual owner of the account.",
      "fields": {
        "addresses": {
          "description": "The list of addresses associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonAddressDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "birth_details": {
          "description": "Date of birth data provided by the user",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BirthDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "citizenship": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "documents": {
          "description": "A person's or party's related document data collected from the customer. For example SSN, ITIN, or business registration number collected from the user. Note: This field is not applicable for POST [/v2/customer/partner-referrals](/docs/api/partner-referrals/v2/#partner-referrals_create) API calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonDocument",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The encrypted party ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z]+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "names": {
          "description": "The name of the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonName",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "percentage_of_ownership": {
          "description": "The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_percentage_v2",
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
          }
        },
        "phones": {
          "description": "The list of phone numbers associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonPhoneDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "IndividualBeneficialOwnerInput": {
      "description": "The individual owner of the account.",
      "fields": {
        "addresses": {
          "description": "The list of addresses associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonAddressDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "birth_details": {
          "description": "Date of birth data provided by the user",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BirthDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "citizenship": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "documents": {
          "description": "A person's or party's related document data collected from the customer. For example SSN, ITIN, or business registration number collected from the user. Note: This field is not applicable for POST [/v2/customer/partner-referrals](/docs/api/partner-referrals/v2/#partner-referrals_create) API calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonDocumentInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "names": {
          "description": "The name of the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonNameInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "percentage_of_ownership": {
          "description": "The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_percentage_v2",
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
          }
        },
        "phones": {
          "description": "The list of phone numbers associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonPhoneDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "IndividualOwner": {
      "description": "The individual owner of the account.",
      "fields": {
        "addresses": {
          "description": "The list of addresses associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonAddressDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "birth_details": {
          "description": "Date of birth data provided by the user",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BirthDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "citizenship": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "documents": {
          "description": "A person's or party's related document data collected from the customer. For example SSN, ITIN, or business registration number collected from the user. Note: This field is not applicable for POST [/v2/customer/partner-referrals](/docs/api/partner-referrals/v2/#partner-referrals_create) API calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonDocument",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The encrypted party ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z]+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "names": {
          "description": "The name of the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonName",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "phones": {
          "description": "The list of phone numbers associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonPhoneDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "type": {
          "description": "Role of the person party played in the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IndividualOwnerType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "IndividualOwnerInput": {
      "description": "The individual owner of the account.",
      "fields": {
        "addresses": {
          "description": "The list of addresses associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonAddressDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "birth_details": {
          "description": "Date of birth data provided by the user",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BirthDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "citizenship": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "documents": {
          "description": "A person's or party's related document data collected from the customer. For example SSN, ITIN, or business registration number collected from the user. Note: This field is not applicable for POST [/v2/customer/partner-referrals](/docs/api/partner-referrals/v2/#partner-referrals_create) API calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonDocumentInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "names": {
          "description": "The name of the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonNameInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "phones": {
          "description": "The list of phone numbers associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonPhoneDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "type": {
          "description": "Role of the person party played in the account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IndividualOwnerType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "IntegrationDetails": {
      "description": "The integration details for the partner and customer relationship. Required if `operation` is `API_INTEGRATION`.",
      "fields": {
        "classic_api_integration": {
          "description": "The integration details for PayPal CLASSIC endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ClassicApiIntegration",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "rest_api_integration": {
          "description": "The integration details for PayPal REST endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegration",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "integration_details"
    },
    "IntegrationDetailsInput": {
      "description": "The integration details for the partner and customer relationship. Required if `operation` is `API_INTEGRATION`.",
      "fields": {
        "classic_api_integration": {
          "description": "The integration details for PayPal CLASSIC endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ClassicApiIntegration",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "rest_api_integration": {
          "description": "The integration details for PayPal REST endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegrationInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "integration_details"
    },
    "LegalConsent": {
      "description": "The customer-provided consent.",
      "fields": {
        "granted": {
          "description": "Indicates whether the customer agreed to share this type of data. To give consent, specify `true`. To withhold consent, specify `false`.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "type": {
          "description": "The type of consent. `SHARE_DATA_CONSENT` gives consent to you to share your customer's data with PayPal.",
          "type": {
            "name": "LegalConsentTypeEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 127,
            "minLength": 1
          }
        }
      },
      "alias": "legal_consent"
    },
    "LegalConsentInput": {
      "description": "The customer-provided consent.",
      "fields": {
        "granted": {
          "description": "Indicates whether the customer agreed to share this type of data. To give consent, specify `true`. To withhold consent, specify `false`.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "type": {
          "description": "The type of consent. `SHARE_DATA_CONSENT` gives consent to you to share your customer's data with PayPal.",
          "type": {
            "name": "LegalConsentTypeEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 127,
            "minLength": 1
          }
        }
      },
      "alias": "legal_consent"
    },
    "LinkDescription": {
      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
      "fields": {
        "href": {
          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "method": {
          "description": "The HTTP method required to make the related call.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "LinkDescriptionMethodEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rel": {
          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "link_description"
    },
    "Mandate": {
      "description": "Sellers consent to operate on this financial instrument.",
      "fields": {
        "accepted": {
          "description": "Whether mandate was accepted or not.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "mandate"
    },
    "MandateInput": {
      "description": "Sellers consent to operate on this financial instrument.",
      "fields": {
        "accepted": {
          "description": "Whether mandate was accepted or not.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "mandate"
    },
    "Money": {
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "fields": {
        "currency_code": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3
          }
        },
        "value": {
          "description": "The value, which might be:An integer for currencies like `JPY` that are not typically fractional.A decimal fraction for currencies like `TND` that are subdivided into thousandths.For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
            "maxLength": 32
          }
        }
      },
      "alias": "money"
    },
    "MoneyInput": {
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "fields": {
        "currency_code": {
          "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_currency_code_v2",
            "maxLength": 3,
            "minLength": 3
          }
        },
        "value": {
          "description": "The value, which might be:An integer for currencies like `JPY` that are not typically fractional.A decimal fraction for currencies like `TND` that are subdivided into thousandths.For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
            "maxLength": 32
          }
        }
      },
      "alias": "money"
    },
    "OfficeBearer": {
      "description": "The office bearer associated to the account.",
      "fields": {
        "addresses": {
          "description": "The list of addresses associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonAddressDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "birth_details": {
          "description": "Date of birth data provided by the user",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BirthDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "citizenship": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "documents": {
          "description": "A person's or party's related document data collected from the customer. For example SSN, ITIN, or business registration number collected from the user. Note: This field is not applicable for POST [/v2/customer/partner-referrals](/docs/api/partner-referrals/v2/#partner-referrals_create) API calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonDocument",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The encrypted party ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z]+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "names": {
          "description": "The name of the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonName",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "phones": {
          "description": "The list of phone numbers associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonPhoneDetail",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "role": {
          "description": "Role of the person party played in the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OfficeBearerRole",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "OfficeBearerInput": {
      "description": "The office bearer associated to the account.",
      "fields": {
        "addresses": {
          "description": "The list of addresses associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonAddressDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "birth_details": {
          "description": "Date of birth data provided by the user",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BirthDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "citizenship": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "documents": {
          "description": "A person's or party's related document data collected from the customer. For example SSN, ITIN, or business registration number collected from the user. Note: This field is not applicable for POST [/v2/customer/partner-referrals](/docs/api/partner-referrals/v2/#partner-referrals_create) API calls.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonDocumentInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "names": {
          "description": "The name of the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonNameInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "phones": {
          "description": "The list of phone numbers associated with the person.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PersonPhoneDetailInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "role": {
          "description": "Role of the person party played in the business.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OfficeBearerRole",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "Operation": {
      "description": "The required operation to share data.",
      "fields": {
        "api_integration_preference": {
          "description": "The integration details for the partner and customer relationship. Required if `operation` is `API_INTEGRATION`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IntegrationDetails",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "billing_agreement": {
          "description": "The details of the billing agreement between the partner and a seller.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BillingAgreement",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "operation": {
          "description": "The operation to enable for the customer. To enable the collection of the API permissions that you require to integrate with the customer, specify `API_INTEGRATION`. `BANK_ADDITION` is supported only for the US.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OperationOperationEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "operation"
    },
    "OperationInput": {
      "description": "The required operation to share data.",
      "fields": {
        "api_integration_preference": {
          "description": "The integration details for the partner and customer relationship. Required if `operation` is `API_INTEGRATION`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "IntegrationDetailsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "billing_agreement": {
          "description": "The details of the billing agreement between the partner and a seller.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BillingAgreementInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "operation": {
          "description": "The operation to enable for the customer. To enable the collection of the API permissions that you require to integrate with the customer, specify `API_INTEGRATION`. `BANK_ADDITION` is supported only for the US.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OperationOperationEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      },
      "alias": "operation"
    },
    "PartnerConfigOverride": {
      "description": "The preference to customize the web experience of the customer by overriding that is set at the Partner's Account.",
      "fields": {
        "action_renewal_url": {
          "description": "If `renew_action_url` expires, redirect the customer to this URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "partner_logo_url": {
          "description": "The partner logo URL to display in the customer's onboarding flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "return_url": {
          "description": "The URL to which to redirect the customer upon completion of the onboarding process.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "return_url_description": {
          "description": "The description of the return URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.+$",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "show_add_credit_card": {
          "description": "Indicates whether to show an add credit card page.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "partner_config_override"
    },
    "PartnerConfigOverrideInput": {
      "description": "The preference to customize the web experience of the customer by overriding that is set at the Partner's Account.",
      "fields": {
        "action_renewal_url": {
          "description": "If `renew_action_url` expires, redirect the customer to this URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "partner_logo_url": {
          "description": "The partner logo URL to display in the customer's onboarding flow.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "return_url": {
          "description": "The URL to which to redirect the customer upon completion of the onboarding process.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "return_url_description": {
          "description": "The description of the return URL.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^.+$",
            "maxLength": 127,
            "minLength": 1
          }
        },
        "show_add_credit_card": {
          "description": "Indicates whether to show an add credit card page.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "partner_config_override"
    },
    "PayoutAttributes": {
      "description": "Payout specific attributes.",
      "fields": {
        "country_transfer_method_currency_selection": {
          "description": "Requested country, transfer method and currency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CountryTransferMethodCurrencySelection",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "kyc_required": {
          "description": "If `true`, specifies that the Kyc is required for the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "marketplace": {
          "description": "If `true`, specifies that the merchant or platform is offering goods or services on behalf of 3rd party sellers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "payout_attributes"
    },
    "PayoutAttributesInput": {
      "description": "Payout specific attributes.",
      "fields": {
        "country_transfer_method_currency_selection": {
          "description": "Requested country, transfer method and currency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CountryTransferMethodCurrencySelectionInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "kyc_required": {
          "description": "If `true`, specifies that the Kyc is required for the merchant.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "marketplace": {
          "description": "If `true`, specifies that the merchant or platform is offering goods or services on behalf of 3rd party sellers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "payout_attributes"
    },
    "PersonAddressDetail": {
      "description": "A simple postal address with coarse-grained fields.",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableAddressDetailsObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A kanton.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:Brazil. Suburb, bairro, or neighborhood.India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code for Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "inactive": {
          "description": "Whether this address has been inactivated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        },
        "primary": {
          "description": "Whether this is the primary address of the user. This cannot be directly set to `false`, but rather it is toggled `false` in the datastore when another address is set to primary.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "type": {
          "description": "The address type under which the provided address is tagged.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PersonAddressType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "PersonAddressDetailInput": {
      "description": "A simple postal address with coarse-grained fields.",
      "fields": {
        "address_details": {
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddressPortableAddressDetailsObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "address_line_1": {
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_2": {
          "description": "The second line of the address. For example, suite or apartment number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "address_line_3": {
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_1": {
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:UK. A county.US. A state.Canada. A province.Japan. A prefecture.Switzerland. A kanton.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "admin_area_2": {
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 120
          }
        },
        "admin_area_3": {
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:Brazil. Suburb, bairro, or neighborhood.India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "admin_area_4": {
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:The postal sorting code for Guernsey and many French territories, such as French Guiana.The fine-grained administrative levels in China.</ul>",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "postal_code": {
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 60
          }
        },
        "primary": {
          "description": "Whether this is the primary address of the user. This cannot be directly set to `false`, but rather it is toggled `false` in the datastore when another address is set to primary.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "type": {
          "description": "The address type under which the provided address is tagged.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PersonAddressType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "PersonDocument": {
      "description": "The documents associated with the person.",
      "fields": {
        "expiry_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "files": {
          "description": "The files contained in the document. For example, a document could be represented by a front page file and a back page file, etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "FileReference",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "id": {
          "description": "The encrypted identifier for the document.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z]+$",
            "maxLength": 20,
            "minLength": 1
          }
        },
        "identification_number": {
          "description": "The number for the document. It is the ID number if the document is `ID CARD`, the passport number if the document is `PASSPORT`, etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-]+$",
            "maxLength": 100,
            "minLength": 1
          }
        },
        "issue_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "issuing_country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "labels": {
          "description": "The document labels. A document could be classfied to multiple categories. For example, a bill document can be classfified as `BILL DOCUMENT` and `UTILITY DOCUMENT`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "links": {
          "description": "The HATEOAS links.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "name": {
          "description": "The file name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Za-z_-]+$",
            "maxLength": 100,
            "minLength": 1
          }
        },
        "type": {
          "description": "The type of documents.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PersonDocumentType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "PersonDocumentInput": {
      "description": "The documents associated with the person.",
      "fields": {
        "expiry_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "files": {
          "description": "The files contained in the document. For example, a document could be represented by a front page file and a back page file, etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "FileReferenceInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "identification_number": {
          "description": "The number for the document. It is the ID number if the document is `ID CARD`, the passport number if the document is `PASSPORT`, etc.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-]+$",
            "maxLength": 100,
            "minLength": 1
          }
        },
        "issue_date": {
          "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_date_notime_v2",
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
            "maxLength": 10,
            "minLength": 10
          }
        },
        "issuing_country_code": {
          "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.Note: The country code for Great Britain is GB and not UK as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_country_code_v2",
            "pattern": "^([A-Z]{2}|C2)$",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "labels": {
          "description": "The document labels. A document could be classfied to multiple categories. For example, a bill document can be classfified as `BILL DOCUMENT` and `UTILITY DOCUMENT`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "The file name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Za-z_-]+$",
            "maxLength": 100,
            "minLength": 1
          }
        },
        "type": {
          "description": "The type of documents.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PersonDocumentType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "PersonName": {
      "description": "The name of the person.",
      "fields": {
        "full_name": {
          "description": "When the party is a person, the party's full name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "given_name": {
          "description": "When the party is a person, the party's given, or first, name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "middle_name": {
          "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "prefix": {
          "description": "The prefix, or title, to the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "suffix": {
          "description": "The suffix for the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "surname": {
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "type": {
          "description": "The person's name type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PersonNameType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "PersonNameInput": {
      "description": "The name of the person.",
      "fields": {
        "full_name": {
          "description": "When the party is a person, the party's full name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 300
          }
        },
        "given_name": {
          "description": "When the party is a person, the party's given, or first, name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "middle_name": {
          "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "prefix": {
          "description": "The prefix, or title, to the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "suffix": {
          "description": "The suffix for the party's name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "surname": {
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 140
          }
        },
        "type": {
          "description": "The person's name type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PersonNameType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_]+$",
            "maxLength": 255,
            "minLength": 1
          }
        }
      }
    },
    "PersonPhoneDetail": {
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "fields": {
        "contact_name": {
          "description": "The name that the phone number is connected to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 900,
            "minLength": 1
          }
        },
        "country_code": {
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,3}?$",
            "maxLength": 3,
            "minLength": 1
          }
        },
        "extension_number": {
          "description": "The extension number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,15}?$",
            "maxLength": 15,
            "minLength": 1
          }
        },
        "inactive": {
          "description": "Whether this phone number has been inactivated by the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "national_number": {
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,14}?$",
            "maxLength": 14,
            "minLength": 1
          }
        },
        "primary": {
          "description": "Whether this is the primary contact phone number of the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "primary_mobile": {
          "description": "Whether this is the primary mobile phone number of the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "tags": {
          "description": "Array of tags for this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PhoneNumberTag",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        },
        "type": {
          "description": "The phone type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PhoneType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "PersonPhoneDetailInput": {
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "fields": {
        "contact_name": {
          "description": "The name that the phone number is connected to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 900,
            "minLength": 1
          }
        },
        "country_code": {
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,3}?$",
            "maxLength": 3,
            "minLength": 1
          }
        },
        "extension_number": {
          "description": "The extension number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,15}?$",
            "maxLength": 15,
            "minLength": 1
          }
        },
        "national_number": {
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9]{1,14}?$",
            "maxLength": 14,
            "minLength": 1
          }
        },
        "primary": {
          "description": "Whether this is the primary contact phone number of the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "primary_mobile": {
          "description": "Whether this is the primary mobile phone number of the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "tags": {
          "description": "Array of tags for this phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PhoneNumberTag",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_]+$",
              "maxLength": 255,
              "minLength": 1
            }
          }
        },
        "type": {
          "description": "The phone type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PhoneType",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ReferralData": {
      "description": "The customer's referral data that partners share with PayPal.",
      "fields": {
        "business_entity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessEntity",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "capabilities": {
          "description": "An array of capabilities which the partner wants to enable for the selected products. Supported only when products are specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Capabilities",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9_]+$",
              "maxLength": 127,
              "minLength": 1
            }
          }
        },
        "email": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_email_address_v2",
            "pattern": "^.+@[^\"\\-].+$",
            "maxLength": 254,
            "minLength": 3
          }
        },
        "financial_instruments": {
          "description": "Financial instruments attached to this account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FinancialInstruments",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "individual_owners": {
          "description": "List of owners in the account. There should be only one primary account owner which is mentioned in their role_type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IndividualOwner",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "legal_consents": {
          "description": "An array of all consents that the partner has received from this seller. If `SHARE_DATA_CONSENT` is not granted, PayPal does not store customer data.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LegalConsent",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "operations": {
          "description": "An array of operations to perform for the customer while they share their data.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Operation",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "outside_process_dependencies": {
          "description": "An array of dependent processes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "DependentProcess",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {}
          }
        },
        "partner_config_override": {
          "description": "The preference to customize the web experience of the customer by overriding that is set at the Partner's Account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PartnerConfigOverride",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payout_attributes": {
          "description": "Payout specific attributes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayoutAttributes",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "preferred_language_code": {
          "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/docs/integration/direct/rest/country-codes/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_language_v3",
            "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}))?$",
            "maxLength": 10,
            "minLength": 2
          }
        },
        "products": {
          "description": "An array of PayPal products to which the partner wants to onboard the customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Product",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_-]+$",
              "maxLength": 127,
              "minLength": 1
            }
          }
        },
        "tracking_id": {
          "description": "The partner's unique identifier for this customer in their system which can be used to track user in PayPal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127,
            "minLength": 1
          }
        }
      }
    },
    "ReferralDataInput": {
      "description": "The customer's referral data that partners share with PayPal.",
      "fields": {
        "business_entity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BusinessEntityInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "capabilities": {
          "description": "An array of capabilities which the partner wants to enable for the selected products. Supported only when products are specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Capabilities",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[A-Z0-9_]+$",
              "maxLength": 127,
              "minLength": 1
            }
          }
        },
        "email": {
          "description": "The internationalized email address.Note: Up to 64 characters are allowed before and 255 characters are allowed after the @ sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted @ sign exists.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_email_address_v2",
            "pattern": "^.+@[^\"\\-].+$",
            "maxLength": 254,
            "minLength": 3
          }
        },
        "financial_instruments": {
          "description": "Financial instruments attached to this account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "FinancialInstrumentsInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "individual_owners": {
          "description": "List of owners in the account. There should be only one primary account owner which is mentioned in their role_type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "IndividualOwnerInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "legal_consents": {
          "description": "An array of all consents that the partner has received from this seller. If `SHARE_DATA_CONSENT` is not granted, PayPal does not store customer data.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LegalConsentInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "operations": {
          "description": "An array of operations to perform for the customer while they share their data.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "OperationInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "outside_process_dependencies": {
          "description": "An array of dependent processes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "DependentProcess",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {}
          }
        },
        "partner_config_override": {
          "description": "The preference to customize the web experience of the customer by overriding that is set at the Partner's Account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PartnerConfigOverrideInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "payout_attributes": {
          "description": "Payout specific attributes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PayoutAttributesInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "preferred_language_code": {
          "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/docs/integration/direct/rest/country-codes/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "ppaas_common_language_v3",
            "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}))?$",
            "maxLength": 10,
            "minLength": 2
          }
        },
        "products": {
          "description": "An array of PayPal products to which the partner wants to onboard the customer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Product",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_-]+$",
              "maxLength": 127,
              "minLength": 1
            }
          }
        },
        "tracking_id": {
          "description": "The partner's unique identifier for this customer in their system which can be used to track user in PayPal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 127,
            "minLength": 1
          }
        }
      }
    },
    "ReferralDataResponse": {
      "description": "The share referral data response.",
      "fields": {
        "links": {
          "description": "An array of request-related [HATEOAS links](/docs/api/overview/#hateoas-links).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "LinkDescription",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "partner_referral_id": {
          "description": "The ID to access the customer's data shared by the partner with PayPal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Za-z_-.]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "referral_data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ReferralData",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "submitter_payer_id": {
          "description": "The payer ID of the partner who shared the referral data.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z]+$",
            "maxLength": 20,
            "minLength": 1
          }
        }
      },
      "alias": "referral_data_response"
    },
    "RestApiIntegration": {
      "description": "The integration details for PayPal REST endpoints.",
      "fields": {
        "first_party_details": {
          "description": "The integration details for PayPal first party REST endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegrationFirstPartyDetailsObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "integration_method": {
          "description": "The REST-credential integration method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegrationIntegrationMethodEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "integration_type": {
          "description": "The type of REST-endpoint integration. To integrate with Braintree v.zero for PayPal REST endpoints, specify `third_party_details`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegrationIntegrationTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "third_party_details": {
          "description": "The integration details for PayPal REST endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegrationThirdPartyDetailsObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "rest_api_integration"
    },
    "RestApiIntegrationFirstPartyDetailsObject": {
      "description": "The integration details for PayPal first party REST endpoints.",
      "fields": {
        "features": {
          "description": "An array of features that partner can access, or use, in PayPal on behalf of the seller. The seller grants permission for these features to the partner.",
          "type": {
            "element_type": {
              "name": "RestEndpointFeaturesEnum",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_-]+$",
              "maxLength": 100,
              "minLength": 1
            }
          }
        },
        "seller_nonce": {
          "description": "S256 - The code verifier must be high-entropy cryptographic random string with a byte length of 43-128 range.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-_:]+$",
            "maxLength": 128,
            "minLength": 44
          }
        }
      }
    },
    "RestApiIntegrationFirstPartyDetailsObjectInput": {
      "description": "The integration details for PayPal first party REST endpoints.",
      "fields": {
        "features": {
          "description": "An array of features that partner can access, or use, in PayPal on behalf of the seller. The seller grants permission for these features to the partner.",
          "type": {
            "element_type": {
              "name": "RestEndpointFeaturesEnum",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_-]+$",
              "maxLength": 100,
              "minLength": 1
            }
          }
        },
        "seller_nonce": {
          "description": "S256 - The code verifier must be high-entropy cryptographic random string with a byte length of 43-128 range.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z0-9-_:]+$",
            "maxLength": 128,
            "minLength": 44
          }
        }
      }
    },
    "RestApiIntegrationInput": {
      "description": "The integration details for PayPal REST endpoints.",
      "fields": {
        "first_party_details": {
          "description": "The integration details for PayPal first party REST endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegrationFirstPartyDetailsObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "integration_method": {
          "description": "The REST-credential integration method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegrationIntegrationMethodEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "integration_type": {
          "description": "The type of REST-endpoint integration. To integrate with Braintree v.zero for PayPal REST endpoints, specify `third_party_details`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegrationIntegrationTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "third_party_details": {
          "description": "The integration details for PayPal REST endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RestApiIntegrationThirdPartyDetailsObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      },
      "alias": "rest_api_integration"
    },
    "RestApiIntegrationThirdPartyDetailsObject": {
      "description": "The integration details for PayPal REST endpoints.",
      "fields": {
        "features": {
          "description": "An array of features that partner can access, or use, in PayPal on behalf of the seller. The seller grants permission for these features to the partner.",
          "type": {
            "element_type": {
              "name": "RestEndpointFeaturesEnum",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_-]+$",
              "maxLength": 100,
              "minLength": 1
            }
          }
        }
      }
    },
    "RestApiIntegrationThirdPartyDetailsObjectInput": {
      "description": "The integration details for PayPal REST endpoints.",
      "fields": {
        "features": {
          "description": "An array of features that partner can access, or use, in PayPal on behalf of the seller. The seller grants permission for these features to the partner.",
          "type": {
            "element_type": {
              "name": "RestEndpointFeaturesEnum",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "pattern": "^[0-9A-Z_-]+$",
              "maxLength": 100,
              "minLength": 1
            }
          }
        }
      }
    },
    "TransferMethod": {
      "description": "Requested transfer method and currency for a country.",
      "fields": {
        "currencies": {
          "description": "Requested Currencies for a Transfer Method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "ppaas_common_currency_code_v2",
              "maxLength": 3,
              "minLength": 3
            }
          }
        },
        "transfer_method_type": {
          "description": "Transfer Method type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransferMethodTransferMethodTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      },
      "alias": "transfer_method"
    },
    "TransferMethodInput": {
      "description": "Requested transfer method and currency for a country.",
      "fields": {
        "currencies": {
          "description": "Requested Currencies for a Transfer Method.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "ppaas_common_currency_code_v2",
              "maxLength": 3,
              "minLength": 3
            }
          }
        },
        "transfer_method_type": {
          "description": "Transfer Method type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransferMethodTransferMethodTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[0-9A-Z_-]+$",
            "maxLength": 50,
            "minLength": 1
          }
        }
      },
      "alias": "transfer_method"
    }
  },
  "procedures": {
    "partner_referrals_create": {
      "request": {
        "url": "/v2/customer/partner-referrals",
        "method": "post",
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/customer/partner-referrals/readwrite"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v2/customer/partner-referrals",
          "type": {
            "name": "ReferralDataInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create partner referral",
      "result_type": {
        "name": "CreateReferralDataResponse",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "BankAccountTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CHECKING",
          "SAVINGS"
        ],
        "type": "enum"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "BusinessAddressType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "WORK"
        ],
        "type": "enum"
      }
    },
    "BusinessDocumentType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SOCIAL_SECURITY_NUMBER",
          "EMPLOYMENT_IDENTIFICATION_NUMBER",
          "TAX_IDENTIFICATION_NUMBER",
          "PASSPORT_NUMBER",
          "PENSION_FUND_ID",
          "MEDICAL_INSURANCE_ID",
          "CNPJ",
          "CPF",
          "PAN"
        ],
        "type": "enum"
      }
    },
    "BusinessNameType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "DOING_BUSINESS_AS",
          "LEGAL_NAME"
        ],
        "type": "enum"
      }
    },
    "BusinessPhoneType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CUSTOMER_SERVICE",
          "BUSINESS"
        ],
        "type": "enum"
      }
    },
    "BusinessSubType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ASSO_TYPE_INCORPORATED",
          "ASSO_TYPE_NON_INCORPORATED",
          "GOVT_TYPE_ENTITY",
          "GOVT_TYPE_EMANATION",
          "GOVT_TYPE_ESTD_COMM",
          "GOVT_TYPE_ESTD_FC",
          "GOVT_TYPE_ESTD_ST_TR"
        ],
        "type": "enum"
      }
    },
    "BusinessType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "ANY_OTHER_BUSINESS_ENTITY",
          "ASSOCIATION",
          "CORPORATION",
          "GENERAL_PARTNERSHIP",
          "GOVERNMENT",
          "INDIVIDUAL",
          "LIMITED_LIABILITY_PARTNERSHIP",
          "LIMITED_LIABILITY_PROPRIETORS",
          "LIMITED_LIABILITY_PRIVATE_CORPORATION",
          "LIMITED_PARTNERSHIP",
          "LIMITED_PARTNERSHIP_PRIVATE_CORPORATION",
          "NONPROFIT",
          "ONLY_BUY_OR_SEND_MONEY",
          "OTHER_CORPORATE_BODY",
          "PARTNERSHIP",
          "PRIVATE_PARTNERSHIP",
          "PROPRIETORSHIP",
          "PROPRIETORSHIP_CRAFTSMAN",
          "PROPRIETORY_COMPANY",
          "PRIVATE_CORPORATION",
          "PUBLIC_COMPANY",
          "PUBLIC_CORPORATION",
          "PUBLIC_PARTNERSHIP",
          "REGISTERED_COOPERATIVE"
        ],
        "type": "enum"
      }
    },
    "Capabilities": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PAYPAL_WALLET_VAULTING_ADVANCED",
          "PAY_UPON_INVOICE",
          "APPLE_PAY"
        ],
        "type": "enum"
      }
    },
    "ClassicApiIntegration": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "DependentProcess": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "EmailTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CUSTOMER_SERVICE"
        ],
        "type": "enum"
      }
    },
    "IdentifierTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BANK_CODE",
          "BI_CODE",
          "ROUTING_NUMBER_1",
          "ROUTING_NUMBER_2",
          "ROUTING_NUMBER_3",
          "SWIFT_CODE",
          "BRANCH_CODE",
          "INTERMEDIARY_SWIFT_CODE",
          "BBAN",
          "BBAN_ENCRYPTED",
          "BBAN_HMAC",
          "AGGREGATOR_YODLEE"
        ],
        "type": "enum"
      }
    },
    "IndividualOwnerType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PRIMARY"
        ],
        "type": "enum"
      }
    },
    "LegalConsentTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SHARE_DATA_CONSENT"
        ],
        "type": "enum"
      }
    },
    "LinkDescriptionMethodEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "HEAD",
          "CONNECT",
          "OPTIONS",
          "PATCH"
        ],
        "type": "enum"
      }
    },
    "OfficeBearerRole": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "CEO",
          "CHAIRMAN",
          "DIRECTOR",
          "SECRETARY",
          "TREASURER",
          "TRUSTEE"
        ],
        "type": "enum"
      }
    },
    "OperationOperationEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "API_INTEGRATION",
          "BANK_ADDITION",
          "BILLING_AGREEMENT",
          "CONTEXTUAL_MARKETING_CONSENT",
          "SALESFORCE_REFERRAL"
        ],
        "type": "enum"
      }
    },
    "PersonAddressType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "HOME"
        ],
        "type": "enum"
      }
    },
    "PersonDocumentType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "SOCIAL_SECURITY_NUMBER",
          "EMPLOYMENT_IDENTIFICATION_NUMBER",
          "TAX_IDENTIFICATION_NUMBER",
          "PASSPORT_NUMBER",
          "PENSION_FUND_ID",
          "MEDICAL_INSURANCE_ID",
          "CNPJ",
          "CPF",
          "PAN"
        ],
        "type": "enum"
      }
    },
    "PersonNameType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "LEGAL"
        ],
        "type": "enum"
      }
    },
    "PhoneNumberTag": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "MOBILE",
          "LANDLINE"
        ],
        "type": "enum"
      }
    },
    "PhoneType": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "FAX",
          "HOME",
          "MOBILE",
          "OTHER",
          "PAGER"
        ],
        "type": "enum"
      }
    },
    "Product": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "EXPRESS_CHECKOUT",
          "PAYPAL_COMMERCE_PLATFORM_BUSINESS",
          "PPPLUS",
          "WEBSITE_PAYMENT_PRO",
          "PAYMENT_METHODS",
          "PPCP",
          "ADVANCED_VAULTING",
          "IZETTLE"
        ],
        "type": "enum"
      }
    },
    "PurposeCodeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "P0104",
          "P0301",
          "P0801",
          "P0802",
          "P0803",
          "P0805",
          "P0806",
          "P0902",
          "P1004",
          "P1005",
          "P1006",
          "P1007",
          "P1008",
          "P1009"
        ],
        "type": "enum"
      }
    },
    "RestApiIntegrationIntegrationMethodEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BRAINTREE",
          "PAYPAL"
        ],
        "type": "enum"
      }
    },
    "RestApiIntegrationIntegrationTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "FIRST_PARTY",
          "THIRD_PARTY"
        ],
        "type": "enum"
      }
    },
    "RestEndpointFeaturesEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "PAYOUTS",
          "PAYMENT",
          "REFUND",
          "FUTURE_PAYMENT",
          "DIRECT_PAYMENT",
          "PARTNER_FEE",
          "DELAY_FUNDS_DISBURSEMENT",
          "READ_SELLER_DISPUTE",
          "UPDATE_SELLER_DISPUTE",
          "ADVANCED_TRANSACTIONS_SEARCH",
          "SWEEP_FUNDS_EXTERNAL_SINK",
          "ACCESS_MERCHANT_INFORMATION",
          "TRACKING_SHIPMENT_READWRITE",
          "INVOICE_READ_WRITE",
          "DISPUTE_READ_BUYER",
          "UPDATE_CUSTOMER_DISPUTES",
          "VAULT",
          "BILLING_AGREEMENT"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TransferMethodTransferMethodTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "BANK_ACCOUNT",
          "PAYPAL",
          "VENMO",
          "WIRE_ACCOUNT"
        ],
        "type": "enum"
      }
    },
    "URIString": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
