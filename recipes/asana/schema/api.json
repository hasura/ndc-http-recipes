{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://app.asana.com/api/1.0",
          "env": "ASANA_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://app.asana.com/-/oauth_authorize",
            "tokenUrl": {
              "value": "https://app.asana.com/-/oauth_token",
              "env": "ASANA_OAUTH2_TOKEN_URL"
            },
            "refreshUrl": "https://app.asana.com/-/oauth_token",
            "scopes": {
              "attachments:write": "Create and modify access to attachments",
              "default": "Provides access to all endpoints documented in our API reference. If no scopes are requested, this scope is assumed by default.",
              "email": "Provides access to the users email through the OpenID Connect user info endpoint.",
              "goals:read": "View access to goals",
              "openid": "Provides access to OpenID Connect ID tokens and the OpenID Connect user info endpoint.",
              "portfolios:read": "View access to portfolios",
              "profile": "Provides access to the users name and profile photo through the OpenID Connect user info endpoint.",
              "project_templates:read": "View access to project templates",
              "projects:delete": "Delete access to projects",
              "projects:read": "View access to projects",
              "projects:write": "Create and modify access to projects",
              "stories:read": "View access to stories",
              "tasks:delete": "Delete access to tasks",
              "tasks:read": "View access to tasks",
              "tasks:write": "Create and modify access to tasks",
              "teams:read": "View access to teams",
              "users:read": "View access to users",
              "workspaces:read": "View access to workspaces"
            }
          }
        }
      },
      "personalAccessToken": {
        "type": "http",
        "header": "Authorization",
        "scheme": "bearer",
        "value": {
          "env": "ASANA_PERSONAL_ACCESS_TOKEN"
        }
      }
    },
    "security": [
      {
        "personalAccessToken": []
      },
      {
        "personalAccessToken": []
      }
    ],
    "version": "1.0"
  },
  "functions": {
    "getAllocation": {
      "request": {
        "url": "/allocations/{allocation_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "allocation_gid": {
          "description": "Globally unique identifier for the allocation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "allocation_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetAllocationOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Get an allocation",
      "result_type": {
        "name": "GetAllocationResultObject",
        "type": "named"
      }
    },
    "getAllocations": {
      "request": {
        "url": "/allocations",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "assignee": {
          "description": "Globally unique identifier for the user or placeholder the allocation is assigned to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "assignee",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetAllocationsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "parent": {
          "description": "Globally unique identifier for the project to filter allocations by.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "parent",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "Globally unique identifier for the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple allocations",
      "result_type": {
        "name": "GetAllocationsResultObject",
        "type": "named"
      }
    },
    "getAttachment": {
      "request": {
        "url": "/attachments/{attachment_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "attachment_gid": {
          "description": "Globally unique identifier for the attachment.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "attachment_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetAttachmentOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Get an attachment",
      "result_type": {
        "name": "GetAttachmentResultObject",
        "type": "named"
      }
    },
    "getAttachmentsForObject": {
      "request": {
        "url": "/attachments",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetAttachmentsForObjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "parent": {
          "description": "Globally unique identifier for object to fetch statuses from. Must be a GID for a `project`, `project_brief`, or `task`.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "parent",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get attachments from an object",
      "result_type": {
        "name": "GetAttachmentsForObjectResultObject",
        "type": "named"
      }
    },
    "getAuditLogEvents": {
      "request": {
        "url": "/workspaces/{workspace_gid}/audit_log_events",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "actor_gid": {
          "description": "Filter to events triggered by the actor with this ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "actor_gid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "actor_type": {
          "description": "Filter to events with an actor of this type. This only needs to be included if querying for actor types without an ID. If `actor_gid` is included, this should be excluded.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GetAuditLogEventsActorTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "name": "actor_type",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "end_at": {
          "description": "Filter to events created before this time (exclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "end_at",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "event_type": {
          "description": "Filter to events of this type. Refer to the [supported audit log events](/docs/audit-log-events#supported-audit-log-events) for a full list of values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "event_type",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "resource_gid": {
          "description": "Filter to events with this resource ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "resource_gid",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_at": {
          "description": "Filter to events created after this time (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "start_at",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get audit log events",
      "result_type": {
        "name": "GetAuditLogEventsResultObject",
        "type": "named"
      }
    },
    "getCustomField": {
      "request": {
        "url": "/custom_fields/{custom_field_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "custom_field_gid": {
          "description": "Globally unique identifier for the custom field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "custom_field_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetCustomFieldOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Get a custom field",
      "result_type": {
        "name": "GetCustomFieldResultObject",
        "type": "named"
      }
    },
    "getCustomFieldSettingsForPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}/custom_field_settings",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetCustomFieldSettingsForPortfolioOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a portfolio's custom fields",
      "result_type": {
        "name": "GetCustomFieldSettingsForPortfolioResultObject",
        "type": "named"
      }
    },
    "getCustomFieldSettingsForProject": {
      "request": {
        "url": "/projects/{project_gid}/custom_field_settings",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetCustomFieldSettingsForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a project's custom fields",
      "result_type": {
        "name": "GetCustomFieldSettingsForProjectResultObject",
        "type": "named"
      }
    },
    "getCustomFieldsForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/custom_fields",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetCustomFieldsForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a workspace's custom fields",
      "result_type": {
        "name": "GetCustomFieldsForWorkspaceResultObject",
        "type": "named"
      }
    },
    "getCustomTypes": {
      "request": {
        "url": "/custom_types",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetCustomTypesOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project": {
          "description": "Globally unique identifier for the project, which is used as a filter when retrieving all custom types.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get all custom types associated with an object",
      "result_type": {
        "name": "GetCustomTypesResultObject",
        "type": "named"
      }
    },
    "getDependenciesForTask": {
      "request": {
        "url": "/tasks/{task_gid}/dependencies",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetDependenciesForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get dependencies from a task",
      "result_type": {
        "name": "GetDependenciesForTaskResultObject",
        "type": "named"
      }
    },
    "getDependentsForTask": {
      "request": {
        "url": "/tasks/{task_gid}/dependents",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetDependentsForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get dependents from a task",
      "result_type": {
        "name": "GetDependentsForTaskResultObject",
        "type": "named"
      }
    },
    "getEvents": {
      "request": {
        "url": "/events",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetEventsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "resource": {
          "description": "A resource ID to subscribe to. The resource can be a task, project, or goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "resource",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sync": {
          "description": "A sync token received from the last request, or none on first sync. Events will be returned from the point in time that the sync token was generated. *Note: On your first request, omit the sync token. The response will be the same as for an expired sync token, and will include a new valid sync token.If the sync token is too old (which may happen from time to time) the API will return a `412 Precondition Failed` error, and include a fresh sync token in the response.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "sync",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get events on a resource",
      "result_type": {
        "name": "GetEventsResultObject",
        "type": "named"
      }
    },
    "getFavoritesForUser": {
      "request": {
        "url": "/users/{user_gid}/favorites",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "users:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetFavoritesForUserOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "resource_type": {
          "description": "The resource type of favorites to be returned.",
          "type": {
            "name": "GetFavoritesForUserResourceTypeEnum",
            "type": "named"
          },
          "http": {
            "name": "resource_type",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "user_gid": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "user_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace in which to get favorites.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a user's favorites",
      "result_type": {
        "name": "GetFavoritesForUserResultObject",
        "type": "named"
      }
    },
    "getGoal": {
      "request": {
        "url": "/goals/{goal_gid}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "goals:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetGoalOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Get a goal",
      "result_type": {
        "name": "GetGoalResultObject",
        "type": "named"
      }
    },
    "getGoalRelationship": {
      "request": {
        "url": "/goal_relationships/{goal_relationship_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "goal_relationship_gid": {
          "description": "Globally unique identifier for the goal relationship.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_relationship_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetGoalRelationshipOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Get a goal relationship",
      "result_type": {
        "name": "GetGoalRelationshipResultObject",
        "type": "named"
      }
    },
    "getGoalRelationships": {
      "request": {
        "url": "/goal_relationships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetGoalRelationshipsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "resource_subtype": {
          "description": "If provided, filter to goal relationships with a given resource_subtype.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "resource_subtype",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "supported_goal": {
          "description": "Globally unique identifier for the supported goal in the goal relationship.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "supported_goal",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get goal relationships",
      "result_type": {
        "name": "GetGoalRelationshipsResultObject",
        "type": "named"
      }
    },
    "getGoals": {
      "request": {
        "url": "/goals",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "goals:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "is_workspace_level": {
          "description": "Filter to goals with is_workspace_level set to query value. Must be used with the workspace parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "is_workspace_level",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetGoalsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio": {
          "description": "Globally unique identifier for supporting portfolio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "portfolio",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "project": {
          "description": "Globally unique identifier for supporting project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "project",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "task": {
          "description": "Globally unique identifier for supporting task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "task",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "team": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "team",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "time_periods": {
          "description": "Globally unique identifiers for the time periods.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "name": "time_periods",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "workspace": {
          "description": "Globally unique identifier for the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get goals",
      "result_type": {
        "name": "GetGoalsResultObject",
        "type": "named"
      }
    },
    "getItemsForPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}/items",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "portfolios:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetItemsForPortfolioOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get portfolio items",
      "result_type": {
        "name": "GetItemsForPortfolioResultObject",
        "type": "named"
      }
    },
    "getJob": {
      "request": {
        "url": "/jobs/{job_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "job_gid": {
          "description": "Globally unique identifier for the job.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "job_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetJobOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Get a job by id",
      "result_type": {
        "name": "GetJobResultObject",
        "type": "named"
      }
    },
    "getMembership": {
      "request": {
        "url": "/memberships/{membership_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "membership_gid": {
          "description": "Globally unique identifier for the membership.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "membership_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Get a membership",
      "result_type": {
        "name": "GetMembershipResultObject",
        "type": "named"
      }
    },
    "getMemberships": {
      "request": {
        "url": "/memberships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "member": {
          "description": "Globally unique identifier for `team` or `user`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "member",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetMembershipsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "parent": {
          "description": "Globally unique identifier for `goal`, `project`, `portfolio`, or `custom_field`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "parent",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple memberships",
      "result_type": {
        "name": "GetMembershipsResultObject",
        "type": "named"
      }
    },
    "getOrganizationExport": {
      "request": {
        "url": "/organization_exports/{organization_export_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetOrganizationExportOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "organization_export_gid": {
          "description": "Globally unique identifier for the organization export.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "organization_export_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get details on an org export request",
      "result_type": {
        "name": "GetOrganizationExportResultObject",
        "type": "named"
      }
    },
    "getParentGoalsForGoal": {
      "request": {
        "url": "/goals/{goal_gid}/parentGoals",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "goals:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetParentGoalsForGoalOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Get parent goals from a goal",
      "result_type": {
        "name": "GetParentGoalsForGoalResultObject",
        "type": "named"
      }
    },
    "getPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "portfolios:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetPortfolioOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a portfolio",
      "result_type": {
        "name": "GetPortfolioResultObject",
        "type": "named"
      }
    },
    "getPortfolioMembership": {
      "request": {
        "url": "/portfolio_memberships/{portfolio_membership_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetPortfolioMembershipOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_membership_gid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_membership_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a portfolio membership",
      "result_type": {
        "name": "GetPortfolioMembershipResultObject",
        "type": "named"
      }
    },
    "getPortfolioMemberships": {
      "request": {
        "url": "/portfolio_memberships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetPortfolioMembershipsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio": {
          "description": "The portfolio to filter results on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "portfolio",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "user": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "user",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace to filter results on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple portfolio memberships",
      "result_type": {
        "name": "GetPortfolioMembershipsResultObject",
        "type": "named"
      }
    },
    "getPortfolioMembershipsForPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}/portfolio_memberships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetPortfolioMembershipsForPortfolioOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "user": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "user",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get memberships from a portfolio",
      "result_type": {
        "name": "GetPortfolioMembershipsForPortfolioResultObject",
        "type": "named"
      }
    },
    "getPortfolios": {
      "request": {
        "url": "/portfolios",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "portfolios:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetPortfoliosOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "owner": {
          "description": "The user who owns the portfolio. Currently, API users can only get a list of portfolios that they themselves own, unless the request is made from a Service Account. In the case of a Service Account, if this parameter is specified, then all portfolios owned by this parameter are returned. Otherwise, all portfolios across the workspace are returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "owner",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace or organization to filter portfolios on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple portfolios",
      "result_type": {
        "name": "GetPortfoliosResultObject",
        "type": "named"
      }
    },
    "getProject": {
      "request": {
        "url": "/projects/{project_gid}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "projects:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a project",
      "result_type": {
        "name": "GetProjectResultObject",
        "type": "named"
      }
    },
    "getProjectBrief": {
      "request": {
        "url": "/project_briefs/{project_brief_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectBriefOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_brief_gid": {
          "description": "Globally unique identifier for the project brief.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_brief_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a project brief",
      "result_type": {
        "name": "GetProjectBriefResultObject",
        "type": "named"
      }
    },
    "getProjectMembership": {
      "request": {
        "url": "/project_memberships/{project_membership_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectMembershipOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_membership_gid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_membership_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a project membership",
      "result_type": {
        "name": "GetProjectMembershipResultObject",
        "type": "named"
      }
    },
    "getProjectMembershipsForProject": {
      "request": {
        "url": "/projects/{project_gid}/project_memberships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectMembershipsForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "user": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "user",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get memberships from a project",
      "result_type": {
        "name": "GetProjectMembershipsForProjectResultObject",
        "type": "named"
      }
    },
    "getProjectStatus": {
      "request": {
        "url": "/project_statuses/{project_status_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectStatusOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_status_gid": {
          "description": "The project status update to get.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_status_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a project status",
      "result_type": {
        "name": "GetProjectStatusResultObject",
        "type": "named"
      }
    },
    "getProjectStatusesForProject": {
      "request": {
        "url": "/projects/{project_gid}/project_statuses",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectStatusesForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get statuses from a project",
      "result_type": {
        "name": "GetProjectStatusesForProjectResultObject",
        "type": "named"
      }
    },
    "getProjectTemplate": {
      "request": {
        "url": "/project_templates/{project_template_gid}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "project_templates:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectTemplateOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_template_gid": {
          "description": "Globally unique identifier for the project template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_template_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a project template",
      "result_type": {
        "name": "GetProjectTemplateResultObject",
        "type": "named"
      }
    },
    "getProjectTemplates": {
      "request": {
        "url": "/project_templates",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "project_templates:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectTemplatesOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team": {
          "description": "The team to filter projects on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "team",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace to filter results on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple project templates",
      "result_type": {
        "name": "GetProjectTemplatesResultObject",
        "type": "named"
      }
    },
    "getProjectTemplatesForTeam": {
      "request": {
        "url": "/teams/{team_gid}/project_templates",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "project_templates:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectTemplatesForTeamOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_gid": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a team's project templates",
      "result_type": {
        "name": "GetProjectTemplatesForTeamResultObject",
        "type": "named"
      }
    },
    "getProjects": {
      "request": {
        "url": "/projects",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "projects:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "archived": {
          "description": "Only return projects whose `archived` field takes on the value of this parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team": {
          "description": "The team to filter projects on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "team",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace or organization to filter projects on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple projects",
      "result_type": {
        "name": "GetProjectsResultObject",
        "type": "named"
      }
    },
    "getProjectsForTask": {
      "request": {
        "url": "/tasks/{task_gid}/projects",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "projects:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectsForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get projects a task is in",
      "result_type": {
        "name": "GetProjectsForTaskResultObject",
        "type": "named"
      }
    },
    "getProjectsForTeam": {
      "request": {
        "url": "/teams/{team_gid}/projects",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "projects:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "archived": {
          "description": "Only return projects whose `archived` field takes on the value of this parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectsForTeamOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_gid": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a team's projects",
      "result_type": {
        "name": "GetProjectsForTeamResultObject",
        "type": "named"
      }
    },
    "getProjectsForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/projects",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "projects:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "archived": {
          "description": "Only return projects whose `archived` field takes on the value of this parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetProjectsForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get all projects in a workspace",
      "result_type": {
        "name": "GetProjectsForWorkspaceResultObject",
        "type": "named"
      }
    },
    "getSection": {
      "request": {
        "url": "/sections/{section_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetSectionOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "section_gid": {
          "description": "The globally unique identifier for the section.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "section_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a section",
      "result_type": {
        "name": "GetSectionResultObject",
        "type": "named"
      }
    },
    "getSectionsForProject": {
      "request": {
        "url": "/projects/{project_gid}/sections",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetSectionsForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get sections in a project",
      "result_type": {
        "name": "GetSectionsForProjectResultObject",
        "type": "named"
      }
    },
    "getStatus": {
      "request": {
        "url": "/status_updates/{status_update_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetStatusOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "status_update_gid": {
          "description": "The status update to get.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "status_update_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a status update",
      "result_type": {
        "name": "GetStatusResultObject",
        "type": "named"
      }
    },
    "getStatusesForObject": {
      "request": {
        "url": "/status_updates",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "created_since": {
          "description": "Only return statuses that have been created since the given time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "created_since",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetStatusesForObjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "parent": {
          "description": "Globally unique identifier for object to fetch statuses from. Must be a GID for a project, portfolio, or goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "parent",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get status updates from an object",
      "result_type": {
        "name": "GetStatusesForObjectResultObject",
        "type": "named"
      }
    },
    "getStoriesForTask": {
      "request": {
        "url": "/tasks/{task_gid}/stories",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "stories:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetStoriesForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get stories from a task",
      "result_type": {
        "name": "GetStoriesForTaskResultObject",
        "type": "named"
      }
    },
    "getStory": {
      "request": {
        "url": "/stories/{story_gid}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "stories:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetStoryOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "story_gid": {
          "description": "Globally unique identifier for the story.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "story_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a story",
      "result_type": {
        "name": "GetStoryResultObject",
        "type": "named"
      }
    },
    "getSubtasksForTask": {
      "request": {
        "url": "/tasks/{task_gid}/subtasks",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetSubtasksForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get subtasks from a task",
      "result_type": {
        "name": "GetSubtasksForTaskResultObject",
        "type": "named"
      }
    },
    "getTag": {
      "request": {
        "url": "/tags/{tag_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTagOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "tag_gid": {
          "description": "Globally unique identifier for the tag.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "tag_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a tag",
      "result_type": {
        "name": "GetTagResultObject",
        "type": "named"
      }
    },
    "getTags": {
      "request": {
        "url": "/tags",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTagsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace to filter tags on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple tags",
      "result_type": {
        "name": "GetTagsResultObject",
        "type": "named"
      }
    },
    "getTagsForTask": {
      "request": {
        "url": "/tasks/{task_gid}/tags",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTagsForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a task's tags",
      "result_type": {
        "name": "GetTagsForTaskResultObject",
        "type": "named"
      }
    },
    "getTagsForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/tags",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTagsForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get tags in a workspace",
      "result_type": {
        "name": "GetTagsForWorkspaceResultObject",
        "type": "named"
      }
    },
    "getTask": {
      "request": {
        "url": "/tasks/{task_gid}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a task",
      "result_type": {
        "name": "GetTaskResultObject",
        "type": "named"
      }
    },
    "getTaskCountsForProject": {
      "request": {
        "url": "/projects/{project_gid}/task_counts",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "projects:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTaskCountsForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get task count of a project",
      "result_type": {
        "name": "GetTaskCountsForProjectResultObject",
        "type": "named"
      }
    },
    "getTaskForCustomID": {
      "request": {
        "url": "/workspaces/{workspace_gid}/tasks/custom_id/{custom_id}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "custom_id": {
          "description": "Generated custom ID for a task.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "custom_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a task for a given custom ID",
      "result_type": {
        "name": "GetTaskForCustomIDResultObject",
        "type": "named"
      }
    },
    "getTaskTemplate": {
      "request": {
        "url": "/task_templates/{task_template_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTaskTemplateOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_template_gid": {
          "description": "Globally unique identifier for the task template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_template_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a task template",
      "result_type": {
        "name": "GetTaskTemplateResultObject",
        "type": "named"
      }
    },
    "getTaskTemplates": {
      "request": {
        "url": "/task_templates",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTaskTemplatesOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project": {
          "description": "The project to filter task templates on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "project",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple task templates",
      "result_type": {
        "name": "GetTaskTemplatesResultObject",
        "type": "named"
      }
    },
    "getTasks": {
      "request": {
        "url": "/tasks",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "assignee": {
          "description": "The assignee to filter tasks on. If searching for unassigned tasks, assignee.any = null can be specified. *Note: If you specify `assignee`, you must also specify the `workspace` to filter on.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "assignee",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "completed_since": {
          "description": "Only return tasks that are either incomplete or that have been completed since this time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "completed_since",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "modified_since": {
          "description": "Only return tasks that have been modified since the given time.  *Note: A task is considered modified if any of its properties change, or associations between it and other objects are modified (e.g.  a task being added to a project). A task is not considered modified just because another object it is associated with (e.g. a subtask) is modified. Actions that count as modifying the task include assigning, renaming, completing, and adding stories.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "modified_since",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTasksOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project": {
          "description": "The project to filter tasks on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "project",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "section": {
          "description": "The section to filter tasks on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "section",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace to filter tasks on. *Note: If you specify `workspace`, you must also specify the `assignee` to filter on.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple tasks",
      "result_type": {
        "name": "GetTasksResultObject",
        "type": "named"
      }
    },
    "getTasksForProject": {
      "request": {
        "url": "/projects/{project_gid}/tasks",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "completed_since": {
          "description": "Only return tasks that are either incomplete or that have been completed since this time. Accepts a date-time string or the keyword *now*.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "completed_since",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTasksForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get tasks from a project",
      "result_type": {
        "name": "GetTasksForProjectResultObject",
        "type": "named"
      }
    },
    "getTasksForSection": {
      "request": {
        "url": "/sections/{section_gid}/tasks",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "completed_since": {
          "description": "Only return tasks that are either incomplete or that have been completed since this time. Accepts a date-time string or the keyword *now*.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "completed_since",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTasksForSectionOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "section_gid": {
          "description": "The globally unique identifier for the section.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "section_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get tasks from a section",
      "result_type": {
        "name": "GetTasksForSectionResultObject",
        "type": "named"
      }
    },
    "getTasksForTag": {
      "request": {
        "url": "/tags/{tag_gid}/tasks",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTasksForTagOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "tag_gid": {
          "description": "Globally unique identifier for the tag.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "tag_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get tasks from a tag",
      "result_type": {
        "name": "GetTasksForTagResultObject",
        "type": "named"
      }
    },
    "getTasksForUserTaskList": {
      "request": {
        "url": "/user_task_lists/{user_task_list_gid}/tasks",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "completed_since": {
          "description": "Only return tasks that are either incomplete or that have been completed since this time. Accepts a date-time string or the keyword *now*.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "completed_since",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTasksForUserTaskListOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "user_task_list_gid": {
          "description": "Globally unique identifier for the user task list.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "user_task_list_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get tasks from a user task list",
      "result_type": {
        "name": "GetTasksForUserTaskListResultObject",
        "type": "named"
      }
    },
    "getTeam": {
      "request": {
        "url": "/teams/{team_gid}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "teams:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTeamOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_gid": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a team",
      "result_type": {
        "name": "GetTeamResultObject",
        "type": "named"
      }
    },
    "getTeamMembership": {
      "request": {
        "url": "/team_memberships/{team_membership_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTeamMembershipOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_membership_gid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_membership_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a team membership",
      "result_type": {
        "name": "GetTeamMembershipResultObject",
        "type": "named"
      }
    },
    "getTeamMemberships": {
      "request": {
        "url": "/team_memberships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTeamMembershipsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "team",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "user": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user. This parameter must be used with the workspace parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "user",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "Globally unique identifier for the workspace. This parameter must be used with the user parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get team memberships",
      "result_type": {
        "name": "GetTeamMembershipsResultObject",
        "type": "named"
      }
    },
    "getTeamMembershipsForTeam": {
      "request": {
        "url": "/teams/{team_gid}/team_memberships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTeamMembershipsForTeamOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_gid": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get memberships from a team",
      "result_type": {
        "name": "GetTeamMembershipsForTeamResultObject",
        "type": "named"
      }
    },
    "getTeamMembershipsForUser": {
      "request": {
        "url": "/users/{user_gid}/team_memberships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTeamMembershipsForUserOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "user_gid": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "user_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "Globally unique identifier for the workspace.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get memberships from a user",
      "result_type": {
        "name": "GetTeamMembershipsForUserResultObject",
        "type": "named"
      }
    },
    "getTeamsForUser": {
      "request": {
        "url": "/users/{user_gid}/teams",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "teams:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTeamsForUserOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "organization": {
          "description": "The workspace or organization to filter teams on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "organization",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "user_gid": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "user_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get teams for a user",
      "result_type": {
        "name": "GetTeamsForUserResultObject",
        "type": "named"
      }
    },
    "getTeamsForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/teams",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "teams:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTeamsForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get teams in a workspace",
      "result_type": {
        "name": "GetTeamsForWorkspaceResultObject",
        "type": "named"
      }
    },
    "getTimePeriod": {
      "request": {
        "url": "/time_periods/{time_period_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTimePeriodOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "time_period_gid": {
          "description": "Globally unique identifier for the time period.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "time_period_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a time period",
      "result_type": {
        "name": "GetTimePeriodResultObject",
        "type": "named"
      }
    },
    "getTimePeriods": {
      "request": {
        "url": "/time_periods",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "end_on": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "end_on",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTimePeriodsOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "start_on": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "start_on",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "workspace": {
          "description": "Globally unique identifier for the workspace.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get time periods",
      "result_type": {
        "name": "GetTimePeriodsResultObject",
        "type": "named"
      }
    },
    "getTimeTrackingEntriesForTask": {
      "request": {
        "url": "/tasks/{task_gid}/time_tracking_entries",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTimeTrackingEntriesForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get time tracking entries for a task",
      "result_type": {
        "name": "GetTimeTrackingEntriesForTaskResultObject",
        "type": "named"
      }
    },
    "getTimeTrackingEntry": {
      "request": {
        "url": "/time_tracking_entries/{time_tracking_entry_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetTimeTrackingEntryOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "time_tracking_entry_gid": {
          "description": "Globally unique identifier for the time tracking entry.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "time_tracking_entry_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a time tracking entry",
      "result_type": {
        "name": "GetTimeTrackingEntryResultObject",
        "type": "named"
      }
    },
    "getUser": {
      "request": {
        "url": "/users/{user_gid}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "users:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetUserOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "user_gid": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "user_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a user",
      "result_type": {
        "name": "GetUserResultObject",
        "type": "named"
      }
    },
    "getUserTaskList": {
      "request": {
        "url": "/user_task_lists/{user_task_list_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetUserTaskListOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "user_task_list_gid": {
          "description": "Globally unique identifier for the user task list.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "user_task_list_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a user task list",
      "result_type": {
        "name": "GetUserTaskListResultObject",
        "type": "named"
      }
    },
    "getUserTaskListForUser": {
      "request": {
        "url": "/users/{user_gid}/user_task_list",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetUserTaskListForUserOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "user_gid": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "user_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace in which to get the user task list.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a user's task list",
      "result_type": {
        "name": "GetUserTaskListForUserResultObject",
        "type": "named"
      }
    },
    "getUsers": {
      "request": {
        "url": "/users",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "users:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetUsersOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team": {
          "description": "The team ID to filter users on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "team",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace or organization ID to filter users on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple users",
      "result_type": {
        "name": "GetUsersResultObject",
        "type": "named"
      }
    },
    "getUsersForTeam": {
      "request": {
        "url": "/teams/{team_gid}/users",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "users:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetUsersForTeamOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_gid": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get users in a team",
      "result_type": {
        "name": "GetUsersForTeamResultObject",
        "type": "named"
      }
    },
    "getUsersForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/users",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "users:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetUsersForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get users in a workspace or organization",
      "result_type": {
        "name": "GetUsersForWorkspaceResultObject",
        "type": "named"
      }
    },
    "getWebhook": {
      "request": {
        "url": "/webhooks/{webhook_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetWebhookOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "webhook_gid": {
          "description": "Globally unique identifier for the webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "webhook_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a webhook",
      "result_type": {
        "name": "GetWebhookResultObject",
        "type": "named"
      }
    },
    "getWebhooks": {
      "request": {
        "url": "/webhooks",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetWebhooksOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "resource": {
          "description": "Only return webhooks for the given resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "resource",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "The workspace to query for webhooks in.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get multiple webhooks",
      "result_type": {
        "name": "GetWebhooksResultObject",
        "type": "named"
      }
    },
    "getWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "projects:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a workspace",
      "result_type": {
        "name": "GetWorkspaceResultObject",
        "type": "named"
      }
    },
    "getWorkspaceEvents": {
      "request": {
        "url": "/workspaces/{workspace_gid}/events",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "sync": {
          "description": "A sync token received from the last request, or none on first sync. Events will be returned from the point in time that the sync token was generated. *Note: On your first request, omit the sync token. The response will be the same as for an expired sync token, and will include a new valid sync token. If the sync token is too old (which may happen from time to time) the API will return a `412 Precondition Failed` error, and include a fresh sync token in the response.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "sync",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get workspace events",
      "result_type": {
        "name": "GetWorkspaceEventsResultObject",
        "type": "named"
      }
    },
    "getWorkspaceMembership": {
      "request": {
        "url": "/workspace_memberships/{workspace_membership_gid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetWorkspaceMembershipOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_membership_gid": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_membership_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a workspace membership",
      "result_type": {
        "name": "GetWorkspaceMembershipResultObject",
        "type": "named"
      }
    },
    "getWorkspaceMembershipsForUser": {
      "request": {
        "url": "/users/{user_gid}/workspace_memberships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetWorkspaceMembershipsForUserOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "user_gid": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "user_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get workspace memberships for a user",
      "result_type": {
        "name": "GetWorkspaceMembershipsForUserResultObject",
        "type": "named"
      }
    },
    "getWorkspaceMembershipsForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/workspace_memberships",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetWorkspaceMembershipsForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "user": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "user",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get the workspace memberships for a workspace",
      "result_type": {
        "name": "GetWorkspaceMembershipsForWorkspaceResultObject",
        "type": "named"
      }
    },
    "getWorkspaces": {
      "request": {
        "url": "/workspaces",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "projects:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetWorkspacesOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Get multiple workspaces",
      "result_type": {
        "name": "GetWorkspacesResultObject",
        "type": "named"
      }
    },
    "searchTasksForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/tasks/search",
        "method": "get",
        "security": [
          {
            "personalAccessToken": [
              "tasks:read"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "assigned_by.any": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "assigned_by.any",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "assigned_by.not": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "assigned_by.not",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "assignee.any": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "assignee.any",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "assignee.not": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "assignee.not",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "commented_on_by.not": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "commented_on_by.not",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "completed": {
          "description": "Filter to completed tasks",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "completed",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "completed_at.after": {
          "description": "ISO 8601 datetime string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "completed_at.after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "completed_at.before": {
          "description": "ISO 8601 datetime string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "completed_at.before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "completed_on": {
          "description": "ISO 8601 date string or `null`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "completed_on",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "completed_on.after": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "completed_on.after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "completed_on.before": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "completed_on.before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "created_at.after": {
          "description": "ISO 8601 datetime string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "created_at.after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "created_at.before": {
          "description": "ISO 8601 datetime string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "created_at.before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "created_by.any": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "created_by.any",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "created_by.not": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "created_by.not",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "created_on": {
          "description": "ISO 8601 date string or `null`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "created_on",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "created_on.after": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "created_on.after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "created_on.before": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "created_on.before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "due_at.after": {
          "description": "ISO 8601 datetime string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "due_at.after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "due_at.before": {
          "description": "ISO 8601 datetime string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "due_at.before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "due_on": {
          "description": "ISO 8601 date string or `null`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "due_on",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "due_on.after": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "due_on.after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "due_on.before": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "due_on.before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "followers.any": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "followers.any",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "followers.not": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "followers.not",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "has_attachment": {
          "description": "Filter to tasks with attachments",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "has_attachment",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "is_blocked": {
          "description": "Filter to tasks with incomplete dependencies",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "is_blocked",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "is_blocking": {
          "description": "Filter to incomplete tasks with dependents",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "is_blocking",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "is_subtask": {
          "description": "Filter to subtasks",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "is_subtask",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "liked_by.not": {
          "description": "Comma-separated list of user identifiers",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "liked_by.not",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "modified_at.after": {
          "description": "ISO 8601 datetime string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "modified_at.after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "modified_at.before": {
          "description": "ISO 8601 datetime string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "name": "modified_at.before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        },
        "modified_on": {
          "description": "ISO 8601 date string or `null`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "modified_on",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "modified_on.after": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "modified_on.after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "modified_on.before": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "modified_on.before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "SearchTasksForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolios.any": {
          "description": "Comma-separated list of portfolio IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "portfolios.any",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "projects.all": {
          "description": "Comma-separated list of project IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "projects.all",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "projects.any": {
          "description": "Comma-separated list of project IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "projects.any",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "projects.not": {
          "description": "Comma-separated list of project IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "projects.not",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "resource_subtype": {
          "description": "Filters results by the task's resource_subtype",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SearchTasksForWorkspaceResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "name": "resource_subtype",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sections.all": {
          "description": "Comma-separated list of section or column IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "sections.all",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sections.any": {
          "description": "Comma-separated list of section or column IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "sections.any",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sections.not": {
          "description": "Comma-separated list of section or column IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "sections.not",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sort_ascending": {
          "description": "Default `false`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "sort_ascending",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "sort_by": {
          "description": "One of `due_date`, `created_at`, `completed_at`, `likes`, or `modified_at`, defaults to `modified_at`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SearchTasksForWorkspaceSortByEnum",
              "type": "named"
            }
          },
          "http": {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_on": {
          "description": "ISO 8601 date string or `null`",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "start_on",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "start_on.after": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "start_on.after",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "start_on.before": {
          "description": "ISO 8601 date string",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "name": "start_on.before",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ],
              "format": "date"
            }
          }
        },
        "tags.all": {
          "description": "Comma-separated list of tag IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "tags.all",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "tags.any": {
          "description": "Comma-separated list of tag IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "tags.any",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "tags.not": {
          "description": "Comma-separated list of tag IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "tags.not",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "teams.any": {
          "description": "Comma-separated list of team IDs",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "teams.any",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "text": {
          "description": "Performs full-text search on both task name and description",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "text",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Search tasks in a workspace",
      "result_type": {
        "name": "SearchTasksForWorkspaceResultObject",
        "type": "named"
      }
    },
    "typeaheadForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/typeahead",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "count": {
          "description": "The number of results to return. The default is 20 if this parameter is omitted, with a minimum of 1 and a maximum of 100. If there are fewer results found than requested, all will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "count",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TypeaheadForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "query": {
          "description": "The string that will be used to search for relevant objects. If an empty string is passed in, the API will return results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "query",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "resource_type": {
          "description": "The type of values the typeahead should return. You can choose from one of the following: `custom_field`, `goal`, `project`, `project_template`, `portfolio`, `tag`, `task`, `team`, and `user`. Note that unlike in the names of endpoints, the types listed here are in singular form (e.g. `task`). Using multiple types is not yet supported.",
          "type": {
            "name": "TypeaheadForWorkspaceResourceTypeEnum",
            "type": "named"
          },
          "http": {
            "name": "resource_type",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "type": {
          "description": "*Deprecated: new integrations should prefer the resource_type field.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TypeaheadForWorkspaceTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "name": "type",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get objects via typeahead",
      "result_type": {
        "name": "TypeaheadForWorkspaceResultObject",
        "type": "named"
      }
    }
  },
  "object_types": {
    "AddCustomFieldSettingForPortfolioBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddCustomFieldSettingRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddCustomFieldSettingForPortfolioResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldSettingResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddCustomFieldSettingForProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddCustomFieldSettingRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddCustomFieldSettingForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldSettingResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddCustomFieldSettingRequestInput": {
      "fields": {
        "custom_field": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insert_after": {
          "description": "A gid of a Custom Field Setting on this container, after which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insert_before": {
          "description": "A gid of a Custom Field Setting on this container, before which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_important": {
          "description": "Whether this field should be considered important to this container (for instance, to display in the list view of items in the container).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      },
      "alias": "AddCustomFieldSettingRequest"
    },
    "AddDependenciesForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ModifyDependenciesRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddDependenciesForTaskResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddDependentsForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A set of dependent tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ModifyDependentsRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddDependentsForTaskResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddFollowersBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskAddFollowersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddFollowersForProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddFollowersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddFollowersForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddFollowersForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskAddFollowersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddFollowersForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddFollowersRequestInput": {
      "fields": {
        "followers": {
          "description": "An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "AddFollowersRequest"
    },
    "AddFollowersResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddItemForPortfolioBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioAddItemRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddItemForPortfolioResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddMembersForPortfolioBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddMembersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddMembersForPortfolioResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddMembersForProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddMembersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddMembersForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddMembersRequestInput": {
      "fields": {
        "members": {
          "description": "An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "AddMembersRequest"
    },
    "AddProjectForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskAddProjectRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddProjectForTaskResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddSupportingRelationshipBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalAddSupportingRelationshipRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddSupportingRelationshipResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddTagForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskAddTagRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddTagForTaskResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddTaskForSectionBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SectionTaskInsertRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddTaskForSectionResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddUserForTeamBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A user identification object for specification with the addUser/removeUser endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamAddUserRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddUserForTeamResultObject": {
      "fields": {
        "data": {
          "description": "This object represents a user's connection to a team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamMembershipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddUserForWorkspaceBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A user identification object for specification with the addUser/removeUser endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceAddUserRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AddUserForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserBaseResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AllocationBaseEffortObject": {
      "description": "The amount of time associated with the allocation, represented as a percentage or number of hours",
      "fields": {
        "type": {
          "description": "The units used for tracking effort on an allocation, either \"hours\" or \"percent\".",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationBaseEffortTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The numeric effort value on the allocation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        }
      }
    },
    "AllocationBaseEffortObjectInput": {
      "description": "The amount of time associated with the allocation, represented as a percentage or number of hours",
      "fields": {
        "type": {
          "description": "The units used for tracking effort on an allocation, either \"hours\" or \"percent\".",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationBaseEffortTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The numeric effort value on the allocation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        }
      }
    },
    "AllocationRequestInput": {
      "fields": {
        "assignee": {
          "description": "Globally unique identifier for the user or placeholder assigned to the allocation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "effort": {
          "description": "The amount of time associated with the allocation, represented as a percentage or number of hours",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationBaseEffortObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "end_date": {
          "description": "The localized day on which the allocation ends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "parent": {
          "description": "Globally unique identifier for the project the allocation is on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_date": {
          "description": "The localized day on which the allocation starts.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        }
      }
    },
    "AllocationResponse": {
      "fields": {
        "assignee": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationResponse1AssigneeAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "effort": {
          "description": "The amount of time associated with the allocation, represented as a percentage or number of hours",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationBaseEffortObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "end_date": {
          "description": "The localized day on which the allocation ends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of the allocation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_date": {
          "description": "The localized day on which the allocation starts.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        }
      }
    },
    "AllocationResponse1AssigneeAllOf": {
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AsanaNamedResource": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AsanaResource": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AttachmentCompact": {
      "description": "An *attachment* object represents any file attached to a task in Asana, whether its an uploaded file or one associated via a third-party service such as Dropbox or Google Drive.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `onedrive`, `box`, `vimeo`, and `external`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AttachmentRequestInput": {
      "fields": {
        "connect_to_app": {
          "description": "*Optional*. Only relevant for external attachments with a parent task. A boolean indicating whether the current app should be connected with the attachment for the purposes of showing an app components widget. Requires the app to have been added to a project the parent task is in. This property can only be set if an OAuth token is used to authenticate the request.  Criteria for displaying app widget: 1. An OAuth token must be used to authenticate the request 2. The app needs to have its `widget_metadata_url` configured in the developer console 3. The task the attachment is being attached to must be in a project with the app installed",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "file": {
          "description": "Required for `asana` attachments.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Binary",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "binary"
          }
        },
        "name": {
          "description": "The name of the external resource being attached. Required for attachments of type `external`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent": {
          "description": "Required identifier of the parent task, project, or project_brief, as a string.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The type of the attachment. Must be one of the given values. If not specified, a file attachment of type `asana` will be assumed. Note that if the value of `resource_subtype` is `external`, a `parent`, `name`, and `url` must also be provided.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AttachmentRequestResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "url": {
          "description": "The URL of the external resource being attached. Required for attachments of type `external`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "AttachmentRequest"
    },
    "AttachmentResponse": {
      "fields": {
        "connected_to_app": {
          "description": "Whether the attachment is connected to the app making the request for the purposes of showing an app components widget. Only present when the `resource_subtype` is `external` or `gdrive`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "download_url": {
          "description": "The URL containing the content of the attachment. *Note:* May be null if the attachment is hosted by [Box](https://www.box.com/) and will be null if the attachment is a Video Message hosted by [Vimeo](https://vimeo.com/). If present, this URL may only be valid for two minutes from the time of retrieval. You should avoid persisting this URL somewhere and just refresh it on demand to ensure you do not keep stale URLs.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "host": {
          "description": "The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `box`, and `vimeo`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the file.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AttachmentResponse1ParentAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "permanent_url": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "resource_subtype": {
          "description": "The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `onedrive`, `box`, `vimeo`, and `external`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "size": {
          "description": "The size of the attachment in bytes. Only present when the `resource_subtype` is `asana`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "view_url": {
          "description": "The URL where the attachment can be viewed, which may be friendlier to users in a browser than just directing them to a raw file. May be null if no view URL exists for the service.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "AttachmentResponse1ParentAllOf": {
      "fields": {
        "created_by": {
          "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactCreatedByObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AuditLogEvent": {
      "description": "An object representing a single event within an Asana domain.  Every audit log event is comprised of an `event_type`, `actor`, `resource`, and `context`. Some events will include additional metadata about the event under `details`. See our [currently supported list of events](/docs/audit-log-events#supported-audit-log-events) for more details.",
      "fields": {
        "actor": {
          "description": "The entity that triggered the event. Will typically be a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuditLogEventActor",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "context": {
          "description": "The context from which this event originated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuditLogEventContext",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created_at": {
          "description": "The time the event was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "details": {
          "description": "Event specific details. The schema will vary depending on the `event_type`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "event_category": {
          "description": "The category that this `event_type` belongs to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "event_type": {
          "description": "The type of the event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the `AuditLogEvent`, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource": {
          "description": "The primary object that was affected by this event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuditLogEventResource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "AuditLogEventActor": {
      "description": "The entity that triggered the event. Will typically be a user.",
      "fields": {
        "actor_type": {
          "description": "The type of actor. Can be one of `user`, `asana`, `asana_support`, `anonymous`, or `external_administrator`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuditLogEventActorActorTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "email": {
          "description": "The email of the actor, if it is a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the actor, if it is a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the actor, if it is a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AuditLogEventContext": {
      "description": "The context from which this event originated.",
      "fields": {
        "api_authentication_method": {
          "description": "The authentication method used in the context of an API request. Only present if the `context_type` is `api`. Can be one of `cookie`, `oauth`, `personal_access_token`, or `service_account`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuditLogEventContextApiAuthenticationMethodEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "client_ip_address": {
          "description": "The IP address of the client that initiated the event, if applicable.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "context_type": {
          "description": "The type of context. Can be one of `web`, `desktop`, `mobile`, `asana_support`, `asana`, `email`, or `api`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AuditLogEventContextContextTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "oauth_app_name": {
          "description": "The name of the OAuth App that initiated the event. Only present if the `api_authentication_method` is `oauth`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "rule_name": {
          "description": "The name of the automation rule that initiated the event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user_agent": {
          "description": "The user agent of the client that initiated the event, if applicable.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AuditLogEventResource": {
      "description": "The primary object that was affected by this event.",
      "fields": {
        "email": {
          "description": "The email of the resource, if applicable.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of resource. Most resources will not have a subtype.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The type of resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "BatchRequestActionInput": {
      "description": "An action object for use in a batch request.",
      "fields": {
        "data": {
          "description": "For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "method": {
          "description": "The HTTP method you wish to emulate for the action.",
          "type": {
            "name": "BatchRequestActionMethodEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "options": {
          "description": "Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. Pretty JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BatchRequestActionOptionsObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "relative_path": {
          "description": "The path of the desired endpoint relative to the APIs base URL. Query parameters are not accepted here; put them in `data` instead.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "BatchRequestAction"
    },
    "BatchRequestActionOptionsObjectInput": {
      "description": "Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. Pretty JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.",
      "fields": {
        "fields": {
          "description": "The fields to retrieve in the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "limit": {
          "description": "Pagination limit for the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "offset": {
          "description": "Pagination offset for the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "BatchRequestInput": {
      "description": "A request object for use in a batch request.",
      "fields": {
        "actions": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BatchRequestActionInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "BatchRequest"
    },
    "BatchResponse": {
      "description": "A response object returned from a batch request.",
      "fields": {
        "body": {
          "description": "The JSON body that the invoked endpoint returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "headers": {
          "description": "A map of HTTP headers specific to this result. This is primarily used for returning a `Location` header to accompany a `201 Created` result.  The parent HTTP response will contain all common headers.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "status_code": {
          "description": "The HTTP status code that the invoked endpoint returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "CreateAllocationBodyDataAllOfInput": {
      "fields": {
        "assignee": {
          "description": "Globally unique identifier for the user or placeholder assigned to the allocation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "effort": {
          "description": "The amount of time associated with the allocation, represented as a percentage or number of hours",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationBaseEffortObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "end_date": {
          "description": "The localized day on which the allocation ends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "parent": {
          "description": "Globally unique identifier for the project the allocation is on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_date": {
          "description": "The localized day on which the allocation starts.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        }
      }
    },
    "CreateAllocationBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateAllocationBodyDataAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateAllocationResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateAttachmentForObjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AttachmentResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateBatchRequestBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A request object for use in a batch request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "BatchRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateBatchRequestResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "BatchResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "CreateCustomFieldBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCreateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateCustomFieldResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateEnumOptionForCustomFieldBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EnumOptionRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateEnumOptionForCustomFieldResultObject": {
      "fields": {
        "data": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EnumOption",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateGoalBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateGoalMetricBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMetricRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateGoalMetricResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateGoalResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateMembershipBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateMembershipRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateMembershipRequestInput": {
      "fields": {
        "access_level": {
          "description": "Sets the access level for the member. Goals can have access levels `editor` or `commenter`. Projects can have access levels `admin`, `editor` or `commenter`. Portfolios can have access levels `admin`, `editor` or `viewer`. Custom Fields can have access levels `admin`, `editor` or `user`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "member": {
          "description": "The gid of the user or team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent": {
          "description": "The gid of the `goal`, `project`, or `portfolio` to add the member to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "role": {
          "description": "*Deprecated: new integrations should use access_level* The role given to the member. Optional argument, will default to `commenter` for goals and the default project role for projects. Can be `editor` or `commenter` for goals. Can be `admin`,`editor` or `commenter` for projects.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateMembershipResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MembershipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateOrganizationExportBodyObjectInput": {
      "fields": {
        "data": {
          "description": "An *organization_export* request starts a job to export the complete data of the given Organization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrganizationExportRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateOrganizationExportResultObject": {
      "fields": {
        "data": {
          "description": "An *organization_export* object represents a request to export the complete data of an Organization in JSON format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrganizationExportResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreatePortfolioBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreatePortfolioResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectBriefBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBriefRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectBriefResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBriefResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectForTeamBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectForTeamResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectForWorkspaceBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectStatusForProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectStatusRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateProjectStatusForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectStatusResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateSectionForProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SectionRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateSectionForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SectionResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateStatusForObjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StatusUpdateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateStatusForObjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StatusUpdateResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateStoryForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A story represents an activity associated with an object in the Asana system.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateStoryForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateSubtaskForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateSubtaskForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTagBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagCreateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTagForWorkspaceBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagCreateTagForWorkspaceRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTagForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTagResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTeamBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTeamResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTimeTrackingEntryBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateTimeTrackingEntryRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateTimeTrackingEntryRequestInput": {
      "fields": {
        "attributable_to": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompactInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "duration_minutes": {
          "description": "Time in minutes tracked by the entry. Must be greater than 0",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "entered_on": {
          "description": "*Optional*. The day that this entry is logged on. Defaults to today if not specified",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        }
      },
      "alias": "CreateTimeTrackingEntryRequest"
    },
    "CreateTimeTrackingEntryResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimeTrackingEntryBase",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateWebhookBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WebhookRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CreateWebhookResultObject": {
      "fields": {
        "X-Hook-Secret": {
          "description": "The secret to be used to verify future webhook event signatures.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WebhookResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "CustomFieldCompact": {
      "description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.  Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.",
      "fields": {
        "date_value": {
          "description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactDateValueObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "display_value": {
          "description": "A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "*Conditional*. Determines if the custom field is enabled or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "enum_options": {
          "description": "*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EnumOption",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "enum_value": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactEnumValueAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id_prefix": {
          "description": "This field is the unique custom ID string for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_formula_field": {
          "description": "*Conditional*. This flag describes whether a custom field is a formula custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "multi_enum_values": {
          "description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EnumOption",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "name": {
          "description": "The name of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "number_value": {
          "description": "*Conditional*. This number is the value of a `number` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "representation_type": {
          "description": "This field tells the type of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactRepresentationTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text_value": {
          "description": "*Conditional*. This string is the value of a `text` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldCompactDateValueObject": {
      "description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
      "fields": {
        "date": {
          "description": "A string representing the date in YYYY-MM-DD format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_time": {
          "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldCompactDateValueObjectInput": {
      "description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
      "fields": {
        "date": {
          "description": "A string representing the date in YYYY-MM-DD format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_time": {
          "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldCompactEnumValueAllOf": {
      "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
      "fields": {
        "color": {
          "description": "The color of the enum option. Defaults to none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "Whether or not the enum option is a selectable value for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the enum option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldCompactEnumValueAllOfInput": {
      "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
      "fields": {
        "color": {
          "description": "The color of the enum option. Defaults to none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "Whether or not the enum option is a selectable value for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the enum option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldCreateRequestInput": {
      "fields": {
        "currency_code": {
          "description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "custom_label": {
          "description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "custom_label_position": {
          "description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1CustomLabelPositionEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_value": {
          "description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactDateValueObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "description": {
          "description": "[Opt In](/docs/inputoutput-options). The description of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enum_options": {
          "description": "*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "EnumOptionInput",
                  "type": "named"
                }
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "enum_value": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactEnumValueAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "format": {
          "description": "The format of this custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1FormatEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "has_notifications_enabled": {
          "description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "id_prefix": {
          "description": "This field is the unique custom ID string for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_formula_field": {
          "description": "*Conditional*. This flag describes whether a custom field is a formula custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "multi_enum_values": {
          "description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EnumOptionInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "name": {
          "description": "The name of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "number_value": {
          "description": "*Conditional*. This number is the value of a `number` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "owned_by_app": {
          "description": "*Allow-listed*. Instructs the API that this Custom Field is app-owned. This parameter is allow-listed to specific apps at this point in time. For apps that are not allow-listed, providing this parameter will result in a `403 Forbidden`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "people_value": {
          "description": "*Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "precision": {
          "description": "Only relevant for custom fields of type Number. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "resource_subtype": {
          "description": "The type of the custom field. Must be one of the given values.",
          "type": {
            "name": "CustomFieldCreateRequest1ResourceSubtypeEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text_value": {
          "description": "*Conditional*. This string is the value of a `text` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspace": {
          "description": "*Create-Only* The workspace to create a custom field in.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldRequestInput": {
      "fields": {
        "currency_code": {
          "description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "custom_label": {
          "description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "custom_label_position": {
          "description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1CustomLabelPositionEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_value": {
          "description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactDateValueObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "description": {
          "description": "[Opt In](/docs/inputoutput-options). The description of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enum_options": {
          "description": "*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "EnumOptionInput",
                  "type": "named"
                }
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "enum_value": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactEnumValueAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "format": {
          "description": "The format of this custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1FormatEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "has_notifications_enabled": {
          "description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "id_prefix": {
          "description": "This field is the unique custom ID string for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_formula_field": {
          "description": "*Conditional*. This flag describes whether a custom field is a formula custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "multi_enum_values": {
          "description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EnumOptionInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "name": {
          "description": "The name of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "number_value": {
          "description": "*Conditional*. This number is the value of a `number` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "owned_by_app": {
          "description": "*Allow-listed*. Instructs the API that this Custom Field is app-owned. This parameter is allow-listed to specific apps at this point in time. For apps that are not allow-listed, providing this parameter will result in a `403 Forbidden`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "people_value": {
          "description": "*Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "precision": {
          "description": "Only relevant for custom fields of type Number. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "text_value": {
          "description": "*Conditional*. This string is the value of a `text` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspace": {
          "description": "*Create-Only* The workspace to create a custom field in.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldResponse": {
      "fields": {
        "asana_created_field": {
          "description": "*Conditional*. A unique identifier to associate this field with the template source of truth.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1AsanaCreatedFieldEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "currency_code": {
          "description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "custom_label": {
          "description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "custom_label_position": {
          "description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1CustomLabelPositionEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_value": {
          "description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactDateValueObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "default_access_level": {
          "description": "The default access level when inviting new members to the custom field. This isn't applied when the `privacy_setting` is `private`, or the user is a guest. For local fields in a project or portfolio, the user must additionally have permission to modify the container itself.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponse1DefaultAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "[Opt In](/docs/inputoutput-options). The description of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "display_value": {
          "description": "A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "*Conditional*. Determines if the custom field is enabled or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "enum_options": {
          "description": "*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "EnumOption",
                  "type": "named"
                }
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "enum_value": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactEnumValueAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "format": {
          "description": "The format of this custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1FormatEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "has_notifications_enabled": {
          "description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "id_prefix": {
          "description": "This field is the unique custom ID string for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_formula_field": {
          "description": "*Conditional*. This flag describes whether a custom field is a formula custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_global_to_workspace": {
          "description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_value_read_only": {
          "description": "*Conditional*. This flag describes whether a custom field is read only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "multi_enum_values": {
          "description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EnumOption",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "name": {
          "description": "The name of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "number_value": {
          "description": "*Conditional*. This number is the value of a `number` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "people_value": {
          "description": "*Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/reference/users) objects reflects the values of a `people` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "precision": {
          "description": "Only relevant for custom fields of type Number. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "privacy_setting": {
          "description": "The privacy setting of the custom field. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponse1PrivacySettingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "representation_type": {
          "description": "This field tells the type of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponseRepresentationTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The type of the custom field. Must be one of the given values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponse1ResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text_value": {
          "description": "*Conditional*. This string is the value of a `text` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldSettingResponse": {
      "fields": {
        "custom_field": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldSettingResponse1CustomFieldAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_important": {
          "description": "`is_important` is used in the Asana web application to determine if this custom field is displayed in the list/grid view of a project or portfolio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "parent": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldSettingResponse1ParentAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "project": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldSettingResponse1ProjectAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldSettingResponse1CustomFieldAllOf": {
      "fields": {
        "asana_created_field": {
          "description": "*Conditional*. A unique identifier to associate this field with the template source of truth.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1AsanaCreatedFieldEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "currency_code": {
          "description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "custom_label": {
          "description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "custom_label_position": {
          "description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1CustomLabelPositionEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "date_value": {
          "description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactDateValueObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "default_access_level": {
          "description": "The default access level when inviting new members to the custom field. This isn't applied when the `privacy_setting` is `private`, or the user is a guest. For local fields in a project or portfolio, the user must additionally have permission to modify the container itself.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponse1DefaultAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "[Opt In](/docs/inputoutput-options). The description of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "display_value": {
          "description": "A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "*Conditional*. Determines if the custom field is enabled or not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "enum_options": {
          "description": "*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "EnumOption",
                  "type": "named"
                }
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "enum_value": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactEnumValueAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "format": {
          "description": "The format of this custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldBase1FormatEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "has_notifications_enabled": {
          "description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "id_prefix": {
          "description": "This field is the unique custom ID string for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_formula_field": {
          "description": "*Conditional*. This flag describes whether a custom field is a formula custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_global_to_workspace": {
          "description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_value_read_only": {
          "description": "*Conditional*. This flag describes whether a custom field is read only.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "multi_enum_values": {
          "description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EnumOption",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "name": {
          "description": "The name of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "number_value": {
          "description": "*Conditional*. This number is the value of a `number` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "people_value": {
          "description": "*Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/reference/users) objects reflects the values of a `people` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "precision": {
          "description": "Only relevant for custom fields of type Number. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "privacy_setting": {
          "description": "The privacy setting of the custom field. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponse1PrivacySettingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "representation_type": {
          "description": "This field tells the type of the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponseRepresentationTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The type of the custom field. Must be one of the given values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponse1ResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text_value": {
          "description": "*Conditional*. This string is the value of a `text` custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompactTypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldSettingResponse1ParentAllOf": {
      "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomFieldSettingResponse1ProjectAllOf": {
      "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomTypeCompact": {
      "description": "Custom Types extend the types of Asana Objects, currently only Custom Tasks are supported.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the custom type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomTypeResponse": {
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the custom type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status_options": {
          "description": "The available options for the custom type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomTypeStatusOptionResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "CustomTypeStatusOptionCompact": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the custom type status option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CustomTypeStatusOptionResponse": {
      "fields": {
        "color": {
          "description": "The color associated with the custom type status option. Defaults to none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "completion_state": {
          "description": "The completion state the custom type status option corresponds to, all custom types must have one Incomplete and Complete status option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "Whether or not the custom type status option is a selectable value for the custom type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the custom type status option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "DateVariableCompact": {
      "fields": {
        "description": {
          "description": "The description of what the date variable is used for when instantiating a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the date field in the project template. A value of `1` refers to the project start date, while `2` refers to the project due date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the date variable.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "DateVariableRequestInput": {
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the date field in the project template. A value of `1` refers to the project start date, while `2` refers to the project due date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The date with which the date variable should be replaced when instantiating a project. This takes a date with `YYYY-MM-DD` format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      },
      "alias": "DateVariableRequest"
    },
    "DeleteAllocationResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteAttachmentResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteCustomFieldResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteGoalResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteMembershipResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeletePortfolioResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteProjectBriefResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteProjectResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteProjectStatusResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteProjectTemplateResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteSectionResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteStatusResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteStoryResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteTagResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteTaskResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteTaskTemplateResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteTimeTrackingEntryResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeleteWebhookResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeprecatedPortfolioMembershipCompact": {
      "description": "This object determines if a user is a member of a portfolio.",
      "fields": {
        "access_level": {
          "description": "Whether the member has admin, editor, or viewer access to the portfolio. Portfolios do not support commenter access yet.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DeprecatedPortfolioMembershipCompactAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "portfolio": {
          "description": "A *portfolio* gives a high-level overview of the status of multiple initiatives in Asana. Portfolios provide a dashboard overview of the state of multiple projects, including a progress report and the most recent [project status](/reference/project-statuses) update. Portfolios have some restrictions on size. Each portfolio has a max of 1500 items and, like projects, a max of 20 custom fields.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DeprecatedPortfolioMembershipResponse": {
      "description": "This object determines if a user is a member of a portfolio.",
      "fields": {
        "access_level": {
          "description": "Whether the member has admin, editor, or viewer access to the portfolio. Portfolios do not support commenter access yet.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DeprecatedPortfolioMembershipResponseAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "portfolio": {
          "description": "A *portfolio* gives a high-level overview of the status of multiple initiatives in Asana. Portfolios provide a dashboard overview of the state of multiple projects, including a progress report and the most recent [project status](/reference/project-statuses) update. Portfolios have some restrictions on size. Each portfolio has a max of 1500 items and, like projects, a max of 20 custom fields.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DuplicateProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectDuplicateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DuplicateProjectResultObject": {
      "fields": {
        "data": {
          "description": "A *job* is an object representing a process that handles asynchronous work.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JobResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DuplicateTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskDuplicateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "DuplicateTaskResultObject": {
      "fields": {
        "data": {
          "description": "A *job* is an object representing a process that handles asynchronous work.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JobResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "EnumOption": {
      "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
      "fields": {
        "color": {
          "description": "The color of the enum option. Defaults to none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "Whether or not the enum option is a selectable value for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the enum option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "EnumOptionBaseInput": {
      "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
      "fields": {
        "color": {
          "description": "The color of the enum option. Defaults to none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "Whether or not the enum option is a selectable value for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the enum option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "EnumOptionBase"
    },
    "EnumOptionInput": {
      "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
      "fields": {
        "color": {
          "description": "The color of the enum option. Defaults to none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "Whether or not the enum option is a selectable value for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the enum option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "EnumOption"
    },
    "EnumOptionInsertRequestInput": {
      "fields": {
        "after_enum_option": {
          "description": "An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "before_enum_option": {
          "description": "An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enum_option": {
          "description": "The gid of the enum option to relocate.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "EnumOptionInsertRequest"
    },
    "EnumOptionRequestInput": {
      "fields": {
        "color": {
          "description": "The color of the enum option. Defaults to none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "enabled": {
          "description": "Whether or not the enum option is a selectable value for the custom field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "insert_after": {
          "description": "An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insert_before": {
          "description": "An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the enum option.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "EventResponse": {
      "description": "An *event* is an object representing a change to a resource that was observed by an event subscription or delivered asynchronously to the target location of an active webhook.  The event may be triggered by a different `user` than the subscriber. For example, if user A subscribes to a task and user B modified it, the events user will be user B. Note: Some events are generated by the system, and will have `null` as the user. API consumers should make sure to handle this case.  The `resource` that triggered the event may be different from the one that the events were requested for or the webhook is subscribed to. For example, a subscription to a project will contain events for tasks contained within the project.  **Note:** pay close attention to the relationship between the fields `Event.action` and `Event.change.action`. `Event.action` represents the action taken on the resource itself, and `Event.change.action` represents how the information within the resource's fields have been modified.  For instance, consider these scenarios:   * When at task is added to a project, `Event.action` will be `added`, `Event.parent` will be an object with the `id` and `type` of the project, and there will be no `change` field.   * When an assignee is set on the task, `Event.parent` will be `null`, `Event.action` will be `changed`, `Event.change.action` will be `changed`, and `new_value` will be an object with the user's `id` and `type`.   * When a collaborator is added to the task, `Event.parent` will be `null`, `Event.action` will be `changed`, `Event.change.action` will be `added`, and `added_value` will be an object with the user's `id` and `type`.",
      "fields": {
        "action": {
          "description": "The type of action taken on the **resource** that triggered the event.  This can be one of `changed`, `added`, `removed`, `deleted`, or `undeleted` depending on the nature of the event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "change": {
          "description": "Information about the type of change that has occurred. This field is only present when the value of the property `action`, describing the action taken on the **resource**, is `changed`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EventResponseChangeObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created_at": {
          "description": "The timestamp when the event occurred.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "parent": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AsanaNamedResource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AsanaNamedResource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "type": {
          "description": "*Deprecated: Refer to the resource_type of the resource.* The type of the resource that generated the event.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "EventResponseChangeObject": {
      "description": "Information about the type of change that has occurred. This field is only present when the value of the property `action`, describing the action taken on the **resource**, is `changed`.",
      "fields": {
        "action": {
          "description": "The type of action taken on the **field** which has been changed.  This can be one of `changed`, `added`, or `removed` depending on the nature of the change.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "added_value": {
          "description": "*Conditional.* This property is only present when the value of the event's `change.action` is `added` _and_ the `added_value` is an Asana resource. This will be only the `gid` and `resource_type` of the resource when the events come from webhooks; this will be the compact representation (and can have fields expanded with [opt_fields](/docs/inputoutput-options)) when using the [get events](/reference/getevents) endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "field": {
          "description": "The name of the field that has changed in the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "new_value": {
          "description": "*Conditional.* This property is only present when the value of the event's `change.action` is `changed` _and_ the `new_value` is an Asana resource. This will be only the `gid` and `resource_type` of the resource when the events come from webhooks; this will be the compact representation (and can have fields expanded with [opt_fields](/docs/inputoutput-options)) when using the [get events](/reference/getevents) endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        },
        "removed_value": {
          "description": "*Conditional.* This property is only present when the value of the event's `change.action` is `removed` _and_ the `removed_value` is an Asana resource. This will be only the `gid` and `resource_type` of the resource when the events come from webhooks; this will be the compact representation (and can have fields expanded with [opt_fields](/docs/inputoutput-options)) when using the [get events](/reference/getevents) endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {}
        }
      }
    },
    "GetAllocationResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetAllocationsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AllocationResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetAttachmentResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AttachmentResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetAttachmentsForObjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AttachmentCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetAuditLogEventsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AuditLogEvent",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetCustomFieldResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetCustomFieldSettingsForPortfolioResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomFieldSettingResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetCustomFieldSettingsForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomFieldSettingResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetCustomFieldsForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomFieldResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetCustomTypesResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomTypeResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetDependenciesForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetDependentsForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetEventsResultObject": {
      "description": "The full record for all events that have occurred since the sync token was created.",
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EventResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "has_more": {
          "description": "Indicates whether there are more events to pull.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sync": {
          "description": "A sync token to be used with the next call to the /events endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GetFavoritesForUserResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AsanaNamedResource",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetGoalRelationshipResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetGoalRelationshipsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GoalRelationshipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetGoalResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetGoalsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GoalCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetItemsForPortfolioResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetJobResultObject": {
      "fields": {
        "data": {
          "description": "A *job* is an object representing a process that handles asynchronous work.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JobResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetMembershipResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MembershipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetMembershipsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "MembershipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetOrganizationExportResultObject": {
      "fields": {
        "data": {
          "description": "An *organization_export* object represents a request to export the complete data of an Organization in JSON format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrganizationExportResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetParentGoalsForGoalResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GoalCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "GetPortfolioMembershipResultObject": {
      "fields": {
        "data": {
          "description": "This object determines if a user is a member of a portfolio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DeprecatedPortfolioMembershipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetPortfolioMembershipsForPortfolioResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "DeprecatedPortfolioMembershipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetPortfolioMembershipsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "DeprecatedPortfolioMembershipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetPortfolioResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetPortfoliosResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "PortfolioCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectBriefResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBriefResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectMembershipResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectMembershipNormalResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectMembershipsForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectMembershipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectStatusResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectStatusResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectStatusesForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectStatusCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectTemplateResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectTemplateBase",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectTemplatesForTeamResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectTemplateCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectTemplatesResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectTemplateCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectsForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectsForTeamResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectsForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetProjectsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetSectionResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SectionResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetSectionsForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "SectionCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetStatusResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StatusUpdateResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetStatusesForObjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "StatusUpdateCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetStoriesForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "StoryCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetStoryResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetSubtasksForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTagResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTagsForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TagCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTagsForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TagCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTagsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TagCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTaskCountsForProjectResultObject": {
      "fields": {
        "data": {
          "description": "A response object returned from the task count endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCountResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTaskForCustomIDResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTaskTemplateResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskTemplateResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTaskTemplatesResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskTemplateCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "GetTasksForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTasksForSectionResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTasksForTagResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTasksForUserTaskListResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTasksResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTeamMembershipResultObject": {
      "fields": {
        "data": {
          "description": "This object represents a user's connection to a team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamMembershipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTeamMembershipsForTeamResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TeamMembershipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTeamMembershipsForUserResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TeamMembershipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTeamMembershipsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TeamMembershipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTeamResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTeamsForUserResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TeamCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTeamsForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TeamCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTimePeriodResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimePeriodResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTimePeriodsResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TimePeriodCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTimeTrackingEntriesForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TimeTrackingEntryCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetTimeTrackingEntryResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimeTrackingEntryBase",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetUserResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetUserTaskListForUserResultObject": {
      "fields": {
        "data": {
          "description": "A user task list represents the tasks assigned to a particular user. It provides API access to a users [My Tasks](https://asana.com/guide/help/fundamentals/my-tasks) view in Asana.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserTaskListResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetUserTaskListResultObject": {
      "fields": {
        "data": {
          "description": "A user task list represents the tasks assigned to a particular user. It provides API access to a users [My Tasks](https://asana.com/guide/help/fundamentals/my-tasks) view in Asana.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserTaskListResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetUsersForTeamResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "GetUsersForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "GetUsersResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetWebhookResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WebhookResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetWebhooksResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WebhookResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetWorkspaceEventsResultObject": {
      "description": "The full record for all events that have occurred since the sync token was created.",
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EventResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "has_more": {
          "description": "Indicates whether there are more events to pull.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sync": {
          "description": "A sync token to be used with the next call to the /events endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GetWorkspaceMembershipResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceMembershipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetWorkspaceMembershipsForUserResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WorkspaceMembershipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetWorkspaceMembershipsForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WorkspaceMembershipCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GetWorkspacesResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WorkspaceCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "next_page": {
          "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "NextPage",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GoalAddSupportingRelationshipRequestInput": {
      "fields": {
        "contribution_weight": {
          "description": "The weight that the supporting resource's progress will contribute to the supported goal's progress. This can be 0, 1, or any value in between.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "insert_after": {
          "description": "An id of a subgoal of this parent goal. The new subgoal will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified. Currently only supported when adding a subgoal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insert_before": {
          "description": "An id of a subgoal of this parent goal. The new subgoal will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified. Currently only supported when adding a subgoal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "supporting_resource": {
          "description": "The gid of the supporting resource to add to the parent goal. Must be the gid of a goal, project, task, or portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "GoalAddSupportingRelationshipRequest"
    },
    "GoalCompact": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalCompactOwnerAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalCompactOwnerAllOf": {
      "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalCompactOwnerAllOfInput": {
      "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "fields": {
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalMembershipBaseGoalAllOf": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalCompactOwnerAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalMembershipResponse1UserAllOf": {
      "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalMembershipResponse1WorkspaceAllOf": {
      "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalMetricCurrentValueRequestInput": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "current_number_value": {
          "description": "*Conditional*. This number is the current value of a goal metric of type number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        }
      },
      "alias": "GoalMetricCurrentValueRequest"
    },
    "GoalMetricRequestInput": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "currency_code": {
          "description": "ISO 4217 currency code to format this custom field. This will be null if the `unit` is not `currency`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "current_number_value": {
          "description": "This number is the current value of a goal metric of type number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "initial_number_value": {
          "description": "This number is the start value of a goal metric of type number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "is_custom_weight": {
          "description": "*Conditional*. Only relevant if `metric.progress_source` is one of `subgoal_progress`, `project_task_completion`, `project_milestone_completion`, or `task_completion`. If true, we use the supporting object's custom weight to calculate the goal's progress. If false, we treat all supporting objects as equally weighted",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "precision": {
          "description": "*Conditional*. Only relevant for goal metrics of type Number. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "progress_source": {
          "description": "This field defines how the progress value of a goal metric is being calculated. A goal's progress can be provided manually by the user, calculated automatically from contributing subgoals, projects, or tasks, or managed by an integration with an external data source, such as Salesforce.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMetricRequestProgressSourceEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "target_number_value": {
          "description": "This number is the end value of a goal metric of type number. This number cannot equal `initial_number_value`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "unit": {
          "description": "A supported unit of measure for the goal metric, or none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMetricRequestUnitEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "GoalMetricRequest"
    },
    "GoalRelationshipBase1SupportedGoalAllOf": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalCompactOwnerAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalRelationshipBase1SupportedGoalAllOfInput": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "name": {
          "description": "The name of the goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalCompactOwnerAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GoalRelationshipCompact": {
      "description": "A *goal relationship* is an object representing the relationship between a goal and another goal, a project, a task, or a portfolio.",
      "fields": {
        "contribution_weight": {
          "description": "The weight that the supporting resource's progress contributes to the supported goal's progress. This can be 0, 1, or any value in between.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "supporting_resource": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipCompactSupportingResourceAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GoalRelationshipCompactSupportingResourceAllOf": {
      "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalRelationshipCompactSupportingResourceAllOfInput": {
      "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
      "fields": {
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalRelationshipRequestInput": {
      "fields": {
        "contribution_weight": {
          "description": "The weight that the supporting resource's progress contributes to the supported goal's progress. This can be 0, 1, or any value in between.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "supported_goal": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipBase1SupportedGoalAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "supporting_resource": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipCompactSupportingResourceAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GoalRelationshipResponse": {
      "fields": {
        "contribution_weight": {
          "description": "The weight that the supporting resource's progress contributes to the supported goal's progress. This can be 0, 1, or any value in between.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "supported_goal": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipBase1SupportedGoalAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "supporting_resource": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipCompactSupportingResourceAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GoalRemoveSupportingRelationshipRequestInput": {
      "fields": {
        "supporting_resource": {
          "description": "The gid of the supporting resource to remove from the parent goal. Must be the gid of a goal, project, task, or portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "GoalRemoveSupportingRelationshipRequest"
    },
    "GoalRequestInput": {
      "fields": {
        "due_on": {
          "description": "The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "followers": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "html_notes": {
          "description": "The notes of the goal with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_workspace_level": {
          "description": "*Conditional*. This property is only present when the `workspace` provided is an organization. Whether the goal belongs to the `workspace` (and is listed as part of the workspaces goals) or not. If it isnt a workspace-level goal, it is a team-level goal, and is associated with the goals team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "liked": {
          "description": "True if the goal is liked by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the goal (i.e. its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "The `gid` of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_on": {
          "description": "The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team": {
          "description": "*Conditional*. This property is only present when the `workspace` provided is an organization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "time_period": {
          "description": "The `gid` of a time period.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspace": {
          "description": "The `gid` of a workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalResponse": {
      "fields": {
        "current_status_update": {
          "description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StatusUpdateCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "due_on": {
          "description": "The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "followers": {
          "description": "Array of users who are members of this goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_notes": {
          "description": "The notes of the goal with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_workspace_level": {
          "description": "*Conditional*. This property is only present when the `workspace` provided is an organization. Whether the goal belongs to the `workspace` (and is listed as part of the workspaces goals) or not. If it isnt a workspace-level goal, it is a team-level goal, and is associated with the goals team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "liked": {
          "description": "True if the goal is liked by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "likes": {
          "description": "Array of likes for users who have liked this goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Like",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "metric": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse1MetricAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "name": {
          "description": "The name of the goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the goal (i.e. its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "num_likes": {
          "description": "The number of users who have liked this goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "owner": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse1OwnerAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_on": {
          "description": "The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status": {
          "description": "The current status of this goal. When the goal is open, its status can be `green`, `yellow`, and `red` to reflect \"On Track\", \"At Risk\", and \"Off Track\", respectively. When the goal is closed, the value can be `missed`, `achieved`, `partial`, or `dropped`. *Note* you can only write to this property if `metric` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team": {
          "description": "A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse1TeamAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "time_period": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse1TimePeriodAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "workspace": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse1WorkspaceAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "GoalResponse1MetricAllOf": {
      "fields": {
        "can_manage": {
          "description": "*Conditional*. Only relevant for `progress_source` of type `external`. This boolean indicates whether the requester has the ability to update the current value of this metric. This returns `true` if the external metric was created by the requester, `false` otherwise.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "currency_code": {
          "description": "ISO 4217 currency code to format this custom field. This will be null if the `unit` is not `currency`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "current_display_value": {
          "description": "This string is the current value of a goal metric of type string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "current_number_value": {
          "description": "This number is the current value of a goal metric of type number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "initial_number_value": {
          "description": "This number is the start value of a goal metric of type number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "is_custom_weight": {
          "description": "*Conditional*. Only relevant if `metric.progress_source` is one of `subgoal_progress`, `project_task_completion`, `project_milestone_completion`, or `task_completion`. If true, we use the supporting object's custom weight to calculate the goal's progress. If false, we treat all supporting objects as equally weighted",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "precision": {
          "description": "*Conditional*. Only relevant for goal metrics of type Number. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "progress_source": {
          "description": "This field defines how the progress value of a goal metric is being calculated. A goal's progress can be provided manually by the user, calculated automatically from contributing subgoals, projects, or tasks, or managed by an integration with an external data source, such as Salesforce.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMetricBaseProgressSourceEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMetricBaseResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "target_number_value": {
          "description": "This number is the end value of a goal metric of type number. This number cannot equal `initial_number_value`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "unit": {
          "description": "A supported unit of measure for the goal metric, or none.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMetricBaseUnitEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalResponse1OwnerAllOf": {
      "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalResponse1TeamAllOf": {
      "description": "A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalResponse1TimePeriodAllOf": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "display_name": {
          "description": "A string representing the cadence code and the fiscal year.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_on": {
          "description": "The localized end date of the time period in `YYYY-MM-DD` format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "period": {
          "description": "The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimePeriodCompactPeriodEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_on": {
          "description": "The localized start date of the time period in `YYYY-MM-DD` format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalResponse1WorkspaceAllOf": {
      "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GoalUpdateRequestInput": {
      "fields": {
        "due_on": {
          "description": "The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_notes": {
          "description": "The notes of the goal with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_workspace_level": {
          "description": "*Conditional*. This property is only present when the `workspace` provided is an organization. Whether the goal belongs to the `workspace` (and is listed as part of the workspaces goals) or not. If it isnt a workspace-level goal, it is a team-level goal, and is associated with the goals team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "liked": {
          "description": "True if the goal is liked by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the goal (i.e. its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "The `gid` of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_on": {
          "description": "The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status": {
          "description": "The current status of this goal. When the goal is open, its status can be `green`, `yellow`, and `red` to reflect \"On Track\", \"At Risk\", and \"Off Track\", respectively. When the goal is closed, the value can be `missed`, `achieved`, `partial`, or `dropped`. *Note* you can only write to this property if `metric` is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team": {
          "description": "*Conditional*. This property is only present when the `workspace` provided is an organization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "time_period": {
          "description": "The `gid` of a time period.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspace": {
          "description": "The `gid` of a workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "InsertEnumOptionForCustomFieldBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EnumOptionInsertRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "InsertEnumOptionForCustomFieldResultObject": {
      "fields": {
        "data": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EnumOption",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "InsertSectionForProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectSectionInsertRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "InsertSectionForProjectResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "InstantiateProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectTemplateInstantiateProjectRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "InstantiateProjectResultObject": {
      "fields": {
        "data": {
          "description": "A *job* is an object representing a process that handles asynchronous work.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JobResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "InstantiateTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskTemplateInstantiateTaskRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "InstantiateTaskResultObject": {
      "fields": {
        "data": {
          "description": "A *job* is an object representing a process that handles asynchronous work.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JobResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "JobResponse": {
      "description": "A *job* is an object representing a process that handles asynchronous work.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "new_project": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "new_project_template": {
          "description": "A *project template* is an object that allows new projects to be created with a predefined setup, which may include tasks, sections, Rules, etc. It simplifies the process of running a workflow that involves a similar set of work every time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectTemplateCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "new_task": {
          "description": "The *task* is the basic object around which many operations in Asana are centered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JobResponseNewTaskAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status": {
          "description": "The current status of this job. The value is one of: `not_started`, `in_progress`, `succeeded`, or `failed`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JobResponseStatusEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "JobResponseNewTaskAllOf": {
      "description": "The *task* is the basic object around which many operations in Asana are centered.",
      "fields": {
        "created_by": {
          "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactCreatedByObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "Like": {
      "description": "An object to represent a user's like.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the object, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "MemberCompact": {
      "description": "A *member* object represents either a team or user.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the member",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The type of the member (team or user)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MembershipCompact": {
      "fields": {
        "access_level": {
          "description": "Describes if member is commenter or editor in goal. This is preferred over role",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MembershipCompactAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "goal": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMembershipBaseGoalAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "is_commenter": {
          "description": "*Deprecated: new integrations should prefer the `role` field.* Describes if the member is comment only in goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_editor": {
          "description": "*Deprecated: new integrations should prefer the `role` field.* Describes if the member is editor in goal.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "member": {
          "description": "A *member* object represents either a team or user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "parent": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_subtype": {
          "description": "The type of membership.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "role": {
          "description": "*Deprecated: Describes if the member is a commenter or editor in goal.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMembershipBaseRoleEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "MembershipRequestInput": {
      "fields": {
        "access_level": {
          "description": "Sets the access level for the member. Goals can have access levels `editor` or `commenter`. Projects can have access levels `admin`, `editor` or `commenter`. Portfolios can have access levels `admin`, `editor` or `viewer`. Custom Fields can have access levels `admin`, `editor` or `user`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "MembershipRequest"
    },
    "MembershipResponse": {
      "fields": {
        "access_level": {
          "description": "Describes if member is commenter or editor in goal. This is preferred over role",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MembershipResponseAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "goal": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMembershipBaseGoalAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "member": {
          "description": "A *member* object represents either a team or user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "parent": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_subtype": {
          "description": "The type of membership.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "role": {
          "description": "*Deprecated: Describes if the member is a commenter or editor in goal.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMembershipBaseRoleEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMembershipResponse1UserAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "workspace": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMembershipResponse1WorkspaceAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ModifyDependenciesRequestInput": {
      "fields": {
        "dependencies": {
          "description": "An array of task gids that a task depends on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "alias": "ModifyDependenciesRequest"
    },
    "ModifyDependentsRequestInput": {
      "description": "A set of dependent tasks.",
      "fields": {
        "dependents": {
          "description": "An array of task gids that are dependents of the given task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "alias": "ModifyDependentsRequest"
    },
    "NextPage": {
      "description": "*Conditional*. This property is only present when a limit query parameter is provided in the request. When making a paginated request, the API will return a number of results as specified by the limit parameter. If more results exist, then the response will contain a next_page attribute, which will include an offset, a relative path attribute, and a full uri attribute. If there are no more pages available, next_page will be null and no offset will be provided. Note that an offset token will expire after some time, as data may have changed.",
      "fields": {
        "offset": {
          "description": "Pagination offset for the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "path": {
          "description": "A relative path containing the query parameters to fetch for next_page",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "uri": {
          "description": "A full uri containing the query parameters to fetch for next_page",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "OrganizationExportRequestInput": {
      "description": "An *organization_export* request starts a job to export the complete data of the given Organization.",
      "fields": {
        "organization": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "OrganizationExportRequest"
    },
    "OrganizationExportResponse": {
      "description": "An *organization_export* object represents a request to export the complete data of an Organization in JSON format.",
      "fields": {
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "download_url": {
          "description": "Download this URL to retreive the full export of the organization in JSON format. It will be compressed in a gzip (.gz) container.  *Note: May be null if the export is still in progress or failed.  If present, this URL may only be valid for 1 hour from the time of retrieval. You should avoid persisting this URL somewhere and rather refresh on demand to ensure you do not keep stale URLs.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "organization": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "state": {
          "description": "The current state of the export.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "OrganizationExportResponseStateEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "PortfolioAddItemRequestInput": {
      "fields": {
        "insert_after": {
          "description": "An id of an item in this portfolio. The new item will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insert_before": {
          "description": "An id of an item in this portfolio. The new item will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "item": {
          "description": "The item to add to the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "PortfolioAddItemRequest"
    },
    "PortfolioCompact": {
      "description": "A *portfolio* gives a high-level overview of the status of multiple initiatives in Asana. Portfolios provide a dashboard overview of the state of multiple projects, including a progress report and the most recent [project status](/reference/project-statuses) update. Portfolios have some restrictions on size. Each portfolio has a max of 1500 items and, like projects, a max of 20 custom fields.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the portfolio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "PortfolioRemoveItemRequestInput": {
      "fields": {
        "item": {
          "description": "The item to remove from the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "PortfolioRemoveItemRequest"
    },
    "PortfolioRequestInput": {
      "fields": {
        "archived": {
          "description": "[Opt In](/docs/inputoutput-options). True if the portfolio is archived, false if not. Archived portfolios do not show in the UI by default and may be treated differently for queries.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "color": {
          "description": "Color of the portfolio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the portfolio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "public": {
          "description": "True if the portfolio is public to its workspace members.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "workspace": {
          "description": "Gid of an object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "PortfolioResponse": {
      "fields": {
        "archived": {
          "description": "[Opt In](/docs/inputoutput-options). True if the portfolio is archived, false if not. Archived portfolios do not show in the UI by default and may be treated differently for queries.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "color": {
          "description": "Color of the portfolio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "current_status_update": {
          "description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StatusUpdateCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom_field_settings": {
          "description": "Array of custom field settings applied to the portfolio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomFieldSettingResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "custom_fields": {
          "description": "Array of Custom Fields.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomFieldCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "default_access_level": {
          "description": "The default access level when inviting new members to the portfolio",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioResponse1DefaultAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "due_on": {
          "description": "The localized day on which this portfolio is due. This takes a date with format YYYY-MM-DD.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "members": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "name": {
          "description": "The name of the portfolio.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "permalink_url": {
          "description": "A url that points directly to the object within Asana.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "privacy_setting": {
          "description": "The privacy setting of the portfolio. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioResponse1PrivacySettingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "project_templates": {
          "description": "Array of project templates that are in the portfolio",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectTemplateCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "public": {
          "description": "True if the portfolio is public to its workspace members.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_on": {
          "description": "The day on which work for this portfolio begins, or null if the portfolio has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "workspace": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioResponse1WorkspaceAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "PortfolioResponse1WorkspaceAllOf": {
      "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "Preview": {
      "description": "A collection of rich text that will be displayed as a preview to another app.  This is read-only except for a small group of whitelisted apps.",
      "fields": {
        "fallback": {
          "description": "Some fallback text to display if unable to display the full preview.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "footer": {
          "description": "Text to display in the footer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "header": {
          "description": "Text to display in the header.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "header_link": {
          "description": "Where the header will link to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_text": {
          "description": "HTML formatted text for the body of the preview.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "Text for the body of the preview.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "Text to display as the title.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title_link": {
          "description": "Where to title will link to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectBase1CurrentStatusAllOf": {
      "fields": {
        "author": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "color": {
          "description": "The color associated with the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectStatusBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_text": {
          "description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "modified_at": {
          "description": "The time at which this project status was last modified. *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "The text content of the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the project status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectBase1CurrentStatusAllOfInput": {
      "fields": {
        "author": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompactInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "color": {
          "description": "The color associated with the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectStatusBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompactInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "html_text": {
          "description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "The text content of the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the project status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectBase1CurrentStatusUpdateAllOf": {
      "description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StatusUpdateCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectBase1CurrentStatusUpdateAllOfInput": {
      "description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.",
      "fields": {
        "title": {
          "description": "The title of the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectBriefRequestInput": {
      "fields": {
        "html_text": {
          "description": "HTML formatted text for the project brief.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "The plain text of the project brief. When writing to a project brief, you can specify either `html_text` (preferred) or `text`, but not both.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the project brief.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "xmlValue": {
          "description": "Value of the xml field",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "xml": {
              "text": true
            }
          }
        }
      }
    },
    "ProjectBriefResponse": {
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_text": {
          "description": "HTML formatted text for the project brief.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "permalink_url": {
          "description": "A url that points directly to the object within Asana.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "project": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBriefResponse1ProjectAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "[Opt In](/docs/inputoutput-options). The plain text of the project brief.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the project brief.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectBriefResponse1ProjectAllOf": {
      "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectCompact": {
      "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectCompactInput": {
      "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
      "fields": {
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "ProjectCompact"
    },
    "ProjectDuplicateRequestInput": {
      "fields": {
        "include": {
          "description": "A comma-separated list of elements that will be duplicated to the new project. Tasks are always included. ##### Fields - allocations - forms - members - notes - task_assignee - task_attachments - task_dates - task_dependencies - task_followers - task_notes - task_projects - task_subtasks - task_tags",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "([allocations|members|notes|forms|task_notes|task_assignee|task_subtasks|task_attachments|task_dates|task_dependencies|task_followers|task_tags|task_projects])(,\\1)*"
          }
        },
        "name": {
          "description": "The name of the new project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "schedule_dates": {
          "description": "A dictionary of options to auto-shift dates. `task_dates` must be included to use this option. Requires either `start_on` or `due_on`, but not both.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectDuplicateRequestScheduleDatesObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "team": {
          "description": "Sets the team of the new project. If team is not defined, the new project will be in the same team as the the original project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "ProjectDuplicateRequest"
    },
    "ProjectDuplicateRequestScheduleDatesObjectInput": {
      "description": "A dictionary of options to auto-shift dates. `task_dates` must be included to use this option. Requires either `start_on` or `due_on`, but not both.",
      "fields": {
        "due_on": {
          "description": "Sets the last due date in the duplicated project to the given date. The rest of the due dates will be offset by the same amount as the due dates in the original project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "should_skip_weekends": {
          "description": "Determines if the auto-shifted dates should skip weekends.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "start_on": {
          "description": "Sets the first start date in the duplicated project to the given date. The rest of the start dates will be offset by the same amount as the start dates in the original project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectMembershipCompact": {
      "description": "This object describes a team or a user's membership to a project including their level of access (Admin, Editor, Commenter, or Viewer).",
      "fields": {
        "access_level": {
          "description": "Whether the member has admin, editor, commenter, or viewer access to the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectMembershipCompactAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "member": {
          "description": "A *member* object represents either a team or user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MemberCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "parent": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectMembershipNormalResponse": {
      "fields": {
        "access_level": {
          "description": "Whether the member has admin, editor, commenter, or viewer access to the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectMembershipBaseAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "member": {
          "description": "A *member* object represents either a team or user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MemberCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "parent": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "project": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "write_access": {
          "description": "Whether the member has full access or comment-only access to the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectMembershipNormalResponse1WriteAccessEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectRequestInput": {
      "fields": {
        "archived": {
          "description": "True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "color": {
          "description": "Color of the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "current_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1CurrentStatusAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "current_status_update": {
          "description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1CurrentStatusUpdateAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom_fields": {
          "description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, or object (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "default_access_level": {
          "description": "The default access for users or teams who join or are added as members to the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1DefaultAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "default_view": {
          "description": "The default view (list, board, calendar, or timeline) of a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1DefaultViewEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "due_date": {
          "description": "*Deprecated: new integrations should prefer the `due_on` field.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "due_on": {
          "description": "The day on which this project is due. This takes a date with format YYYY-MM-DD.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "followers": {
          "description": "*Create-only*. Comma separated string of users. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_notes": {
          "description": "[Opt In](/docs/inputoutput-options). The notes of the project with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "minimum_access_level_for_customization": {
          "description": "The minimum access level needed for project members to modify this project's workflow and appearance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1MinimumAccessLevelForCustomizationEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "minimum_access_level_for_sharing": {
          "description": "The minimum access level needed for project members to share the project and manage project memberships.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1MinimumAccessLevelForSharingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the project (ie., its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "The current owner of the project, may be null.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "privacy_setting": {
          "description": "The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1PrivacySettingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "public": {
          "description": "*Deprecated:* new integrations use `privacy_setting` instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "start_on": {
          "description": "The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "team": {
          "description": "The team that this project is shared with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspace": {
          "description": "The `gid` of a workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectResponse": {
      "fields": {
        "archived": {
          "description": "True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "color": {
          "description": "Color of the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "completed": {
          "description": "True if the project is currently marked complete, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "completed_at": {
          "description": "The time at which this project was completed, or null if the project is not completed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "completed_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_from_template": {
          "description": "A *project template* is an object that allows new projects to be created with a predefined setup, which may include tasks, sections, Rules, etc. It simplifies the process of running a workflow that involves a similar set of work every time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse1CreatedFromTemplateAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "current_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1CurrentStatusAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "current_status_update": {
          "description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1CurrentStatusUpdateAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom_field_settings": {
          "description": "Array of Custom Field Settings (in compact form).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomFieldSettingResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "custom_fields": {
          "description": "Array of Custom Fields.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomFieldCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "default_access_level": {
          "description": "The default access for users or teams who join or are added as members to the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1DefaultAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "default_view": {
          "description": "The default view (list, board, calendar, or timeline) of a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1DefaultViewEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "due_date": {
          "description": "*Deprecated: new integrations should prefer the `due_on` field.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "due_on": {
          "description": "The day on which this project is due. This takes a date with format YYYY-MM-DD.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "followers": {
          "description": "Array of users following this project. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_notes": {
          "description": "[Opt In](/docs/inputoutput-options). The notes of the project with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "icon": {
          "description": "The icon for a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse1IconEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "members": {
          "description": "Array of users who are members of this project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "minimum_access_level_for_customization": {
          "description": "The minimum access level needed for project members to modify this project's workflow and appearance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1MinimumAccessLevelForCustomizationEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "minimum_access_level_for_sharing": {
          "description": "The minimum access level needed for project members to share the project and manage project memberships.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1MinimumAccessLevelForSharingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "modified_at": {
          "description": "The time at which this project was last modified. *Note: This does not currently reflect any changes in associations such as tasks or comments that may have been added or removed from the project.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the project (ie., its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse1OwnerAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "permalink_url": {
          "description": "A url that points directly to the object within Asana.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "privacy_setting": {
          "description": "The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1PrivacySettingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "project_brief": {
          "description": "A *Project Brief* allows you to explain the what and why of the project to your team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse1ProjectBriefAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "public": {
          "description": "*Deprecated:* new integrations use `privacy_setting` instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_on": {
          "description": "The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "team": {
          "description": "A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse1TeamAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "workspace": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse1WorkspaceAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ProjectResponse1CreatedFromTemplateAllOf": {
      "description": "A *project template* is an object that allows new projects to be created with a predefined setup, which may include tasks, sections, Rules, etc. It simplifies the process of running a workflow that involves a similar set of work every time.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectResponse1OwnerAllOf": {
      "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectResponse1ProjectBriefAllOf": {
      "description": "A *Project Brief* allows you to explain the what and why of the project to your team.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectResponse1TeamAllOf": {
      "description": "A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectResponse1WorkspaceAllOf": {
      "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectSaveAsTemplateBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectSaveAsTemplateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ProjectSaveAsTemplateRequestInput": {
      "fields": {
        "name": {
          "description": "The name of the new project template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "public": {
          "description": "Sets the project template to public to its team.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "team": {
          "description": "Sets the team of the new project template. If the project exists in an organization, specify team and not workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspace": {
          "description": "Sets the workspace of the new project template. Only specify workspace if the project exists in a workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "ProjectSaveAsTemplateRequest"
    },
    "ProjectSaveAsTemplateResultObject": {
      "fields": {
        "data": {
          "description": "A *job* is an object representing a process that handles asynchronous work.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JobResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ProjectSectionInsertRequestInput": {
      "fields": {
        "after_section": {
          "description": "Insert the given section immediately after the section specified by this parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "before_section": {
          "description": "Insert the given section immediately before the section specified by this parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "section": {
          "description": "The section to reorder.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "ProjectSectionInsertRequest"
    },
    "ProjectStatusCompact": {
      "description": "*Deprecated: new integrations should prefer the `status_update` resource.* A *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: \"green\" for projects that are on track, \"yellow\" for projects at risk, and \"red\" for projects that are behind.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the project status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectStatusRequestInput": {
      "fields": {
        "color": {
          "description": "The color associated with the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectStatusRequest1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_text": {
          "description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "The text content of the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the project status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectStatusResponse": {
      "fields": {
        "author": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "color": {
          "description": "The color associated with the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectStatusBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_text": {
          "description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "modified_at": {
          "description": "The time at which this project status was last modified. *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "The text content of the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the project status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectTemplateBase": {
      "fields": {
        "color": {
          "description": "Color of the project template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectTemplateBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "description": {
          "description": "Free-form textual information associated with the project template",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_description": {
          "description": "The description of the project template with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectTemplateBase1OwnerAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "public": {
          "description": "True if the project template is public to its team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "requested_dates": {
          "description": "Array of date variables in this project template. Calendar dates must be provided for these variables when instantiating a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "DateVariableCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "requested_roles": {
          "description": "Array of template roles in this project template. User Ids can be provided for these variables when instantiating a project to assign template tasks to the user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TemplateRole",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team": {
          "description": "A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ProjectTemplateBase1OwnerAllOf": {
      "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectTemplateCompact": {
      "description": "A *project template* is an object that allows new projects to be created with a predefined setup, which may include tasks, sections, Rules, etc. It simplifies the process of running a workflow that involves a similar set of work every time.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ProjectTemplateInstantiateProjectRequestInput": {
      "fields": {
        "is_strict": {
          "description": "*Optional*. If set to `true`, the endpoint returns an \"Unprocessable Entity\" error if you fail to provide a calendar date value for any date variable. If set to `false`, a default date is used for each unfulfilled date variable (e.g., the current date is used as the Start Date of a project).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the new project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "privacy_setting": {
          "description": "The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectTemplateInstantiateProjectRequestPrivacySettingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "public": {
          "description": "*Deprecated:* new integrations use `privacy_setting` instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "requested_dates": {
          "description": "*Conditional*. Array of mappings of date variables to calendar dates. This property is required in the instantiation request if the project template includes dates (e.g., a start date on a task).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "DateVariableRequestInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "requested_roles": {
          "description": "Array of mappings of template roles to user ids",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "RequestedRoleRequestInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "team": {
          "description": "*Optional*. Sets the team of the new project. If the project template exists in an _organization_, you may specify a value for `team`. If no value is provided then it defaults to the same team as the project template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "ProjectTemplateInstantiateProjectRequest"
    },
    "ProjectUpdateRequestInput": {
      "fields": {
        "archived": {
          "description": "True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "color": {
          "description": "Color of the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "current_status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1CurrentStatusAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "current_status_update": {
          "description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1CurrentStatusUpdateAllOfInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom_fields": {
          "description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, or object (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "default_access_level": {
          "description": "The default access for users or teams who join or are added as members to the project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1DefaultAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "default_view": {
          "description": "The default view (list, board, calendar, or timeline) of a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1DefaultViewEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "due_date": {
          "description": "*Deprecated: new integrations should prefer the `due_on` field.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "due_on": {
          "description": "The day on which this project is due. This takes a date with format YYYY-MM-DD.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "followers": {
          "description": "*Create-only*. Comma separated string of users. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_notes": {
          "description": "[Opt In](/docs/inputoutput-options). The notes of the project with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "minimum_access_level_for_customization": {
          "description": "The minimum access level needed for project members to modify this project's workflow and appearance.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1MinimumAccessLevelForCustomizationEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "minimum_access_level_for_sharing": {
          "description": "The minimum access level needed for project members to share the project and manage project memberships.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1MinimumAccessLevelForSharingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the project (ie., its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "The current owner of the project, may be null.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "privacy_setting": {
          "description": "The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBase1PrivacySettingEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "public": {
          "description": "*Deprecated:* new integrations use `privacy_setting` instead.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "start_on": {
          "description": "The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "team": {
          "description": "The team that this project is shared with.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "RemoveCustomFieldSettingForPortfolioBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RemoveCustomFieldSettingRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveCustomFieldSettingForPortfolioResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveCustomFieldSettingForProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RemoveCustomFieldSettingRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveCustomFieldSettingForProjectResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveCustomFieldSettingRequestInput": {
      "fields": {
        "custom_field": {
          "description": "The custom field to remove from this portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "RemoveCustomFieldSettingRequest"
    },
    "RemoveDependenciesForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ModifyDependenciesRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveDependenciesForTaskResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveDependentsForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A set of dependent tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ModifyDependentsRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveDependentsForTaskResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveFollowerForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskRemoveFollowersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveFollowerForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveFollowersBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskAddFollowersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveFollowersForProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RemoveFollowersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveFollowersForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveFollowersRequestInput": {
      "fields": {
        "followers": {
          "description": "An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "RemoveFollowersRequest"
    },
    "RemoveFollowersResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveItemForPortfolioBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioRemoveItemRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveItemForPortfolioResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveMembersForPortfolioBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RemoveMembersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveMembersForPortfolioResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveMembersForProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RemoveMembersRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveMembersForProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveMembersRequestInput": {
      "fields": {
        "members": {
          "description": "An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "RemoveMembersRequest"
    },
    "RemoveProjectForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskRemoveProjectRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveProjectForTaskResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveSupportingRelationshipBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRemoveSupportingRelationshipRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveSupportingRelationshipResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveTagForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskRemoveTagRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveTagForTaskResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveUserForTeamBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A user identification object for specification with the addUser/removeUser endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRemoveUserRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveUserForTeamResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveUserForWorkspaceBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A user identification object for specification with the addUser/removeUser endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceRemoveUserRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RemoveUserForWorkspaceResultObject": {
      "fields": {
        "data": {
          "description": "An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EmptyResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "RequestedRoleRequestInput": {
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the template role in the project template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "value": {
          "description": "The user id that should be assigned to the template role.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "RequestedRoleRequest"
    },
    "RuleTriggerRequestInput": {
      "fields": {
        "action_data": {
          "description": "The dynamic keys and values of the request. These fields are intended to be used in the action for the rule associated with this trigger.",
          "type": {
            "name": "JSON",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource": {
          "description": "The ID of the resource. For the duration of the beta, this resource is always a task, and this task must exist in the project in which the rule is created.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "RuleTriggerRequest"
    },
    "RuleTriggerResponse": {
      "fields": {
        "message": {
          "description": "Message providing more detail about the result",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SearchTasksForWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "SectionCompact": {
      "description": "A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the section (i.e. the text displayed as the section header).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SectionRequestInput": {
      "fields": {
        "insert_after": {
          "description": "An existing section within this project after which the added section should be inserted. Cannot be provided together with insert_before.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insert_before": {
          "description": "An existing section within this project before which the added section should be inserted. Cannot be provided together with insert_after.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The text to be displayed as the section name. This cannot be an empty string.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "SectionRequest"
    },
    "SectionResponse": {
      "fields": {
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the section (i.e. the text displayed as the section header).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "project": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "projects": {
          "description": "*Deprecated - please use project instead*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SectionTaskInsertRequestInput": {
      "fields": {
        "insert_after": {
          "description": "An existing task within this section after which the added task should be inserted. Cannot be provided together with insert_before.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insert_before": {
          "description": "An existing task within this section before which the added task should be inserted. Cannot be provided together with insert_after.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "task": {
          "description": "The task to add to this section.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "SectionTaskInsertRequest"
    },
    "SetParentForTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskSetParentRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "SetParentForTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "StatusUpdateCompact": {
      "description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StatusUpdateCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StatusUpdateRequestInput": {
      "fields": {
        "html_text": {
          "description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent": {
          "description": "The id of parent to send this status update to. This can be a project, goal or portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status_type": {
          "description": "The type associated with the status update. This represents the current state of the object this object is on.",
          "type": {
            "name": "StatusUpdateBase1StatusTypeEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "The text content of the status update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StatusUpdateResponse": {
      "fields": {
        "author": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "hearted": {
          "description": "*Deprecated - please use liked instead* True if the status is hearted by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "hearts": {
          "description": "*Deprecated - please use likes instead* Array of likes for users who have hearted this status.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Like",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "html_text": {
          "description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "liked": {
          "description": "True if the status is liked by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "likes": {
          "description": "Array of likes for users who have liked this status.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Like",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "modified_at": {
          "description": "The time at which this project status was last modified. *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the status.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "num_hearts": {
          "description": "*Deprecated - please use likes instead* The number of users who have hearted this status.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "num_likes": {
          "description": "The number of users who have liked this status.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "parent": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StatusUpdateResponse1ParentAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The `resource_subtype`s for `status` objects represent the type of their parent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StatusUpdateCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status_type": {
          "description": "The type associated with the status update. This represents the current state of the object this object is on.",
          "type": {
            "name": "StatusUpdateBase1StatusTypeEnum",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "The text content of the status update.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "title": {
          "description": "The title of the status update.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StatusUpdateResponse1ParentAllOf": {
      "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StoryCompact": {
      "description": "A story represents an activity associated with an object in the Asana system.",
      "fields": {
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "*Create-only*. Human-readable text for the story or comment. This will not include the name of the creator. *Note: This is not guaranteed to be stable for a given type of story. For example, text for a reassignment may not always say assigned to  as the text for a story can both be edited and change based on the language settings of the user making the request.* Use the `resource_subtype` property to discover the action that created the story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StoryRequestInput": {
      "description": "A story represents an activity associated with an object in the Asana system.",
      "fields": {
        "html_text": {
          "description": "[Opt In](/docs/inputoutput-options). HTML formatted text for a comment. This will not include the name of the creator.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_pinned": {
          "description": "*Conditional*. Whether the story should be pinned on the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "sticker_name": {
          "description": "The name of the sticker in this story. `null` if there is no sticker.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryRequestStickerNameEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "text": {
          "description": "The plain text of the comment to add. Cannot be used with html_text.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "StoryRequest"
    },
    "StoryResponse": {
      "fields": {
        "assignee": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom_field": {
          "description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.  Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "dependency": {
          "description": "The *task* is the basic object around which many operations in Asana are centered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "duplicate_of": {
          "description": "The *task* is the basic object around which many operations in Asana are centered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "duplicated_from": {
          "description": "The *task* is the basic object around which many operations in Asana are centered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "follower": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "hearted": {
          "description": "*Deprecated - please use likes instead* *Conditional*. True if the story is hearted by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "hearts": {
          "description": "*Deprecated - please use likes instead*  *Conditional*. Array of likes for users who have hearted this story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Like",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "html_text": {
          "description": "[Opt In](/docs/inputoutput-options). HTML formatted text for a comment. This will not include the name of the creator.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_editable": {
          "description": "*Conditional*. Whether the text of the story can be edited after creation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_edited": {
          "description": "*Conditional*. Whether the text of the story has been edited after creation.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_pinned": {
          "description": "*Conditional*. Whether the story should be pinned on the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "liked": {
          "description": "*Conditional*. True if the story is liked by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "likes": {
          "description": "*Conditional*. Array of likes for users who have liked this story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Like",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "new_approval_status": {
          "description": "*Conditional*. The new value of approval status.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "new_date_value": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponseDates",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "new_dates": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponseDates",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "new_enum_value": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EnumOption",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "new_multi_enum_values": {
          "description": "*Conditional*. The new value of a multi-enum custom field story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EnumOption",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "new_name": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "new_number_value": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "new_people_value": {
          "description": "*Conditional*. The new value of a people custom field story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "new_resource_subtype": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "new_section": {
          "description": "A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SectionCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "new_text_value": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "num_hearts": {
          "description": "*Deprecated - please use likes instead*  *Conditional*. The number of users who have hearted this story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "num_likes": {
          "description": "*Conditional*. The number of users who have liked this story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "old_approval_status": {
          "description": "*Conditional*. The old value of approval status.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "old_date_value": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponseDates",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "old_dates": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponseDates",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "old_enum_value": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EnumOption",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "old_multi_enum_values": {
          "description": "*Conditional*. The old value of a multi-enum custom field story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "EnumOption",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "old_name": {
          "description": "*Conditional*'",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "old_number_value": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "old_people_value": {
          "description": "*Conditional*. The old value of a people custom field story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "old_resource_subtype": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "old_section": {
          "description": "A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SectionCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "old_text_value": {
          "description": "*Conditional*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "previews": {
          "description": "*Conditional*. A collection of previews to be displayed in the story.  *Note: This property only exists for comment stories.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Preview",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "project": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "source": {
          "description": "The component of the Asana product the user used to trigger the story.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponse1SourceEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sticker_name": {
          "description": "The name of the sticker in this story. `null` if there is no sticker.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryBaseStickerNameEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "story": {
          "description": "A story represents an activity associated with an object in the Asana system.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "tag": {
          "description": "A *tag* is a label that can be attached to any task in Asana. It exists in a single workspace or organization.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "target": {
          "description": "The *task* is the basic object around which many operations in Asana are centered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponse1TargetAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "task": {
          "description": "The *task* is the basic object around which many operations in Asana are centered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "text": {
          "description": "The plain text of the comment to add. Cannot be used with html_text.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "type": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponse1TypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StoryResponse1TargetAllOf": {
      "description": "The *task* is the basic object around which many operations in Asana are centered.",
      "fields": {
        "created_by": {
          "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactCreatedByObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "StoryResponseDates": {
      "description": "*Conditional*",
      "fields": {
        "due_at": {
          "description": "The UTC date and time on which this task is due, or null if the task has no due time. This takes an ISO 8601 date string in UTC and should not be used together with `due_on`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "due_on": {
          "description": "The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "start_on": {
          "description": "The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        }
      }
    },
    "TagCompact": {
      "description": "A *tag* is a label that can be attached to any task in Asana. It exists in a single workspace or organization.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TagCreateRequestInput": {
      "fields": {
        "color": {
          "description": "Color of the tag.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagBaseRequest1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "followers": {
          "description": "An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the tag (i.e. its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspace": {
          "description": "Gid of an object.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TagCreateTagForWorkspaceRequestInput": {
      "fields": {
        "color": {
          "description": "Color of the tag.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "followers": {
          "description": "An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the tag (i.e. its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TagResponse": {
      "fields": {
        "color": {
          "description": "Color of the tag.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagBase1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "followers": {
          "description": "Array of users following this tag.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the tag (i.e. its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "permalink_url": {
          "description": "A url that points directly to the object within Asana.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspace": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TagUpdateRequestInput": {
      "fields": {
        "color": {
          "description": "Color of the tag.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagUpdateRequest1ColorEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the tag (i.e. its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskAddFollowersRequestInput": {
      "fields": {
        "followers": {
          "description": "An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "alias": "TaskAddFollowersRequest"
    },
    "TaskAddProjectRequestInput": {
      "fields": {
        "insert_after": {
          "description": "A task in the project to insert the task after, or `null` to insert at the beginning of the list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insert_before": {
          "description": "A task in the project to insert the task before, or `null` to insert at the end of the list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "project": {
          "description": "The project to add the task to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "section": {
          "description": "A section in the project to insert the task into. The task will be inserted at the bottom of the section.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "TaskAddProjectRequest"
    },
    "TaskAddTagRequestInput": {
      "fields": {
        "tag": {
          "description": "The tag's gid to add to the task.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "TaskAddTagRequest"
    },
    "TaskBase1ExternalObject": {
      "description": "*OAuth Required*. *Conditional*. This field is returned only if external values are set or included by using [Opt In] (/docs/inputoutput-options). The external field allows you to store app-specific metadata on tasks, including a gid that can be used to retrieve tasks and a data blob that can store app-specific character strings. Note that you will need to authenticate with Oauth to access or modify this data. Once an external gid is set, you can use the notation `external:custom_gid` to reference your object anywhere in the API where you may use the original object gid. See the page on Custom External Data for more details.",
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskBase1ExternalObjectInput": {
      "description": "*OAuth Required*. *Conditional*. This field is returned only if external values are set or included by using [Opt In] (/docs/inputoutput-options). The external field allows you to store app-specific metadata on tasks, including a gid that can be used to retrieve tasks and a data blob that can store app-specific character strings. Note that you will need to authenticate with Oauth to access or modify this data. Once an external gid is set, you can use the notation `external:custom_gid` to reference your object anywhere in the API where you may use the original object gid. See the page on Custom External Data for more details.",
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskBase1MembershipsObject": {
      "fields": {
        "project": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "section": {
          "description": "A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SectionCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TaskCompact": {
      "description": "The *task* is the basic object around which many operations in Asana are centered.",
      "fields": {
        "created_by": {
          "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactCreatedByObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskCompactCreatedByObject": {
      "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The type of resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskCountResponse": {
      "description": "A response object returned from the task count endpoint.",
      "fields": {
        "num_completed_milestones": {
          "description": "The number of completed milestones in a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "num_completed_tasks": {
          "description": "The number of completed tasks in a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "num_incomplete_milestones": {
          "description": "The number of incomplete milestones in a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "num_incomplete_tasks": {
          "description": "The number of incomplete tasks in a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "num_milestones": {
          "description": "The number of milestones in a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "num_tasks": {
          "description": "The number of tasks in a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "TaskDuplicateRequestInput": {
      "fields": {
        "include": {
          "description": "A comma-separated list of fields that will be duplicated to the new task. ##### Fields - assignee - attachments - dates - dependencies - followers - notes - parent - projects - subtasks - tags",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "([notes|assignee|subtasks|attachments|tags|followers|projects|dates|dependencies|parent])(,\\1)*"
          }
        },
        "name": {
          "description": "The name of the new task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "TaskDuplicateRequest"
    },
    "TaskRemoveFollowersRequestInput": {
      "fields": {
        "followers": {
          "description": "An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "alias": "TaskRemoveFollowersRequest"
    },
    "TaskRemoveProjectRequestInput": {
      "fields": {
        "project": {
          "description": "The project to remove the task from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "TaskRemoveProjectRequest"
    },
    "TaskRemoveTagRequestInput": {
      "fields": {
        "tag": {
          "description": "The tag's gid to remove from the task.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "TaskRemoveTagRequest"
    },
    "TaskRequestInput": {
      "fields": {
        "approval_status": {
          "description": "*Conditional* Reflects the approval status of this task. This field is kept in sync with `completed`, meaning `pending` translates to false while `approved`, `rejected`, and `changes_requested` translate to true. If you set completed to true, this field will be set to `approved`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskBase1ApprovalStatusEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "assignee": {
          "description": "Gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "assignee_section": {
          "description": "The *assignee section* is a subdivision of a project that groups tasks together in the assignee's \"My Tasks\" list. It can either be a header above a list of tasks in a list view or a column in a board view of \"My Tasks.\" The `assignee_section` property will be returned in the response only if the request was sent by the user who is the assignee of the task. Note that you can only write to `assignee_section` with the gid of an existing section visible in the user's \"My Tasks\" list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "assignee_status": {
          "description": "*Deprecated* Scheduling status of this task for the user it is assigned to. This field can only be set if the assignee is non-null. Setting this field to \"inbox\" or \"upcoming\" inserts it at the top of the section, while the other options will insert at the bottom.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskBase1AssigneeStatusEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "completed": {
          "description": "True if the task is currently marked complete, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "completed_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompactInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom_fields": {
          "description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, object, or array (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom_type": {
          "description": "GID or globally-unique identifier of a custom_type.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "custom_type_status_option": {
          "description": "GID or globally-unique identifier of a custom_type_status_option",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "due_at": {
          "description": "The UTC date and time on which this task is due, or null if the task has no due time. This takes an ISO 8601 date string in UTC and should not be used together with `due_on`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "due_on": {
          "description": "The localized date on which this task is due, or null if the task has no due date. This takes a date with `YYYY-MM-DD` format and should not be used together with `due_at`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "external": {
          "description": "*OAuth Required*. *Conditional*. This field is returned only if external values are set or included by using [Opt In] (/docs/inputoutput-options). The external field allows you to store app-specific metadata on tasks, including a gid that can be used to retrieve tasks and a data blob that can store app-specific character strings. Note that you will need to authenticate with Oauth to access or modify this data. Once an external gid is set, you can use the notation `external:custom_gid` to reference your object anywhere in the API where you may use the original object gid. See the page on Custom External Data for more details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskBase1ExternalObjectInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "followers": {
          "description": "*Create-Only* An array of strings identifying users. These can either be the string \"me\", an email, or the gid of a user. In order to change followers on an existing task use `addFollowers` and `removeFollowers`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "html_notes": {
          "description": "[Opt In](/docs/inputoutput-options). The notes of the text with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "liked": {
          "description": "True if the task is liked by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the task (i.e. its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent": {
          "description": "Gid of a task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "projects": {
          "description": "*Create-Only* Array of project gids. In order to change projects on an existing task use `addProject` and `removeProject`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_at": {
          "description": "Date and time on which work begins for the task, or null if the task has no start time. This takes an ISO 8601 date string in UTC and should not be used together with `start_on`. *Note: `due_at` must be present in the request when setting or unsetting the `start_at` parameter.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "start_on": {
          "description": "The day on which work begins for the task , or null if the task has no start date. This takes a date with `YYYY-MM-DD` format and should not be used together with `start_at`. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "tags": {
          "description": "*Create-Only* Array of tag gids. In order to change tags on an existing task use `addTag` and `removeTag`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "workspace": {
          "description": "Gid of a workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskResponse": {
      "fields": {
        "actual_time_minutes": {
          "description": "This value represents the sum of all the Time Tracking entries in the Actual Time field on a given Task. It is represented as a nullable long value.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "approval_status": {
          "description": "*Conditional* Reflects the approval status of this task. This field is kept in sync with `completed`, meaning `pending` translates to false while `approved`, `rejected`, and `changes_requested` translate to true. If you set completed to true, this field will be set to `approved`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskBase1ApprovalStatusEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "assignee": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "assignee_section": {
          "description": "A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse1AssigneeSectionAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "assignee_status": {
          "description": "*Deprecated* Scheduling status of this task for the user it is assigned to. This field can only be set if the assignee is non-null. Setting this field to \"inbox\" or \"upcoming\" inserts it at the top of the section, while the other options will insert at the bottom.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskBase1AssigneeStatusEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "completed": {
          "description": "True if the task is currently marked complete, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "completed_at": {
          "description": "The time at which this task was completed, or null if the task is incomplete.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "completed_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_by": {
          "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactCreatedByObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom_fields": {
          "description": "Array of custom field values applied to the task. These represent the custom field values recorded on this project for a particular custom field. For example, these custom field values will contain an `enum_value` property for custom fields of type `enum`, a `text_value` property for custom fields of type `text`, and so on. Please note that the `gid` returned on each custom field value *is identical* to the `gid` of the custom field, which allows referencing the custom field metadata through the `/custom_fields/custom_field-gid` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomFieldResponse",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "custom_type": {
          "description": "Custom Types extend the types of Asana Objects, currently only Custom Tasks are supported.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomTypeCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "custom_type_status_option": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomTypeStatusOptionCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "dependencies": {
          "description": "[Opt In](/docs/inputoutput-options). Array of resources referencing tasks that this task depends on. The objects contain only the gid of the dependency.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AsanaResource",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "dependents": {
          "description": "[Opt In](/docs/inputoutput-options). Array of resources referencing tasks that depend on this task. The objects contain only the ID of the dependent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AsanaResource",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "due_at": {
          "description": "The UTC date and time on which this task is due, or null if the task has no due time. This takes an ISO 8601 date string in UTC and should not be used together with `due_on`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "due_on": {
          "description": "The localized date on which this task is due, or null if the task has no due date. This takes a date with `YYYY-MM-DD` format and should not be used together with `due_at`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "external": {
          "description": "*OAuth Required*. *Conditional*. This field is returned only if external values are set or included by using [Opt In] (/docs/inputoutput-options). The external field allows you to store app-specific metadata on tasks, including a gid that can be used to retrieve tasks and a data blob that can store app-specific character strings. Note that you will need to authenticate with Oauth to access or modify this data. Once an external gid is set, you can use the notation `external:custom_gid` to reference your object anywhere in the API where you may use the original object gid. See the page on Custom External Data for more details.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskBase1ExternalObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "followers": {
          "description": "Array of users following this task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "hearted": {
          "description": "*Deprecated - please use liked instead* True if the task is hearted by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "hearts": {
          "description": "*Deprecated - please use likes instead* Array of likes for users who have hearted this task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Like",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "html_notes": {
          "description": "[Opt In](/docs/inputoutput-options). The notes of the text with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_rendered_as_separator": {
          "description": "[Opt In](/docs/inputoutput-options). In some contexts tasks can be rendered as a visual separator; for instance, subtasks can appear similar to [sections](/reference/sections) without being true `section` objects. If a `task` object is rendered this way in any context it will have the property `is_rendered_as_separator` set to `true`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "liked": {
          "description": "True if the task is liked by the authorized user, false if not.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "likes": {
          "description": "Array of likes for users who have liked this task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Like",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "memberships": {
          "description": "*Create-only*. Array of projects this task is associated with and the section it is in. At task creation time, this array can be used to add the task to specific sections. After task creation, these associations can be modified using the `addProject` and `removeProject` endpoints. Note that over time, more types of memberships may be added to this property.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskBase1MembershipsObject",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "modified_at": {
          "description": "The time at which this task was last modified.  The following conditions will change `modified_at`:  - story is created on a task - story is trashed on a task - attachment is trashed on a task - task is assigned or unassigned - custom field value is changed - the task itself is trashed - Or if any of the following fields are updated:   - completed   - name   - due_date   - description   - attachments   - items   - schedule_status  The following conditions will _not_ change `modified_at`:  - moving to a new container (project, portfolio, etc) - comments being added to the task (but the stories they generate   _will_ affect `modified_at`)",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "name": {
          "description": "The name of the task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "notes": {
          "description": "Free-form textual information associated with the task (i.e. its description).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "num_hearts": {
          "description": "*Deprecated - please use likes instead* The number of users who have hearted this task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "num_likes": {
          "description": "The number of users who have liked this task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "num_subtasks": {
          "description": "[Opt In](/docs/inputoutput-options). The number of subtasks on this task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "parent": {
          "description": "The *task* is the basic object around which many operations in Asana are centered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse1ParentAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "permalink_url": {
          "description": "A url that points directly to the object within Asana.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "projects": {
          "description": "*Create-only.* Array of projects this task is associated with. At task creation time, this array can be used to add the task to many projects at once. After task creation, these associations can be modified using the addProject and removeProject endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_at": {
          "description": "Date and time on which work begins for the task, or null if the task has no start time. This takes an ISO 8601 date string in UTC and should not be used together with `start_on`. *Note: `due_at` must be present in the request when setting or unsetting the `start_at` parameter.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "start_on": {
          "description": "The day on which work begins for the task , or null if the task has no start date. This takes a date with `YYYY-MM-DD` format and should not be used together with `start_at`. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "tags": {
          "description": "Array of tags associated with this task. In order to change tags on an existing task use `addTag` and `removeTag`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TagCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "workspace": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse1WorkspaceAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TaskResponse1AssigneeSectionAllOf": {
      "description": "A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the section (i.e. the text displayed as the section header).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskResponse1ParentAllOf": {
      "description": "The *task* is the basic object around which many operations in Asana are centered.",
      "fields": {
        "created_by": {
          "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactCreatedByObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the task.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning. The resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompactResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskResponse1WorkspaceAllOf": {
      "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskSetParentRequestInput": {
      "fields": {
        "insert_after": {
          "description": "A subtask of the parent to insert the task after, or `null` to insert at the beginning of the list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "insert_before": {
          "description": "A subtask of the parent to insert the task before, or `null` to insert at the end of the list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent": {
          "description": "The new parent of the task, or `null` for no parent.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "TaskSetParentRequest"
    },
    "TaskTemplateCompact": {
      "description": "A *task template* is an object that allows new tasks to be created with a predefined setup.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the task template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskTemplateInstantiateTaskRequestInput": {
      "fields": {
        "name": {
          "description": "The name of the new task. If not provided, the name of the task template will be used.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "TaskTemplateInstantiateTaskRequest"
    },
    "TaskTemplateRecipe": {
      "fields": {
        "attachments": {
          "description": "Array of attachments that will be added to the task created from this template",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AttachmentCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "custom_fields": {
          "description": "Array of custom fields that will be added to the task created from this template",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CustomFieldCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "dependencies": {
          "description": "Array of task templates that the task created from this template will depend on",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskTemplateRecipeCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "dependents": {
          "description": "Array of task templates that will depend on the task created from this template",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskTemplateRecipeCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "description": {
          "description": "Description of the task that will be created from this template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "due_time": {
          "description": "The time of day that the task will be due",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "followers": {
          "description": "Array of users that will be added as followers to the task created from this template",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UserCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "html_description": {
          "description": "HTML description of the task that will be created from this template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "memberships": {
          "description": "Array of projects that the task created from this template will be added to",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "name": {
          "description": "Name of the task that will be created from this template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "relative_due_on": {
          "description": "The number of days after the task has been instantiated on which that the task will be due",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "relative_start_on": {
          "description": "The number of days after the task has been instantiated on which that the task will start",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "subtasks": {
          "description": "Array of subtasks that will be added to the task created from this template",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TaskTemplateRecipeCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "task_resource_subtype": {
          "description": "The subtype of the task that will be created from this template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskTemplateRecipeCompactTaskResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskTemplateRecipeCompact": {
      "fields": {
        "name": {
          "description": "Name of the task that will be created from this template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "task_resource_subtype": {
          "description": "The subtype of the task that will be created from this template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskTemplateRecipeCompactTaskResourceSubtypeEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TaskTemplateResponse": {
      "fields": {
        "created_at": {
          "description": "The time at which this task template was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the task template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "project": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "template": {
          "description": "The configuration for the task that will be created from this template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskTemplateRecipe",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TeamAddUserRequestInput": {
      "description": "A user identification object for specification with the addUser/removeUser endpoints.",
      "fields": {
        "user": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "TeamAddUserRequest"
    },
    "TeamCompact": {
      "description": "A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TeamMembershipCompact": {
      "description": "This object represents a user's connection to a team.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_admin": {
          "description": "Describes if the user is a team admin.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_guest": {
          "description": "Describes if the user is a guest in the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_limited_access": {
          "description": "Describes if the user has limited access to the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team": {
          "description": "A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TeamMembershipResponse": {
      "description": "This object represents a user's connection to a team.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_admin": {
          "description": "Describes if the user is a team admin.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_guest": {
          "description": "Describes if the user is a guest in the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_limited_access": {
          "description": "Describes if the user has limited access to the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team": {
          "description": "A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TeamRemoveUserRequestInput": {
      "description": "A user identification object for specification with the addUser/removeUser endpoints.",
      "fields": {
        "user": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "TeamRemoveUserRequest"
    },
    "TeamRequestInput": {
      "fields": {
        "description": {
          "description": "The description of the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "edit_team_name_or_description_access_level": {
          "description": "Controls who can edit team name and description",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequest1EditTeamNameOrDescriptionAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "edit_team_visibility_or_trash_team_access_level": {
          "description": "Controls who can edit team visibility and trash teams",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequest1EditTeamVisibilityOrTrashTeamAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "endorsed": {
          "description": "Whether the team has been endorsed",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "guest_invite_management_access_level": {
          "description": "Controls who can accept or deny guest invites for a given team",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequest1GuestInviteManagementAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_description": {
          "description": "The description of the team with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "join_request_management_access_level": {
          "description": "Controls who can accept or deny join team requests for a Membership by Request team. This field can only be updated when the team's `visibility` field is `request_to_join`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequest1JoinRequestManagementAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "member_invite_management_access_level": {
          "description": "Controls who can accept or deny member invites for a given team",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequest1MemberInviteManagementAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "organization": {
          "description": "The organization/workspace the team belongs to. This must be the same organization you are in and cannot be changed once set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team_content_management_access_level": {
          "description": "Controls who can create and share content with the team",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequest1TeamContentManagementAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team_member_removal_access_level": {
          "description": "Controls who can remove team members",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequest1TeamMemberRemovalAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "visibility": {
          "description": "The visibility of the team to users in the same organization",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequest1VisibilityEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TeamResponse": {
      "fields": {
        "description": {
          "description": "[Opt In](/docs/inputoutput-options). The description of the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "edit_team_name_or_description_access_level": {
          "description": "Controls who can edit team name and description",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse1EditTeamNameOrDescriptionAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "edit_team_visibility_or_trash_team_access_level": {
          "description": "Controls who can edit team visibility and trash teams",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse1EditTeamVisibilityOrTrashTeamAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "endorsed": {
          "description": "Whether the team has been endorsed",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "guest_invite_management_access_level": {
          "description": "Controls who can accept or deny guest invites for a given team",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse1GuestInviteManagementAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "html_description": {
          "description": "[Opt In](/docs/inputoutput-options). The description of the team with formatting as HTML.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "join_request_management_access_level": {
          "description": "Controls who can accept or deny join team requests for a Membership by Request team. This field can only be updated when the team's `visibility` field is `request_to_join`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse1JoinRequestManagementAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "member_invite_management_access_level": {
          "description": "Controls who can accept or deny member invites for a given team",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse1MemberInviteManagementAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the team.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "organization": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse1OrganizationAllOf",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "permalink_url": {
          "description": "A url that points directly to the object within Asana.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team_content_management_access_level": {
          "description": "Controls who can create and share content with the team",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse1TeamContentManagementAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "team_member_removal_access_level": {
          "description": "Controls who can remove team members",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse1TeamMemberRemovalAccessLevelEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "visibility": {
          "description": "The visibility of the team to users in the same organization",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse1VisibilityEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TeamResponse1OrganizationAllOf": {
      "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TemplateRole": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "Name of the template role.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TimePeriodCompact": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "display_name": {
          "description": "A string representing the cadence code and the fiscal year.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_on": {
          "description": "The localized end date of the time period in `YYYY-MM-DD` format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "period": {
          "description": "The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimePeriodCompactPeriodEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_on": {
          "description": "The localized start date of the time period in `YYYY-MM-DD` format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TimePeriodResponse": {
      "fields": {
        "display_name": {
          "description": "A string representing the cadence code and the fiscal year.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_on": {
          "description": "The localized end date of the time period in `YYYY-MM-DD` format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimePeriodCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "period": {
          "description": "The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimePeriodCompactPeriodEnum",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_on": {
          "description": "The localized start date of the time period in `YYYY-MM-DD` format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TimeTrackingEntryBase": {
      "fields": {
        "attributable_to": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "duration_minutes": {
          "description": "Time in minutes tracked by the entry.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "entered_on": {
          "description": "The day that this entry is logged on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "task": {
          "description": "The *task* is the basic object around which many operations in Asana are centered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TimeTrackingEntryCompact": {
      "description": "A generic Asana Resource, containing a globally unique identifier.",
      "fields": {
        "attributable_to": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "created_by": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "duration_minutes": {
          "description": "Time in minutes tracked by the entry.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "entered_on": {
          "description": "The day that this entry is logged on.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TriggerRuleBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RuleTriggerRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TriggerRuleResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "RuleTriggerResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TypeaheadForWorkspaceResultObject": {
      "description": "A generic list of objects, such as those returned by the typeahead search endpoint.",
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AsanaNamedResource",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "UpdateAllocationBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateAllocationResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AllocationResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateCustomFieldBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateCustomFieldResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CustomFieldResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateEnumOptionBodyObjectInput": {
      "fields": {
        "data": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EnumOptionBaseInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateEnumOptionResultObject": {
      "fields": {
        "data": {
          "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.  You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.  **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.  On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to trashing the enum option in the Asana web app within the Edit Fields dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.  Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.  An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "EnumOption",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateGoalBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalUpdateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateGoalMetricBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalMetricCurrentValueRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateGoalMetricResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateGoalRelationshipBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateGoalRelationshipResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalRelationshipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateGoalResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "GoalResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateMembershipBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MembershipRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateMembershipResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "MembershipResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdatePortfolioBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdatePortfolioResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "PortfolioResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateProjectBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectUpdateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateProjectBriefBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBriefRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateProjectBriefResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectBriefResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateProjectResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateSectionBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SectionRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateSectionResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SectionResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateStoryBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A story represents an activity associated with an object in the Asana system.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateStoryResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "StoryResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateTagBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagUpdateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateTagResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TagResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateTaskBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateTaskResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TaskResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateTeamBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateTeamResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TeamResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateTimeTrackingEntryBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateTimeTrackingEntryRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateTimeTrackingEntryRequestInput": {
      "fields": {
        "attributable_to": {
          "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ProjectCompactInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "duration_minutes": {
          "description": "*Optional*. Time in minutes tracked by the entry",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "entered_on": {
          "description": "*Optional*. The day that this entry is logged on. Defaults to today if no day specified",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Date",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date"
          }
        }
      },
      "alias": "UpdateTimeTrackingEntryRequest"
    },
    "UpdateTimeTrackingEntryResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimeTrackingEntryBase",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateWebhookBodyObjectInput": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WebhookUpdateRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateWebhookResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WebhookResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateWorkspaceBodyObjectInput": {
      "fields": {
        "data": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceRequestInput",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UpdateWorkspaceResultObject": {
      "fields": {
        "data": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "UserBaseResponse": {
      "fields": {
        "email": {
          "description": "The user's email address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "photo": {
          "description": "A map of the users profile photo in various sizes, or null if no photo is set. Sizes provided are 21, 27, 36, 60, 128, and 1024. All images are in PNG format, except for 1024 (which is in JPEG format).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserBaseResponse1PhotoObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UserBaseResponse1PhotoObject": {
      "description": "A map of the users profile photo in various sizes, or null if no photo is set. Sizes provided are 21, 27, 36, 60, 128, and 1024. All images are in PNG format, except for 1024 (which is in JPEG format).",
      "fields": {
        "image_1024x1024": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "image_128x128": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "image_21x21": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "image_27x27": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "image_36x36": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "image_60x60": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "UserCompact": {
      "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UserCompactInput": {
      "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "fields": {
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "UserCompact"
    },
    "UserResponse": {
      "fields": {
        "email": {
          "description": "The user's email address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "*Read-only except when same user as requester*. The users name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "photo": {
          "description": "A map of the users profile photo in various sizes, or null if no photo is set. Sizes provided are 21, 27, 36, 60, 128, and 1024. All images are in PNG format, except for 1024 (which is in JPEG format).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserBaseResponse1PhotoObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspaces": {
          "description": "Workspaces and organizations this user may access. Note\\: The API will only return workspaces and organizations that also contain the authenticated user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WorkspaceCompact",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "UserTaskListResponse": {
      "description": "A user task list represents the tasks assigned to a particular user. It provides API access to a users [My Tasks](https://asana.com/guide/help/fundamentals/my-tasks) view in Asana.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the user task list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "owner": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "workspace": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "WebhookRequestFiltersAllOfInput": {
      "description": "A WebhookFilter can be passed on creation of a webhook in order to filter the types of actions that trigger delivery of an [event](/reference/events)",
      "fields": {
        "action": {
          "description": "The type of change on the **resource** to pass through the filter. For more information refer to `Event.action` in the [event](/reference/events) schema. This can be one of `changed`, `added`, `removed`, `deleted`, and `undeleted` depending on the nature of what has occurred on the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "fields": {
          "description": "*Conditional.* A whitelist of fields for events which will pass the filter when the resource is changed. These can be any combination of the fields on the resources themselves. This field is only valid for `action` of type `changed` *Note: Subscriptions created on higher-level resources such as a Workspace, Team, or Portfolio do not support fields.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "resource_subtype": {
          "description": "The resource subtype of the resource that the filter applies to. This should be set to the same value as is returned on the `resource_subtype` field on the resources themselves.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The type of the resource which created the event when modified; for example, to filter to changes on regular tasks this field should be set to `task`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "WebhookRequestInput": {
      "fields": {
        "filters": {
          "description": "An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WebhookRequestFiltersAllOfInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "resource": {
          "description": "A resource ID to subscribe to. Many Asana resources are valid to create webhooks on, but higher-level resources require filters.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "target": {
          "description": "The URL to receive the HTTP POST. The full URL will be used to deliver events from this webhook (including parameters) which allows encoding of application-specific state when the webhook is created.",
          "type": {
            "name": "URIString",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      },
      "alias": "WebhookRequest"
    },
    "WebhookResponse": {
      "fields": {
        "active": {
          "description": "If true, the webhook will send events - if false it is considered inactive and will not generate events.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "delivery_retry_count": {
          "description": "The number of times the webhook has retried delivery of events to the target (resets after a successful attempt).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "failure_deletion_timestamp": {
          "description": "The timestamp when the webhook will be deleted if there is no successful attempt to deliver events to the target",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "filters": {
          "description": "Whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WebhookResponse1FiltersAllOf",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "last_failure_at": {
          "description": "The timestamp when the webhook last received an error when sending an event to the target.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "last_failure_content": {
          "description": "The contents of the last error response sent to the webhook when attempting to deliver events to the target.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "last_success_at": {
          "description": "The timestamp when the webhook last successfully sent an event to the target.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "next_attempt_after": {
          "description": "The timestamp after which the webhook will next attempt to deliver an event to the target.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "resource": {
          "description": "A generic Asana Resource, containing a globally unique identifier.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AsanaNamedResource",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "target": {
          "description": "The URL to receive the HTTP POST.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "WebhookResponse1FiltersAllOf": {
      "description": "A WebhookFilter can be passed on creation of a webhook in order to filter the types of actions that trigger delivery of an [event](/reference/events)",
      "fields": {
        "action": {
          "description": "The type of change on the **resource** to pass through the filter. For more information refer to `Event.action` in the [event](/reference/events) schema. This can be one of `changed`, `added`, `removed`, `deleted`, and `undeleted` depending on the nature of what has occurred on the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "fields": {
          "description": "*Conditional.* A whitelist of fields for events which will pass the filter when the resource is changed. These can be any combination of the fields on the resources themselves. This field is only valid for `action` of type `changed` *Note: Subscriptions created on higher-level resources such as a Workspace, Team, or Portfolio do not support fields.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "resource_subtype": {
          "description": "The resource subtype of the resource that the filter applies to. This should be set to the same value as is returned on the `resource_subtype` field on the resources themselves.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The type of the resource which created the event when modified; for example, to filter to changes on regular tasks this field should be set to `task`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "WebhookUpdateRequestFiltersAllOfInput": {
      "description": "A WebhookFilter can be passed on creation of a webhook in order to filter the types of actions that trigger delivery of an [event](/reference/events)",
      "fields": {
        "action": {
          "description": "The type of change on the **resource** to pass through the filter. For more information refer to `Event.action` in the [event](/reference/events) schema. This can be one of `changed`, `added`, `removed`, `deleted`, and `undeleted` depending on the nature of what has occurred on the resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "fields": {
          "description": "*Conditional.* A whitelist of fields for events which will pass the filter when the resource is changed. These can be any combination of the fields on the resources themselves. This field is only valid for `action` of type `changed` *Note: Subscriptions created on higher-level resources such as a Workspace, Team, or Portfolio do not support fields.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "resource_subtype": {
          "description": "The resource subtype of the resource that the filter applies to. This should be set to the same value as is returned on the `resource_subtype` field on the resources themselves.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The type of the resource which created the event when modified; for example, to filter to changes on regular tasks this field should be set to `task`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "WebhookUpdateRequestInput": {
      "fields": {
        "filters": {
          "description": "An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "WebhookUpdateRequestFiltersAllOfInput",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "alias": "WebhookUpdateRequest"
    },
    "WorkspaceAddUserRequestInput": {
      "description": "A user identification object for specification with the addUser/removeUser endpoints.",
      "fields": {
        "user": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "WorkspaceAddUserRequest"
    },
    "WorkspaceCompact": {
      "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "WorkspaceMembershipCompact": {
      "description": "This object determines if a user is a member of a workspace.",
      "fields": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "workspace": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "WorkspaceMembershipResponse": {
      "fields": {
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_active": {
          "description": "Reflects if this user still a member of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_admin": {
          "description": "Reflects if this user is an admin of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_guest": {
          "description": "Reflects if this user is a guest of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_view_only": {
          "description": "Reflects if this user has view only license in the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "user": {
          "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "user_task_list": {
          "description": "A user task list represents the tasks assigned to a particular user. It provides API access to a users [My Tasks](https://asana.com/guide/help/fundamentals/my-tasks) view in Asana.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UserTaskListResponse",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "vacation_dates": {
          "description": "Contains keys `start_on` and `end_on` for the vacation dates for the user in this workspace. If `start_on` is null, the entire `vacation_dates` object will be null. If `end_on` is before today, the entire `vacation_dates` object will be null.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceMembershipResponse1VacationDatesObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "workspace": {
          "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "WorkspaceCompact",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "WorkspaceMembershipResponse1VacationDatesObject": {
      "description": "Contains keys `start_on` and `end_on` for the vacation dates for the user in this workspace. If `start_on` is null, the entire `vacation_dates` object will be null. If `end_on` is before today, the entire `vacation_dates` object will be null.",
      "fields": {
        "end_on": {
          "description": "The day on which the user's vacation in this workspace ends, or null if there is no end date. This is a date with `YYYY-MM-DD` format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_on": {
          "description": "The day on which the user's vacation in this workspace starts. This is a date with `YYYY-MM-DD` format.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "WorkspaceRemoveUserRequestInput": {
      "description": "A user identification object for specification with the addUser/removeUser endpoints.",
      "fields": {
        "user": {
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "WorkspaceRemoveUserRequest"
    },
    "WorkspaceRequestInput": {
      "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
      "fields": {
        "name": {
          "description": "The name of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "WorkspaceRequest"
    },
    "WorkspaceResponse": {
      "fields": {
        "email_domains": {
          "description": "The email domains that are associated with this workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "URIString",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "uri"
            }
          }
        },
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_organization": {
          "description": "Whether the workspace is an *organization*.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the workspace.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    }
  },
  "procedures": {
    "addCustomFieldSettingForPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}/addCustomFieldSetting",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /portfolios/{portfolio_gid}/addCustomFieldSetting",
          "type": {
            "name": "AddCustomFieldSettingForPortfolioBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add a custom field to a portfolio",
      "result_type": {
        "name": "AddCustomFieldSettingForPortfolioResultObject",
        "type": "named"
      }
    },
    "addCustomFieldSettingForProject": {
      "request": {
        "url": "/projects/{project_gid}/addCustomFieldSetting",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "projects:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/addCustomFieldSetting",
          "type": {
            "name": "AddCustomFieldSettingForProjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddCustomFieldSettingForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add a custom field to a project",
      "result_type": {
        "name": "AddCustomFieldSettingForProjectResultObject",
        "type": "named"
      }
    },
    "addDependenciesForTask": {
      "request": {
        "url": "/tasks/{task_gid}/addDependencies",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/addDependencies",
          "type": {
            "name": "AddDependenciesForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Set dependencies for a task",
      "result_type": {
        "name": "AddDependenciesForTaskResultObject",
        "type": "named"
      }
    },
    "addDependentsForTask": {
      "request": {
        "url": "/tasks/{task_gid}/addDependents",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/addDependents",
          "type": {
            "name": "AddDependentsForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Set dependents for a task",
      "result_type": {
        "name": "AddDependentsForTaskResultObject",
        "type": "named"
      }
    },
    "addFollowers": {
      "request": {
        "url": "/goals/{goal_gid}/addFollowers",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /goals/{goal_gid}/addFollowers",
          "type": {
            "name": "AddFollowersBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddFollowersOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Add a collaborator to a goal",
      "result_type": {
        "name": "AddFollowersResultObject",
        "type": "named"
      }
    },
    "addFollowersForProject": {
      "request": {
        "url": "/projects/{project_gid}/addFollowers",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/addFollowers",
          "type": {
            "name": "AddFollowersForProjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddFollowersForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add followers to a project",
      "result_type": {
        "name": "AddFollowersForProjectResultObject",
        "type": "named"
      }
    },
    "addFollowersForTask": {
      "request": {
        "url": "/tasks/{task_gid}/addFollowers",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/addFollowers",
          "type": {
            "name": "AddFollowersForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddFollowersForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add followers to a task",
      "result_type": {
        "name": "AddFollowersForTaskResultObject",
        "type": "named"
      }
    },
    "addItemForPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}/addItem",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /portfolios/{portfolio_gid}/addItem",
          "type": {
            "name": "AddItemForPortfolioBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add a portfolio item",
      "result_type": {
        "name": "AddItemForPortfolioResultObject",
        "type": "named"
      }
    },
    "addMembersForPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}/addMembers",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /portfolios/{portfolio_gid}/addMembers",
          "type": {
            "name": "AddMembersForPortfolioBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddMembersForPortfolioOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add users to a portfolio",
      "result_type": {
        "name": "AddMembersForPortfolioResultObject",
        "type": "named"
      }
    },
    "addMembersForProject": {
      "request": {
        "url": "/projects/{project_gid}/addMembers",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/addMembers",
          "type": {
            "name": "AddMembersForProjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddMembersForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add users to a project",
      "result_type": {
        "name": "AddMembersForProjectResultObject",
        "type": "named"
      }
    },
    "addProjectForTask": {
      "request": {
        "url": "/tasks/{task_gid}/addProject",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/addProject",
          "type": {
            "name": "AddProjectForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add a project to a task",
      "result_type": {
        "name": "AddProjectForTaskResultObject",
        "type": "named"
      }
    },
    "addSupportingRelationship": {
      "request": {
        "url": "/goals/{goal_gid}/addSupportingRelationship",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /goals/{goal_gid}/addSupportingRelationship",
          "type": {
            "name": "AddSupportingRelationshipBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddSupportingRelationshipOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Add a supporting goal relationship",
      "result_type": {
        "name": "AddSupportingRelationshipResultObject",
        "type": "named"
      }
    },
    "addTagForTask": {
      "request": {
        "url": "/tasks/{task_gid}/addTag",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/addTag",
          "type": {
            "name": "AddTagForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add a tag to a task",
      "result_type": {
        "name": "AddTagForTaskResultObject",
        "type": "named"
      }
    },
    "addTaskForSection": {
      "request": {
        "url": "/sections/{section_gid}/addTask",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /sections/{section_gid}/addTask",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddTaskForSectionBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "section_gid": {
          "description": "The globally unique identifier for the section.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "section_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add task to section",
      "result_type": {
        "name": "AddTaskForSectionResultObject",
        "type": "named"
      }
    },
    "addUserForTeam": {
      "request": {
        "url": "/teams/{team_gid}/addUser",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /teams/{team_gid}/addUser",
          "type": {
            "name": "AddUserForTeamBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddUserForTeamOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_gid": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add a user to a team",
      "result_type": {
        "name": "AddUserForTeamResultObject",
        "type": "named"
      }
    },
    "addUserForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/addUser",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /workspaces/{workspace_gid}/addUser",
          "type": {
            "name": "AddUserForWorkspaceBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "AddUserForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add a user to a workspace or organization",
      "result_type": {
        "name": "AddUserForWorkspaceResultObject",
        "type": "named"
      }
    },
    "createAllocation": {
      "request": {
        "url": "/allocations",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /allocations",
          "type": {
            "name": "CreateAllocationBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateAllocationOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create an allocation",
      "result_type": {
        "name": "CreateAllocationResultObject",
        "type": "named"
      }
    },
    "createAttachmentForObject": {
      "request": {
        "url": "/attachments",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "attachments:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "multipart/form-data"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /attachments",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AttachmentRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateAttachmentForObjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Upload an attachment",
      "result_type": {
        "name": "CreateAttachmentForObjectResultObject",
        "type": "named"
      }
    },
    "createBatchRequest": {
      "request": {
        "url": "/batch",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /batch",
          "type": {
            "name": "CreateBatchRequestBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateBatchRequestOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Submit parallel requests",
      "result_type": {
        "name": "CreateBatchRequestResultObject",
        "type": "named"
      }
    },
    "createCustomField": {
      "request": {
        "url": "/custom_fields",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /custom_fields",
          "type": {
            "name": "CreateCustomFieldBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateCustomFieldOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a custom field",
      "result_type": {
        "name": "CreateCustomFieldResultObject",
        "type": "named"
      }
    },
    "createEnumOptionForCustomField": {
      "request": {
        "url": "/custom_fields/{custom_field_gid}/enum_options",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /custom_fields/{custom_field_gid}/enum_options",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateEnumOptionForCustomFieldBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "custom_field_gid": {
          "description": "Globally unique identifier for the custom field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "custom_field_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateEnumOptionForCustomFieldOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create an enum option",
      "result_type": {
        "name": "CreateEnumOptionForCustomFieldResultObject",
        "type": "named"
      }
    },
    "createGoal": {
      "request": {
        "url": "/goals",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /goals",
          "type": {
            "name": "CreateGoalBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateGoalOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a goal",
      "result_type": {
        "name": "CreateGoalResultObject",
        "type": "named"
      }
    },
    "createGoalMetric": {
      "request": {
        "url": "/goals/{goal_gid}/setMetric",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /goals/{goal_gid}/setMetric",
          "type": {
            "name": "CreateGoalMetricBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateGoalMetricOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a goal metric",
      "result_type": {
        "name": "CreateGoalMetricResultObject",
        "type": "named"
      }
    },
    "createMembership": {
      "request": {
        "url": "/memberships",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /memberships",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateMembershipBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a membership",
      "result_type": {
        "name": "CreateMembershipResultObject",
        "type": "named"
      }
    },
    "createOrganizationExport": {
      "request": {
        "url": "/organization_exports",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /organization_exports",
          "type": {
            "name": "CreateOrganizationExportBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateOrganizationExportOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create an organization export request",
      "result_type": {
        "name": "CreateOrganizationExportResultObject",
        "type": "named"
      }
    },
    "createPortfolio": {
      "request": {
        "url": "/portfolios",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /portfolios",
          "type": {
            "name": "CreatePortfolioBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreatePortfolioOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a portfolio",
      "result_type": {
        "name": "CreatePortfolioResultObject",
        "type": "named"
      }
    },
    "createProject": {
      "request": {
        "url": "/projects",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "projects:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects",
          "type": {
            "name": "CreateProjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a project",
      "result_type": {
        "name": "CreateProjectResultObject",
        "type": "named"
      }
    },
    "createProjectBrief": {
      "request": {
        "url": "/projects/{project_gid}/project_briefs",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/project_briefs",
          "type": {
            "name": "CreateProjectBriefBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateProjectBriefOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a project brief",
      "result_type": {
        "name": "CreateProjectBriefResultObject",
        "type": "named"
      }
    },
    "createProjectForTeam": {
      "request": {
        "url": "/teams/{team_gid}/projects",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "projects:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /teams/{team_gid}/projects",
          "type": {
            "name": "CreateProjectForTeamBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateProjectForTeamOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_gid": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a project in a team",
      "result_type": {
        "name": "CreateProjectForTeamResultObject",
        "type": "named"
      }
    },
    "createProjectForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/projects",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "projects:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /workspaces/{workspace_gid}/projects",
          "type": {
            "name": "CreateProjectForWorkspaceBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateProjectForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a project in a workspace",
      "result_type": {
        "name": "CreateProjectForWorkspaceResultObject",
        "type": "named"
      }
    },
    "createProjectStatusForProject": {
      "request": {
        "url": "/projects/{project_gid}/project_statuses",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/project_statuses",
          "type": {
            "name": "CreateProjectStatusForProjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateProjectStatusForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a project status",
      "result_type": {
        "name": "CreateProjectStatusForProjectResultObject",
        "type": "named"
      }
    },
    "createSectionForProject": {
      "request": {
        "url": "/projects/{project_gid}/sections",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/sections",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSectionForProjectBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateSectionForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a section in a project",
      "result_type": {
        "name": "CreateSectionForProjectResultObject",
        "type": "named"
      }
    },
    "createStatusForObject": {
      "request": {
        "url": "/status_updates",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /status_updates",
          "type": {
            "name": "CreateStatusForObjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "limit": {
          "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateStatusForObjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a status update",
      "result_type": {
        "name": "CreateStatusForObjectResultObject",
        "type": "named"
      }
    },
    "createStoryForTask": {
      "request": {
        "url": "/tasks/{task_gid}/stories",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/stories",
          "type": {
            "name": "CreateStoryForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateStoryForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a story on a task",
      "result_type": {
        "name": "CreateStoryForTaskResultObject",
        "type": "named"
      }
    },
    "createSubtaskForTask": {
      "request": {
        "url": "/tasks/{task_gid}/subtasks",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/subtasks",
          "type": {
            "name": "CreateSubtaskForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateSubtaskForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a subtask",
      "result_type": {
        "name": "CreateSubtaskForTaskResultObject",
        "type": "named"
      }
    },
    "createTag": {
      "request": {
        "url": "/tags",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tags",
          "type": {
            "name": "CreateTagBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateTagOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a tag",
      "result_type": {
        "name": "CreateTagResultObject",
        "type": "named"
      }
    },
    "createTagForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/tags",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /workspaces/{workspace_gid}/tags",
          "type": {
            "name": "CreateTagForWorkspaceBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateTagForWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a tag in a workspace",
      "result_type": {
        "name": "CreateTagForWorkspaceResultObject",
        "type": "named"
      }
    },
    "createTask": {
      "request": {
        "url": "/tasks",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks",
          "type": {
            "name": "CreateTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a task",
      "result_type": {
        "name": "CreateTaskResultObject",
        "type": "named"
      }
    },
    "createTeam": {
      "request": {
        "url": "/teams",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /teams",
          "type": {
            "name": "CreateTeamBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateTeamOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Create a team",
      "result_type": {
        "name": "CreateTeamResultObject",
        "type": "named"
      }
    },
    "createTimeTrackingEntry": {
      "request": {
        "url": "/tasks/{task_gid}/time_tracking_entries",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/time_tracking_entries",
          "type": {
            "name": "CreateTimeTrackingEntryBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateTimeTrackingEntryOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a time tracking entry",
      "result_type": {
        "name": "CreateTimeTrackingEntryResultObject",
        "type": "named"
      }
    },
    "createWebhook": {
      "request": {
        "url": "/webhooks",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /webhooks",
          "type": {
            "name": "CreateWebhookBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "CreateWebhookOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Establish a webhook",
      "result_type": {
        "name": "CreateWebhookResultObject",
        "type": "named"
      }
    },
    "deleteAllocation": {
      "request": {
        "url": "/allocations/{allocation_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "allocation_gid": {
          "description": "Globally unique identifier for the allocation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "allocation_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Delete an allocation",
      "result_type": {
        "name": "DeleteAllocationResultObject",
        "type": "named"
      }
    },
    "deleteAttachment": {
      "request": {
        "url": "/attachments/{attachment_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "attachment_gid": {
          "description": "Globally unique identifier for the attachment.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "attachment_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Delete an attachment",
      "result_type": {
        "name": "DeleteAttachmentResultObject",
        "type": "named"
      }
    },
    "deleteCustomField": {
      "request": {
        "url": "/custom_fields/{custom_field_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "custom_field_gid": {
          "description": "Globally unique identifier for the custom field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "custom_field_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Delete a custom field",
      "result_type": {
        "name": "DeleteCustomFieldResultObject",
        "type": "named"
      }
    },
    "deleteGoal": {
      "request": {
        "url": "/goals/{goal_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Delete a goal",
      "result_type": {
        "name": "DeleteGoalResultObject",
        "type": "named"
      }
    },
    "deleteMembership": {
      "request": {
        "url": "/memberships/{membership_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "membership_gid": {
          "description": "Globally unique identifier for the membership.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "membership_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Delete a membership",
      "result_type": {
        "name": "DeleteMembershipResultObject",
        "type": "named"
      }
    },
    "deletePortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a portfolio",
      "result_type": {
        "name": "DeletePortfolioResultObject",
        "type": "named"
      }
    },
    "deleteProject": {
      "request": {
        "url": "/projects/{project_gid}",
        "method": "delete",
        "security": [
          {
            "personalAccessToken": [
              "projects:delete"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a project",
      "result_type": {
        "name": "DeleteProjectResultObject",
        "type": "named"
      }
    },
    "deleteProjectBrief": {
      "request": {
        "url": "/project_briefs/{project_brief_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_brief_gid": {
          "description": "Globally unique identifier for the project brief.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_brief_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a project brief",
      "result_type": {
        "name": "DeleteProjectBriefResultObject",
        "type": "named"
      }
    },
    "deleteProjectStatus": {
      "request": {
        "url": "/project_statuses/{project_status_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_status_gid": {
          "description": "The project status update to get.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_status_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a project status",
      "result_type": {
        "name": "DeleteProjectStatusResultObject",
        "type": "named"
      }
    },
    "deleteProjectTemplate": {
      "request": {
        "url": "/project_templates/{project_template_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_template_gid": {
          "description": "Globally unique identifier for the project template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_template_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a project template",
      "result_type": {
        "name": "DeleteProjectTemplateResultObject",
        "type": "named"
      }
    },
    "deleteSection": {
      "request": {
        "url": "/sections/{section_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "section_gid": {
          "description": "The globally unique identifier for the section.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "section_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a section",
      "result_type": {
        "name": "DeleteSectionResultObject",
        "type": "named"
      }
    },
    "deleteStatus": {
      "request": {
        "url": "/status_updates/{status_update_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "status_update_gid": {
          "description": "The status update to get.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "status_update_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a status update",
      "result_type": {
        "name": "DeleteStatusResultObject",
        "type": "named"
      }
    },
    "deleteStory": {
      "request": {
        "url": "/stories/{story_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "story_gid": {
          "description": "Globally unique identifier for the story.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "story_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a story",
      "result_type": {
        "name": "DeleteStoryResultObject",
        "type": "named"
      }
    },
    "deleteTag": {
      "request": {
        "url": "/tags/{tag_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "tag_gid": {
          "description": "Globally unique identifier for the tag.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "tag_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a tag",
      "result_type": {
        "name": "DeleteTagResultObject",
        "type": "named"
      }
    },
    "deleteTask": {
      "request": {
        "url": "/tasks/{task_gid}",
        "method": "delete",
        "security": [
          {
            "personalAccessToken": [
              "tasks:delete"
            ]
          }
        ],
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a task",
      "result_type": {
        "name": "DeleteTaskResultObject",
        "type": "named"
      }
    },
    "deleteTaskTemplate": {
      "request": {
        "url": "/task_templates/{task_template_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_template_gid": {
          "description": "Globally unique identifier for the task template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_template_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a task template",
      "result_type": {
        "name": "DeleteTaskTemplateResultObject",
        "type": "named"
      }
    },
    "deleteTimeTrackingEntry": {
      "request": {
        "url": "/time_tracking_entries/{time_tracking_entry_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "time_tracking_entry_gid": {
          "description": "Globally unique identifier for the time tracking entry.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "time_tracking_entry_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a time tracking entry",
      "result_type": {
        "name": "DeleteTimeTrackingEntryResultObject",
        "type": "named"
      }
    },
    "deleteWebhook": {
      "request": {
        "url": "/webhooks/{webhook_gid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "webhook_gid": {
          "description": "Globally unique identifier for the webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "webhook_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a webhook",
      "result_type": {
        "name": "DeleteWebhookResultObject",
        "type": "named"
      }
    },
    "duplicateProject": {
      "request": {
        "url": "/projects/{project_gid}/duplicate",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "projects:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/duplicate",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DuplicateProjectBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "DuplicateProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Duplicate a project",
      "result_type": {
        "name": "DuplicateProjectResultObject",
        "type": "named"
      }
    },
    "duplicateTask": {
      "request": {
        "url": "/tasks/{task_gid}/duplicate",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/duplicate",
          "type": {
            "name": "DuplicateTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "DuplicateTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Duplicate a task",
      "result_type": {
        "name": "DuplicateTaskResultObject",
        "type": "named"
      }
    },
    "insertEnumOptionForCustomField": {
      "request": {
        "url": "/custom_fields/{custom_field_gid}/enum_options/insert",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /custom_fields/{custom_field_gid}/enum_options/insert",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "InsertEnumOptionForCustomFieldBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "custom_field_gid": {
          "description": "Globally unique identifier for the custom field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "custom_field_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "InsertEnumOptionForCustomFieldOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Reorder a custom field's enum",
      "result_type": {
        "name": "InsertEnumOptionForCustomFieldResultObject",
        "type": "named"
      }
    },
    "insertSectionForProject": {
      "request": {
        "url": "/projects/{project_gid}/sections/insert",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/sections/insert",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "InsertSectionForProjectBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Move or Insert sections",
      "result_type": {
        "name": "InsertSectionForProjectResultObject",
        "type": "named"
      }
    },
    "instantiateProject": {
      "request": {
        "url": "/project_templates/{project_template_gid}/instantiateProject",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "projects:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /project_templates/{project_template_gid}/instantiateProject",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "InstantiateProjectBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "InstantiateProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_template_gid": {
          "description": "Globally unique identifier for the project template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_template_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Instantiate a project from a project template",
      "result_type": {
        "name": "InstantiateProjectResultObject",
        "type": "named"
      }
    },
    "instantiateTask": {
      "request": {
        "url": "/task_templates/{task_template_gid}/instantiateTask",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /task_templates/{task_template_gid}/instantiateTask",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "InstantiateTaskBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "InstantiateTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_template_gid": {
          "description": "Globally unique identifier for the task template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_template_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Instantiate a task from a task template",
      "result_type": {
        "name": "InstantiateTaskResultObject",
        "type": "named"
      }
    },
    "projectSaveAsTemplate": {
      "request": {
        "url": "/projects/{project_gid}/saveAsTemplate",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/saveAsTemplate",
          "type": {
            "name": "ProjectSaveAsTemplateBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ProjectSaveAsTemplateOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a project template from a project",
      "result_type": {
        "name": "ProjectSaveAsTemplateResultObject",
        "type": "named"
      }
    },
    "removeCustomFieldSettingForPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}/removeCustomFieldSetting",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /portfolios/{portfolio_gid}/removeCustomFieldSetting",
          "type": {
            "name": "RemoveCustomFieldSettingForPortfolioBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a custom field from a portfolio",
      "result_type": {
        "name": "RemoveCustomFieldSettingForPortfolioResultObject",
        "type": "named"
      }
    },
    "removeCustomFieldSettingForProject": {
      "request": {
        "url": "/projects/{project_gid}/removeCustomFieldSetting",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "projects:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/removeCustomFieldSetting",
          "type": {
            "name": "RemoveCustomFieldSettingForProjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a custom field from a project",
      "result_type": {
        "name": "RemoveCustomFieldSettingForProjectResultObject",
        "type": "named"
      }
    },
    "removeDependenciesForTask": {
      "request": {
        "url": "/tasks/{task_gid}/removeDependencies",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/removeDependencies",
          "type": {
            "name": "RemoveDependenciesForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Unlink dependencies from a task",
      "result_type": {
        "name": "RemoveDependenciesForTaskResultObject",
        "type": "named"
      }
    },
    "removeDependentsForTask": {
      "request": {
        "url": "/tasks/{task_gid}/removeDependents",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/removeDependents",
          "type": {
            "name": "RemoveDependentsForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Unlink dependents from a task",
      "result_type": {
        "name": "RemoveDependentsForTaskResultObject",
        "type": "named"
      }
    },
    "removeFollowerForTask": {
      "request": {
        "url": "/tasks/{task_gid}/removeFollowers",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/removeFollowers",
          "type": {
            "name": "RemoveFollowerForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "RemoveFollowerForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove followers from a task",
      "result_type": {
        "name": "RemoveFollowerForTaskResultObject",
        "type": "named"
      }
    },
    "removeFollowers": {
      "request": {
        "url": "/goals/{goal_gid}/removeFollowers",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /goals/{goal_gid}/removeFollowers",
          "type": {
            "name": "RemoveFollowersBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "RemoveFollowersOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Remove a collaborator from a goal",
      "result_type": {
        "name": "RemoveFollowersResultObject",
        "type": "named"
      }
    },
    "removeFollowersForProject": {
      "request": {
        "url": "/projects/{project_gid}/removeFollowers",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/removeFollowers",
          "type": {
            "name": "RemoveFollowersForProjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "RemoveFollowersForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove followers from a project",
      "result_type": {
        "name": "RemoveFollowersForProjectResultObject",
        "type": "named"
      }
    },
    "removeItemForPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}/removeItem",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /portfolios/{portfolio_gid}/removeItem",
          "type": {
            "name": "RemoveItemForPortfolioBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a portfolio item",
      "result_type": {
        "name": "RemoveItemForPortfolioResultObject",
        "type": "named"
      }
    },
    "removeMembersForPortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}/removeMembers",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /portfolios/{portfolio_gid}/removeMembers",
          "type": {
            "name": "RemoveMembersForPortfolioBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "RemoveMembersForPortfolioOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove users from a portfolio",
      "result_type": {
        "name": "RemoveMembersForPortfolioResultObject",
        "type": "named"
      }
    },
    "removeMembersForProject": {
      "request": {
        "url": "/projects/{project_gid}/removeMembers",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /projects/{project_gid}/removeMembers",
          "type": {
            "name": "RemoveMembersForProjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "RemoveMembersForProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove users from a project",
      "result_type": {
        "name": "RemoveMembersForProjectResultObject",
        "type": "named"
      }
    },
    "removeProjectForTask": {
      "request": {
        "url": "/tasks/{task_gid}/removeProject",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/removeProject",
          "type": {
            "name": "RemoveProjectForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a project from a task",
      "result_type": {
        "name": "RemoveProjectForTaskResultObject",
        "type": "named"
      }
    },
    "removeSupportingRelationship": {
      "request": {
        "url": "/goals/{goal_gid}/removeSupportingRelationship",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /goals/{goal_gid}/removeSupportingRelationship",
          "type": {
            "name": "RemoveSupportingRelationshipBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Removes a supporting goal relationship",
      "result_type": {
        "name": "RemoveSupportingRelationshipResultObject",
        "type": "named"
      }
    },
    "removeTagForTask": {
      "request": {
        "url": "/tasks/{task_gid}/removeTag",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/removeTag",
          "type": {
            "name": "RemoveTagForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a tag from a task",
      "result_type": {
        "name": "RemoveTagForTaskResultObject",
        "type": "named"
      }
    },
    "removeUserForTeam": {
      "request": {
        "url": "/teams/{team_gid}/removeUser",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /teams/{team_gid}/removeUser",
          "type": {
            "name": "RemoveUserForTeamBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_gid": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a user from a team",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "RemoveUserForTeamResultObject",
          "type": "named"
        }
      }
    },
    "removeUserForWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}/removeUser",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /workspaces/{workspace_gid}/removeUser",
          "type": {
            "name": "RemoveUserForWorkspaceBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Remove a user from a workspace or organization",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "RemoveUserForWorkspaceResultObject",
          "type": "named"
        }
      }
    },
    "setParentForTask": {
      "request": {
        "url": "/tasks/{task_gid}/setParent",
        "method": "post",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /tasks/{task_gid}/setParent",
          "type": {
            "name": "SetParentForTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "SetParentForTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Set the parent of a task",
      "result_type": {
        "name": "SetParentForTaskResultObject",
        "type": "named"
      }
    },
    "triggerRule": {
      "request": {
        "url": "/rule_triggers/{rule_trigger_gid}/run",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /rule_triggers/{rule_trigger_gid}/run",
          "type": {
            "name": "TriggerRuleBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "rule_trigger_gid": {
          "description": "The ID of the incoming web request trigger. This value is a path parameter that is automatically generated for the API endpoint.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "rule_trigger_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Trigger a rule",
      "result_type": {
        "name": "TriggerRuleResultObject",
        "type": "named"
      }
    },
    "updateAllocation": {
      "request": {
        "url": "/allocations/{allocation_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "allocation_gid": {
          "description": "Globally unique identifier for the allocation.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "allocation_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "body": {
          "description": "Request body of PUT /allocations/{allocation_gid}",
          "type": {
            "name": "UpdateAllocationBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateAllocationOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Update an allocation",
      "result_type": {
        "name": "UpdateAllocationResultObject",
        "type": "named"
      }
    },
    "updateCustomField": {
      "request": {
        "url": "/custom_fields/{custom_field_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /custom_fields/{custom_field_gid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateCustomFieldBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "custom_field_gid": {
          "description": "Globally unique identifier for the custom field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "custom_field_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateCustomFieldOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Update a custom field",
      "result_type": {
        "name": "UpdateCustomFieldResultObject",
        "type": "named"
      }
    },
    "updateEnumOption": {
      "request": {
        "url": "/enum_options/{enum_option_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /enum_options/{enum_option_gid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateEnumOptionBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "enum_option_gid": {
          "description": "Globally unique identifier for the enum option.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "enum_option_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateEnumOptionOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Update an enum option",
      "result_type": {
        "name": "UpdateEnumOptionResultObject",
        "type": "named"
      }
    },
    "updateGoal": {
      "request": {
        "url": "/goals/{goal_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /goals/{goal_gid}",
          "type": {
            "name": "UpdateGoalBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateGoalOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Update a goal",
      "result_type": {
        "name": "UpdateGoalResultObject",
        "type": "named"
      }
    },
    "updateGoalMetric": {
      "request": {
        "url": "/goals/{goal_gid}/setMetricCurrentValue",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /goals/{goal_gid}/setMetricCurrentValue",
          "type": {
            "name": "UpdateGoalMetricBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "goal_gid": {
          "description": "Globally unique identifier for the goal.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateGoalMetricOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Update a goal metric",
      "result_type": {
        "name": "UpdateGoalMetricResultObject",
        "type": "named"
      }
    },
    "updateGoalRelationship": {
      "request": {
        "url": "/goal_relationships/{goal_relationship_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /goal_relationships/{goal_relationship_gid}",
          "type": {
            "name": "UpdateGoalRelationshipBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "goal_relationship_gid": {
          "description": "Globally unique identifier for the goal relationship.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "goal_relationship_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateGoalRelationshipOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Update a goal relationship",
      "result_type": {
        "name": "UpdateGoalRelationshipResultObject",
        "type": "named"
      }
    },
    "updateMembership": {
      "request": {
        "url": "/memberships/{membership_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /memberships/{membership_gid}",
          "type": {
            "name": "UpdateMembershipBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "membership_gid": {
          "description": "Globally unique identifier for the membership.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "membership_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "description": "Update a membership",
      "result_type": {
        "name": "UpdateMembershipResultObject",
        "type": "named"
      }
    },
    "updatePortfolio": {
      "request": {
        "url": "/portfolios/{portfolio_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /portfolios/{portfolio_gid}",
          "type": {
            "name": "UpdatePortfolioBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdatePortfolioOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "portfolio_gid": {
          "description": "Globally unique identifier for the portfolio.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "portfolio_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a portfolio",
      "result_type": {
        "name": "UpdatePortfolioResultObject",
        "type": "named"
      }
    },
    "updateProject": {
      "request": {
        "url": "/projects/{project_gid}",
        "method": "put",
        "security": [
          {
            "personalAccessToken": [
              "projects:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /projects/{project_gid}",
          "type": {
            "name": "UpdateProjectBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateProjectOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_gid": {
          "description": "Globally unique identifier for the project.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a project",
      "result_type": {
        "name": "UpdateProjectResultObject",
        "type": "named"
      }
    },
    "updateProjectBrief": {
      "request": {
        "url": "/project_briefs/{project_brief_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /project_briefs/{project_brief_gid}",
          "type": {
            "name": "UpdateProjectBriefBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateProjectBriefOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "project_brief_gid": {
          "description": "Globally unique identifier for the project brief.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "project_brief_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a project brief",
      "result_type": {
        "name": "UpdateProjectBriefResultObject",
        "type": "named"
      }
    },
    "updateSection": {
      "request": {
        "url": "/sections/{section_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /sections/{section_gid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateSectionBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateSectionOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "section_gid": {
          "description": "The globally unique identifier for the section.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "section_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a section",
      "result_type": {
        "name": "UpdateSectionResultObject",
        "type": "named"
      }
    },
    "updateStory": {
      "request": {
        "url": "/stories/{story_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /stories/{story_gid}",
          "type": {
            "name": "UpdateStoryBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateStoryOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "story_gid": {
          "description": "Globally unique identifier for the story.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "story_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a story",
      "result_type": {
        "name": "UpdateStoryResultObject",
        "type": "named"
      }
    },
    "updateTag": {
      "request": {
        "url": "/tags/{tag_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /tags/{tag_gid}",
          "type": {
            "name": "UpdateTagBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateTagOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "tag_gid": {
          "description": "Globally unique identifier for the tag.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "tag_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a tag",
      "result_type": {
        "name": "UpdateTagResultObject",
        "type": "named"
      }
    },
    "updateTask": {
      "request": {
        "url": "/tasks/{task_gid}",
        "method": "put",
        "security": [
          {
            "personalAccessToken": [
              "tasks:write"
            ]
          }
        ],
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /tasks/{task_gid}",
          "type": {
            "name": "UpdateTaskBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateTaskOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "task_gid": {
          "description": "The task to operate on.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "task_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a task",
      "result_type": {
        "name": "UpdateTaskResultObject",
        "type": "named"
      }
    },
    "updateTeam": {
      "request": {
        "url": "/teams/{team_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /teams/{team_gid}",
          "type": {
            "name": "UpdateTeamBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateTeamOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "team_gid": {
          "description": "Globally unique identifier for the team.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "team_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a team",
      "result_type": {
        "name": "UpdateTeamResultObject",
        "type": "named"
      }
    },
    "updateTimeTrackingEntry": {
      "request": {
        "url": "/time_tracking_entries/{time_tracking_entry_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /time_tracking_entries/{time_tracking_entry_gid}",
          "type": {
            "name": "UpdateTimeTrackingEntryBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateTimeTrackingEntryOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "time_tracking_entry_gid": {
          "description": "Globally unique identifier for the time tracking entry.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "time_tracking_entry_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a time tracking entry",
      "result_type": {
        "name": "UpdateTimeTrackingEntryResultObject",
        "type": "named"
      }
    },
    "updateWebhook": {
      "request": {
        "url": "/webhooks/{webhook_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /webhooks/{webhook_gid}",
          "type": {
            "name": "UpdateWebhookBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateWebhookOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "webhook_gid": {
          "description": "Globally unique identifier for the webhook.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "webhook_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a webhook",
      "result_type": {
        "name": "UpdateWebhookResultObject",
        "type": "named"
      }
    },
    "updateWorkspace": {
      "request": {
        "url": "/workspaces/{workspace_gid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /workspaces/{workspace_gid}",
          "type": {
            "name": "UpdateWorkspaceBodyObjectInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "opt_fields": {
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UpdateWorkspaceOptFieldsEnum",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "opt_fields",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "opt_pretty": {
          "description": "Provides pretty output. Provides the response in a pretty format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "style": "form",
            "name": "opt_pretty",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "workspace_gid": {
          "description": "Globally unique identifier for the workspace or organization.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "workspace_gid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a workspace",
      "result_type": {
        "name": "UpdateWorkspaceResultObject",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "AddCustomFieldSettingForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "custom_field",
          "custom_field.asana_created_field",
          "custom_field.created_by",
          "custom_field.created_by.name",
          "custom_field.currency_code",
          "custom_field.custom_label",
          "custom_field.custom_label_position",
          "custom_field.date_value",
          "custom_field.date_value.date",
          "custom_field.date_value.date_time",
          "custom_field.default_access_level",
          "custom_field.description",
          "custom_field.display_value",
          "custom_field.enabled",
          "custom_field.enum_options",
          "custom_field.enum_options.color",
          "custom_field.enum_options.enabled",
          "custom_field.enum_options.name",
          "custom_field.enum_value",
          "custom_field.enum_value.color",
          "custom_field.enum_value.enabled",
          "custom_field.enum_value.name",
          "custom_field.format",
          "custom_field.has_notifications_enabled",
          "custom_field.id_prefix",
          "custom_field.is_formula_field",
          "custom_field.is_global_to_workspace",
          "custom_field.is_value_read_only",
          "custom_field.multi_enum_values",
          "custom_field.multi_enum_values.color",
          "custom_field.multi_enum_values.enabled",
          "custom_field.multi_enum_values.name",
          "custom_field.name",
          "custom_field.number_value",
          "custom_field.people_value",
          "custom_field.people_value.name",
          "custom_field.precision",
          "custom_field.privacy_setting",
          "custom_field.representation_type",
          "custom_field.resource_subtype",
          "custom_field.text_value",
          "custom_field.type",
          "is_important",
          "parent",
          "parent.name",
          "project",
          "project.name"
        ],
        "type": "enum"
      }
    },
    "AddFollowersForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "owner",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "AddFollowersForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "AddFollowersOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "is_workspace_level",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "metric",
          "metric.can_manage",
          "metric.currency_code",
          "metric.current_display_value",
          "metric.current_number_value",
          "metric.initial_number_value",
          "metric.is_custom_weight",
          "metric.precision",
          "metric.progress_source",
          "metric.resource_subtype",
          "metric.target_number_value",
          "metric.unit",
          "name",
          "notes",
          "num_likes",
          "owner",
          "owner.name",
          "start_on",
          "status",
          "team",
          "team.name",
          "time_period",
          "time_period.display_name",
          "time_period.end_on",
          "time_period.period",
          "time_period.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "AddMembersForPortfolioOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "created_at",
          "created_by",
          "created_by.name",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "due_on",
          "members",
          "members.name",
          "name",
          "owner",
          "owner.name",
          "permalink_url",
          "privacy_setting",
          "project_templates",
          "project_templates.name",
          "public",
          "start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "AddMembersForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "owner",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "AddSupportingRelationshipOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "contribution_weight",
          "resource_subtype",
          "supported_goal",
          "supported_goal.name",
          "supported_goal.owner",
          "supported_goal.owner.name",
          "supporting_resource",
          "supporting_resource.name"
        ],
        "type": "enum"
      }
    },
    "AddUserForTeamOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "is_admin",
          "is_guest",
          "is_limited_access",
          "team",
          "team.name",
          "user",
          "user.name"
        ],
        "type": "enum"
      }
    },
    "AddUserForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "email",
          "name",
          "photo",
          "photo.image_1024x1024",
          "photo.image_128x128",
          "photo.image_21x21",
          "photo.image_27x27",
          "photo.image_36x36",
          "photo.image_60x60"
        ],
        "type": "enum"
      }
    },
    "AllocationBaseEffortTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "hours",
          "percent"
        ],
        "type": "enum"
      }
    },
    "AttachmentRequestResourceSubtypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "asana",
          "dropbox",
          "gdrive",
          "onedrive",
          "box",
          "vimeo",
          "external"
        ],
        "type": "enum"
      }
    },
    "AuditLogEventActorActorTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "user",
          "asana",
          "asana_support",
          "anonymous",
          "external_administrator"
        ],
        "type": "enum"
      }
    },
    "AuditLogEventContextApiAuthenticationMethodEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "cookie",
          "oauth",
          "personal_access_token",
          "service_account"
        ],
        "type": "enum"
      }
    },
    "AuditLogEventContextContextTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "web",
          "desktop",
          "mobile",
          "asana_support",
          "asana",
          "email",
          "api"
        ],
        "type": "enum"
      }
    },
    "BatchRequestActionMethodEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "get",
          "post",
          "put",
          "delete",
          "patch",
          "head"
        ],
        "type": "enum"
      }
    },
    "Binary": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "bytes"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "CreateAllocationOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "assignee",
          "assignee.name",
          "created_by",
          "created_by.name",
          "effort",
          "effort.type",
          "effort.value",
          "end_date",
          "parent",
          "parent.name",
          "resource_subtype",
          "start_date"
        ],
        "type": "enum"
      }
    },
    "CreateAttachmentForObjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "connected_to_app",
          "created_at",
          "download_url",
          "host",
          "name",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permanent_url",
          "resource_subtype",
          "size",
          "view_url"
        ],
        "type": "enum"
      }
    },
    "CreateBatchRequestOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "body",
          "headers",
          "status_code"
        ],
        "type": "enum"
      }
    },
    "CreateCustomFieldOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "asana_created_field",
          "created_by",
          "created_by.name",
          "currency_code",
          "custom_label",
          "custom_label_position",
          "date_value",
          "date_value.date",
          "date_value.date_time",
          "default_access_level",
          "description",
          "display_value",
          "enabled",
          "enum_options",
          "enum_options.color",
          "enum_options.enabled",
          "enum_options.name",
          "enum_value",
          "enum_value.color",
          "enum_value.enabled",
          "enum_value.name",
          "format",
          "has_notifications_enabled",
          "id_prefix",
          "is_formula_field",
          "is_global_to_workspace",
          "is_value_read_only",
          "multi_enum_values",
          "multi_enum_values.color",
          "multi_enum_values.enabled",
          "multi_enum_values.name",
          "name",
          "number_value",
          "people_value",
          "people_value.name",
          "precision",
          "privacy_setting",
          "representation_type",
          "resource_subtype",
          "text_value",
          "type"
        ],
        "type": "enum"
      }
    },
    "CreateEnumOptionForCustomFieldOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "enabled",
          "name"
        ],
        "type": "enum"
      }
    },
    "CreateGoalMetricOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "is_workspace_level",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "metric",
          "metric.can_manage",
          "metric.currency_code",
          "metric.current_display_value",
          "metric.current_number_value",
          "metric.initial_number_value",
          "metric.is_custom_weight",
          "metric.precision",
          "metric.progress_source",
          "metric.resource_subtype",
          "metric.target_number_value",
          "metric.unit",
          "name",
          "notes",
          "num_likes",
          "owner",
          "owner.name",
          "start_on",
          "status",
          "team",
          "team.name",
          "time_period",
          "time_period.display_name",
          "time_period.end_on",
          "time_period.period",
          "time_period.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateGoalOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "is_workspace_level",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "metric",
          "metric.can_manage",
          "metric.currency_code",
          "metric.current_display_value",
          "metric.current_number_value",
          "metric.initial_number_value",
          "metric.is_custom_weight",
          "metric.precision",
          "metric.progress_source",
          "metric.resource_subtype",
          "metric.target_number_value",
          "metric.unit",
          "name",
          "notes",
          "num_likes",
          "owner",
          "owner.name",
          "start_on",
          "status",
          "team",
          "team.name",
          "time_period",
          "time_period.display_name",
          "time_period.end_on",
          "time_period.period",
          "time_period.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateOrganizationExportOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "download_url",
          "organization",
          "organization.name",
          "state"
        ],
        "type": "enum"
      }
    },
    "CreatePortfolioOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "created_at",
          "created_by",
          "created_by.name",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "due_on",
          "members",
          "members.name",
          "name",
          "owner",
          "owner.name",
          "permalink_url",
          "privacy_setting",
          "project_templates",
          "project_templates.name",
          "public",
          "start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateProjectBriefOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "html_text",
          "permalink_url",
          "project",
          "project.name",
          "text",
          "title"
        ],
        "type": "enum"
      }
    },
    "CreateProjectForTeamOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "owner",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateProjectForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "owner",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "owner",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateProjectStatusForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "author",
          "author.name",
          "color",
          "created_at",
          "created_by",
          "created_by.name",
          "html_text",
          "modified_at",
          "text",
          "title"
        ],
        "type": "enum"
      }
    },
    "CreateSectionForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "name",
          "project",
          "project.name",
          "projects",
          "projects.name"
        ],
        "type": "enum"
      }
    },
    "CreateStatusForObjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "author",
          "author.name",
          "created_at",
          "created_by",
          "created_by.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_text",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "modified_at",
          "num_hearts",
          "num_likes",
          "parent",
          "parent.name",
          "resource_subtype",
          "status_type",
          "text",
          "title"
        ],
        "type": "enum"
      }
    },
    "CreateStoryForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "assignee",
          "assignee.name",
          "created_at",
          "created_by",
          "created_by.name",
          "custom_field",
          "custom_field.date_value",
          "custom_field.date_value.date",
          "custom_field.date_value.date_time",
          "custom_field.display_value",
          "custom_field.enabled",
          "custom_field.enum_options",
          "custom_field.enum_options.color",
          "custom_field.enum_options.enabled",
          "custom_field.enum_options.name",
          "custom_field.enum_value",
          "custom_field.enum_value.color",
          "custom_field.enum_value.enabled",
          "custom_field.enum_value.name",
          "custom_field.id_prefix",
          "custom_field.is_formula_field",
          "custom_field.multi_enum_values",
          "custom_field.multi_enum_values.color",
          "custom_field.multi_enum_values.enabled",
          "custom_field.multi_enum_values.name",
          "custom_field.name",
          "custom_field.number_value",
          "custom_field.representation_type",
          "custom_field.text_value",
          "custom_field.type",
          "dependency",
          "dependency.created_by",
          "dependency.name",
          "dependency.resource_subtype",
          "duplicate_of",
          "duplicate_of.created_by",
          "duplicate_of.name",
          "duplicate_of.resource_subtype",
          "duplicated_from",
          "duplicated_from.created_by",
          "duplicated_from.name",
          "duplicated_from.resource_subtype",
          "follower",
          "follower.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_text",
          "is_editable",
          "is_edited",
          "is_pinned",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "new_approval_status",
          "new_date_value",
          "new_dates",
          "new_dates.due_at",
          "new_dates.due_on",
          "new_dates.start_on",
          "new_enum_value",
          "new_enum_value.color",
          "new_enum_value.enabled",
          "new_enum_value.name",
          "new_multi_enum_values",
          "new_multi_enum_values.color",
          "new_multi_enum_values.enabled",
          "new_multi_enum_values.name",
          "new_name",
          "new_number_value",
          "new_people_value",
          "new_people_value.name",
          "new_resource_subtype",
          "new_section",
          "new_section.name",
          "new_text_value",
          "num_hearts",
          "num_likes",
          "old_approval_status",
          "old_date_value",
          "old_dates",
          "old_dates.due_at",
          "old_dates.due_on",
          "old_dates.start_on",
          "old_enum_value",
          "old_enum_value.color",
          "old_enum_value.enabled",
          "old_enum_value.name",
          "old_multi_enum_values",
          "old_multi_enum_values.color",
          "old_multi_enum_values.enabled",
          "old_multi_enum_values.name",
          "old_name",
          "old_number_value",
          "old_people_value",
          "old_people_value.name",
          "old_resource_subtype",
          "old_section",
          "old_section.name",
          "old_text_value",
          "previews",
          "previews.fallback",
          "previews.footer",
          "previews.header",
          "previews.header_link",
          "previews.html_text",
          "previews.text",
          "previews.title",
          "previews.title_link",
          "project",
          "project.name",
          "resource_subtype",
          "source",
          "sticker_name",
          "story",
          "story.created_at",
          "story.created_by",
          "story.created_by.name",
          "story.resource_subtype",
          "story.text",
          "tag",
          "tag.name",
          "target",
          "target.created_by",
          "target.name",
          "target.resource_subtype",
          "task",
          "task.created_by",
          "task.name",
          "task.resource_subtype",
          "text",
          "type"
        ],
        "type": "enum"
      }
    },
    "CreateSubtaskForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateTagForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "created_at",
          "followers",
          "followers.name",
          "name",
          "notes",
          "permalink_url",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateTagOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "created_at",
          "followers",
          "followers.name",
          "name",
          "notes",
          "permalink_url",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "CreateTeamOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "description",
          "edit_team_name_or_description_access_level",
          "edit_team_visibility_or_trash_team_access_level",
          "endorsed",
          "guest_invite_management_access_level",
          "html_description",
          "join_request_management_access_level",
          "member_invite_management_access_level",
          "name",
          "organization",
          "organization.name",
          "permalink_url",
          "team_content_management_access_level",
          "team_member_removal_access_level",
          "visibility"
        ],
        "type": "enum"
      }
    },
    "CreateTimeTrackingEntryOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "attributable_to",
          "attributable_to.name",
          "created_at",
          "created_by",
          "created_by.name",
          "duration_minutes",
          "entered_on",
          "task",
          "task.created_by",
          "task.name",
          "task.resource_subtype"
        ],
        "type": "enum"
      }
    },
    "CreateWebhookOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "active",
          "created_at",
          "delivery_retry_count",
          "failure_deletion_timestamp",
          "filters",
          "filters.action",
          "filters.fields",
          "filters.resource_subtype",
          "last_failure_at",
          "last_failure_content",
          "last_success_at",
          "next_attempt_after",
          "resource",
          "resource.name",
          "target"
        ],
        "type": "enum"
      }
    },
    "CustomFieldBase1AsanaCreatedFieldEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "a_v_requirements",
          "account_name",
          "actionable",
          "align_shipping_link",
          "align_status",
          "allotted_time",
          "appointment",
          "approval_stage",
          "approved",
          "article_series",
          "board_committee",
          "browser",
          "campaign_audience",
          "campaign_project_status",
          "campaign_regions",
          "channel_primary",
          "client_topic_type",
          "complete_by",
          "contact",
          "contact_email_address",
          "content_channels",
          "content_channels_needed",
          "content_stage",
          "content_type",
          "contract",
          "contract_status",
          "cost",
          "creation_stage",
          "creative_channel",
          "creative_needed",
          "creative_needs",
          "data_sensitivity",
          "deal_size",
          "delivery_appt",
          "delivery_appt_date",
          "department",
          "department_responsible",
          "design_request_needed",
          "design_request_type",
          "discussion_category",
          "do_this_task",
          "editorial_content_status",
          "editorial_content_tag",
          "editorial_content_type",
          "effort",
          "effort_level",
          "est_completion_date",
          "estimated_time",
          "estimated_value",
          "expected_cost",
          "external_steps_needed",
          "favorite_idea",
          "feedback_type",
          "financial",
          "funding_amount",
          "grant_application_process",
          "hiring_candidate_status",
          "idea_status",
          "ids_link",
          "ids_patient_link",
          "implementation_stage",
          "insurance",
          "interview_area",
          "interview_question_score",
          "itero_scan_link",
          "job_s_applied_to",
          "lab",
          "launch_status",
          "lead_status",
          "localization_language",
          "localization_market_team",
          "localization_status",
          "meeting_minutes",
          "meeting_needed",
          "minutes",
          "mrr",
          "must_localize",
          "name_of_foundation",
          "need_to_follow_up",
          "next_appointment",
          "next_steps_sales",
          "num_people",
          "number_of_user_reports",
          "office_location",
          "onboarding_activity",
          "owner",
          "participants_needed",
          "patient_date_of_birth",
          "patient_email",
          "patient_phone",
          "patient_status",
          "phone_number",
          "planning_category",
          "point_of_contact",
          "position",
          "post_format",
          "prescription",
          "priority",
          "priority_level",
          "product",
          "product_stage",
          "progress",
          "project_size",
          "project_status",
          "proposed_budget",
          "publish_status",
          "reason_for_scan",
          "referral",
          "request_type",
          "research_status",
          "responsible_department",
          "responsible_team",
          "risk_assessment_status",
          "room_name",
          "sales_counterpart",
          "sentiment",
          "shipping_link",
          "social_channels",
          "stage",
          "status",
          "status_design",
          "status_of_initiative",
          "system_setup",
          "task_progress",
          "team",
          "team_marketing",
          "team_responsible",
          "time_it_takes_to_complete_tasks",
          "timeframe",
          "treatment_type",
          "type_work_requests_it",
          "use_agency",
          "user_name",
          "vendor_category",
          "vendor_type",
          "word_count",
          ""
        ],
        "type": "enum"
      }
    },
    "CustomFieldBase1CustomLabelPositionEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "prefix",
          "suffix",
          ""
        ],
        "type": "enum"
      }
    },
    "CustomFieldBase1FormatEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "currency",
          "identifier",
          "percentage",
          "custom",
          "duration",
          "none"
        ],
        "type": "enum"
      }
    },
    "CustomFieldCompactRepresentationTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "text",
          "enum",
          "multi_enum",
          "number",
          "date",
          "people",
          "formula",
          "custom_id"
        ],
        "type": "enum"
      }
    },
    "CustomFieldCompactTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "text",
          "enum",
          "multi_enum",
          "number",
          "date",
          "people"
        ],
        "type": "enum"
      }
    },
    "CustomFieldCreateRequest1ResourceSubtypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "text",
          "enum",
          "multi_enum",
          "number",
          "date",
          "people"
        ],
        "type": "enum"
      }
    },
    "CustomFieldResponse1DefaultAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "editor",
          "user"
        ],
        "type": "enum"
      }
    },
    "CustomFieldResponse1PrivacySettingEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "public_with_guests",
          "public",
          "private"
        ],
        "type": "enum"
      }
    },
    "CustomFieldResponse1ResourceSubtypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "text",
          "enum",
          "multi_enum",
          "number",
          "date",
          "people"
        ],
        "type": "enum"
      }
    },
    "CustomFieldResponseRepresentationTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "custom_id",
          "date",
          "enum",
          "formula",
          "multi_enum",
          "number",
          "people",
          "text"
        ],
        "type": "enum"
      }
    },
    "Date": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "date"
      }
    },
    "DeprecatedPortfolioMembershipCompactAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "editor",
          "viewer"
        ],
        "type": "enum"
      }
    },
    "DeprecatedPortfolioMembershipResponseAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "editor",
          "viewer"
        ],
        "type": "enum"
      }
    },
    "DuplicateProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "new_project",
          "new_project.name",
          "new_project_template",
          "new_project_template.name",
          "new_task",
          "new_task.created_by",
          "new_task.name",
          "new_task.resource_subtype",
          "new_task_template",
          "new_task_template.name",
          "resource_subtype",
          "status"
        ],
        "type": "enum"
      }
    },
    "DuplicateTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "new_project",
          "new_project.name",
          "new_project_template",
          "new_project_template.name",
          "new_task",
          "new_task.created_by",
          "new_task.name",
          "new_task.resource_subtype",
          "new_task_template",
          "new_task_template.name",
          "resource_subtype",
          "status"
        ],
        "type": "enum"
      }
    },
    "EmptyResponse": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "Float64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "float64"
      }
    },
    "GetAllocationOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "assignee",
          "assignee.name",
          "created_by",
          "created_by.name",
          "effort",
          "effort.type",
          "effort.value",
          "end_date",
          "parent",
          "parent.name",
          "resource_subtype",
          "start_date"
        ],
        "type": "enum"
      }
    },
    "GetAllocationsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "assignee",
          "assignee.name",
          "created_by",
          "created_by.name",
          "effort",
          "effort.type",
          "effort.value",
          "end_date",
          "offset",
          "parent",
          "parent.name",
          "path",
          "resource_subtype",
          "start_date",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetAttachmentOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "connected_to_app",
          "created_at",
          "download_url",
          "host",
          "name",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permanent_url",
          "resource_subtype",
          "size",
          "view_url"
        ],
        "type": "enum"
      }
    },
    "GetAttachmentsForObjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "connected_to_app",
          "created_at",
          "download_url",
          "host",
          "name",
          "offset",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "path",
          "permanent_url",
          "resource_subtype",
          "size",
          "uri",
          "view_url"
        ],
        "type": "enum"
      }
    },
    "GetAuditLogEventsActorTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "user",
          "asana",
          "asana_support",
          "anonymous",
          "external_administrator"
        ],
        "type": "enum"
      }
    },
    "GetCustomFieldOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "asana_created_field",
          "created_by",
          "created_by.name",
          "currency_code",
          "custom_label",
          "custom_label_position",
          "date_value",
          "date_value.date",
          "date_value.date_time",
          "default_access_level",
          "description",
          "display_value",
          "enabled",
          "enum_options",
          "enum_options.color",
          "enum_options.enabled",
          "enum_options.name",
          "enum_value",
          "enum_value.color",
          "enum_value.enabled",
          "enum_value.name",
          "format",
          "has_notifications_enabled",
          "id_prefix",
          "is_formula_field",
          "is_global_to_workspace",
          "is_value_read_only",
          "multi_enum_values",
          "multi_enum_values.color",
          "multi_enum_values.enabled",
          "multi_enum_values.name",
          "name",
          "number_value",
          "people_value",
          "people_value.name",
          "precision",
          "privacy_setting",
          "representation_type",
          "resource_subtype",
          "text_value",
          "type"
        ],
        "type": "enum"
      }
    },
    "GetCustomFieldSettingsForPortfolioOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "custom_field",
          "custom_field.asana_created_field",
          "custom_field.created_by",
          "custom_field.created_by.name",
          "custom_field.currency_code",
          "custom_field.custom_label",
          "custom_field.custom_label_position",
          "custom_field.date_value",
          "custom_field.date_value.date",
          "custom_field.date_value.date_time",
          "custom_field.default_access_level",
          "custom_field.description",
          "custom_field.display_value",
          "custom_field.enabled",
          "custom_field.enum_options",
          "custom_field.enum_options.color",
          "custom_field.enum_options.enabled",
          "custom_field.enum_options.name",
          "custom_field.enum_value",
          "custom_field.enum_value.color",
          "custom_field.enum_value.enabled",
          "custom_field.enum_value.name",
          "custom_field.format",
          "custom_field.has_notifications_enabled",
          "custom_field.id_prefix",
          "custom_field.is_formula_field",
          "custom_field.is_global_to_workspace",
          "custom_field.is_value_read_only",
          "custom_field.multi_enum_values",
          "custom_field.multi_enum_values.color",
          "custom_field.multi_enum_values.enabled",
          "custom_field.multi_enum_values.name",
          "custom_field.name",
          "custom_field.number_value",
          "custom_field.people_value",
          "custom_field.people_value.name",
          "custom_field.precision",
          "custom_field.privacy_setting",
          "custom_field.representation_type",
          "custom_field.resource_subtype",
          "custom_field.text_value",
          "custom_field.type",
          "is_important",
          "offset",
          "parent",
          "parent.name",
          "path",
          "project",
          "project.name",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetCustomFieldSettingsForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "custom_field",
          "custom_field.asana_created_field",
          "custom_field.created_by",
          "custom_field.created_by.name",
          "custom_field.currency_code",
          "custom_field.custom_label",
          "custom_field.custom_label_position",
          "custom_field.date_value",
          "custom_field.date_value.date",
          "custom_field.date_value.date_time",
          "custom_field.default_access_level",
          "custom_field.description",
          "custom_field.display_value",
          "custom_field.enabled",
          "custom_field.enum_options",
          "custom_field.enum_options.color",
          "custom_field.enum_options.enabled",
          "custom_field.enum_options.name",
          "custom_field.enum_value",
          "custom_field.enum_value.color",
          "custom_field.enum_value.enabled",
          "custom_field.enum_value.name",
          "custom_field.format",
          "custom_field.has_notifications_enabled",
          "custom_field.id_prefix",
          "custom_field.is_formula_field",
          "custom_field.is_global_to_workspace",
          "custom_field.is_value_read_only",
          "custom_field.multi_enum_values",
          "custom_field.multi_enum_values.color",
          "custom_field.multi_enum_values.enabled",
          "custom_field.multi_enum_values.name",
          "custom_field.name",
          "custom_field.number_value",
          "custom_field.people_value",
          "custom_field.people_value.name",
          "custom_field.precision",
          "custom_field.privacy_setting",
          "custom_field.representation_type",
          "custom_field.resource_subtype",
          "custom_field.text_value",
          "custom_field.type",
          "is_important",
          "offset",
          "parent",
          "parent.name",
          "path",
          "project",
          "project.name",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetCustomFieldsForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "asana_created_field",
          "created_by",
          "created_by.name",
          "currency_code",
          "custom_label",
          "custom_label_position",
          "date_value",
          "date_value.date",
          "date_value.date_time",
          "default_access_level",
          "description",
          "display_value",
          "enabled",
          "enum_options",
          "enum_options.color",
          "enum_options.enabled",
          "enum_options.name",
          "enum_value",
          "enum_value.color",
          "enum_value.enabled",
          "enum_value.name",
          "format",
          "has_notifications_enabled",
          "id_prefix",
          "is_formula_field",
          "is_global_to_workspace",
          "is_value_read_only",
          "multi_enum_values",
          "multi_enum_values.color",
          "multi_enum_values.enabled",
          "multi_enum_values.name",
          "name",
          "number_value",
          "offset",
          "path",
          "people_value",
          "people_value.name",
          "precision",
          "privacy_setting",
          "representation_type",
          "resource_subtype",
          "text_value",
          "type",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetCustomTypesOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "name",
          "offset",
          "path",
          "status_options",
          "status_options.color",
          "status_options.completion_state",
          "status_options.enabled",
          "status_options.name",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetDependenciesForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "offset",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "path",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetDependentsForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "offset",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "path",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetEventsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "action",
          "change",
          "change.action",
          "change.added_value",
          "change.field",
          "change.new_value",
          "change.removed_value",
          "created_at",
          "parent",
          "parent.name",
          "resource",
          "resource.name",
          "type",
          "user",
          "user.name"
        ],
        "type": "enum"
      }
    },
    "GetFavoritesForUserOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "name",
          "offset",
          "path",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetFavoritesForUserResourceTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "portfolio",
          "project",
          "tag",
          "task",
          "user",
          "project_template"
        ],
        "type": "enum"
      }
    },
    "GetGoalOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "is_workspace_level",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "metric",
          "metric.can_manage",
          "metric.currency_code",
          "metric.current_display_value",
          "metric.current_number_value",
          "metric.initial_number_value",
          "metric.is_custom_weight",
          "metric.precision",
          "metric.progress_source",
          "metric.resource_subtype",
          "metric.target_number_value",
          "metric.unit",
          "name",
          "notes",
          "num_likes",
          "owner",
          "owner.name",
          "start_on",
          "status",
          "team",
          "team.name",
          "time_period",
          "time_period.display_name",
          "time_period.end_on",
          "time_period.period",
          "time_period.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetGoalRelationshipOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "contribution_weight",
          "resource_subtype",
          "supported_goal",
          "supported_goal.name",
          "supported_goal.owner",
          "supported_goal.owner.name",
          "supporting_resource",
          "supporting_resource.name"
        ],
        "type": "enum"
      }
    },
    "GetGoalRelationshipsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "contribution_weight",
          "offset",
          "path",
          "resource_subtype",
          "supported_goal",
          "supported_goal.name",
          "supported_goal.owner",
          "supported_goal.owner.name",
          "supporting_resource",
          "supporting_resource.name",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetGoalsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "is_workspace_level",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "metric",
          "metric.can_manage",
          "metric.currency_code",
          "metric.current_display_value",
          "metric.current_number_value",
          "metric.initial_number_value",
          "metric.is_custom_weight",
          "metric.precision",
          "metric.progress_source",
          "metric.resource_subtype",
          "metric.target_number_value",
          "metric.unit",
          "name",
          "notes",
          "num_likes",
          "offset",
          "owner",
          "owner.name",
          "path",
          "start_on",
          "status",
          "team",
          "team.name",
          "time_period",
          "time_period.display_name",
          "time_period.end_on",
          "time_period.period",
          "time_period.start_on",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetItemsForPortfolioOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "offset",
          "owner",
          "path",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetJobOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "new_project",
          "new_project.name",
          "new_project_template",
          "new_project_template.name",
          "new_task",
          "new_task.created_by",
          "new_task.name",
          "new_task.resource_subtype",
          "new_task_template",
          "new_task_template.name",
          "resource_subtype",
          "status"
        ],
        "type": "enum"
      }
    },
    "GetMembershipsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "offset",
          "path",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetOrganizationExportOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "download_url",
          "organization",
          "organization.name",
          "state"
        ],
        "type": "enum"
      }
    },
    "GetParentGoalsForGoalOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "is_workspace_level",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "metric",
          "metric.can_manage",
          "metric.currency_code",
          "metric.current_display_value",
          "metric.current_number_value",
          "metric.initial_number_value",
          "metric.is_custom_weight",
          "metric.precision",
          "metric.progress_source",
          "metric.resource_subtype",
          "metric.target_number_value",
          "metric.unit",
          "name",
          "notes",
          "num_likes",
          "owner",
          "owner.name",
          "start_on",
          "status",
          "team",
          "team.name",
          "time_period",
          "time_period.display_name",
          "time_period.end_on",
          "time_period.period",
          "time_period.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetPortfolioMembershipOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "access_level",
          "portfolio",
          "portfolio.name",
          "user",
          "user.name"
        ],
        "type": "enum"
      }
    },
    "GetPortfolioMembershipsForPortfolioOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "access_level",
          "offset",
          "path",
          "portfolio",
          "portfolio.name",
          "uri",
          "user",
          "user.name"
        ],
        "type": "enum"
      }
    },
    "GetPortfolioMembershipsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "access_level",
          "offset",
          "path",
          "portfolio",
          "portfolio.name",
          "uri",
          "user",
          "user.name"
        ],
        "type": "enum"
      }
    },
    "GetPortfolioOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "created_at",
          "created_by",
          "created_by.name",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "due_on",
          "members",
          "members.name",
          "name",
          "owner",
          "owner.name",
          "permalink_url",
          "privacy_setting",
          "project_templates",
          "project_templates.name",
          "public",
          "start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetPortfoliosOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "created_at",
          "created_by",
          "created_by.name",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "due_on",
          "members",
          "members.name",
          "name",
          "offset",
          "owner",
          "owner.name",
          "path",
          "permalink_url",
          "privacy_setting",
          "project_templates",
          "project_templates.name",
          "public",
          "start_on",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetProjectBriefOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "html_text",
          "permalink_url",
          "project",
          "project.name",
          "text",
          "title"
        ],
        "type": "enum"
      }
    },
    "GetProjectMembershipOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "access_level",
          "member",
          "member.name",
          "parent",
          "parent.name",
          "project",
          "project.name",
          "user",
          "user.name",
          "write_access"
        ],
        "type": "enum"
      }
    },
    "GetProjectMembershipsForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "access_level",
          "member",
          "member.name",
          "offset",
          "parent",
          "parent.name",
          "path",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "owner",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetProjectStatusOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "author",
          "author.name",
          "color",
          "created_at",
          "created_by",
          "created_by.name",
          "html_text",
          "modified_at",
          "text",
          "title"
        ],
        "type": "enum"
      }
    },
    "GetProjectStatusesForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "author",
          "author.name",
          "color",
          "created_at",
          "created_by",
          "created_by.name",
          "html_text",
          "modified_at",
          "offset",
          "path",
          "text",
          "title",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetProjectTemplateOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "description",
          "html_description",
          "name",
          "owner",
          "public",
          "requested_dates",
          "requested_dates.description",
          "requested_dates.name",
          "requested_roles",
          "requested_roles.name",
          "team",
          "team.name"
        ],
        "type": "enum"
      }
    },
    "GetProjectTemplatesForTeamOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "description",
          "html_description",
          "name",
          "offset",
          "owner",
          "path",
          "public",
          "requested_dates",
          "requested_dates.description",
          "requested_dates.name",
          "requested_roles",
          "requested_roles.name",
          "team",
          "team.name",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetProjectTemplatesOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "description",
          "html_description",
          "name",
          "offset",
          "owner",
          "path",
          "public",
          "requested_dates",
          "requested_dates.description",
          "requested_dates.name",
          "requested_roles",
          "requested_roles.name",
          "team",
          "team.name",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetProjectsForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "offset",
          "owner",
          "path",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetProjectsForTeamOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "offset",
          "owner",
          "path",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetProjectsForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "offset",
          "owner",
          "path",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetProjectsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "offset",
          "owner",
          "path",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetSectionOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "name",
          "project",
          "project.name",
          "projects",
          "projects.name"
        ],
        "type": "enum"
      }
    },
    "GetSectionsForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "name",
          "offset",
          "path",
          "project",
          "project.name",
          "projects",
          "projects.name",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetStatusOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "author",
          "author.name",
          "created_at",
          "created_by",
          "created_by.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_text",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "modified_at",
          "num_hearts",
          "num_likes",
          "parent",
          "parent.name",
          "resource_subtype",
          "status_type",
          "text",
          "title"
        ],
        "type": "enum"
      }
    },
    "GetStatusesForObjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "author",
          "author.name",
          "created_at",
          "created_by",
          "created_by.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_text",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "modified_at",
          "num_hearts",
          "num_likes",
          "offset",
          "parent",
          "parent.name",
          "path",
          "resource_subtype",
          "status_type",
          "text",
          "title",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetStoriesForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "assignee",
          "assignee.name",
          "created_at",
          "created_by",
          "created_by.name",
          "custom_field",
          "custom_field.date_value",
          "custom_field.date_value.date",
          "custom_field.date_value.date_time",
          "custom_field.display_value",
          "custom_field.enabled",
          "custom_field.enum_options",
          "custom_field.enum_options.color",
          "custom_field.enum_options.enabled",
          "custom_field.enum_options.name",
          "custom_field.enum_value",
          "custom_field.enum_value.color",
          "custom_field.enum_value.enabled",
          "custom_field.enum_value.name",
          "custom_field.id_prefix",
          "custom_field.is_formula_field",
          "custom_field.multi_enum_values",
          "custom_field.multi_enum_values.color",
          "custom_field.multi_enum_values.enabled",
          "custom_field.multi_enum_values.name",
          "custom_field.name",
          "custom_field.number_value",
          "custom_field.representation_type",
          "custom_field.text_value",
          "custom_field.type",
          "dependency",
          "dependency.created_by",
          "dependency.name",
          "dependency.resource_subtype",
          "duplicate_of",
          "duplicate_of.created_by",
          "duplicate_of.name",
          "duplicate_of.resource_subtype",
          "duplicated_from",
          "duplicated_from.created_by",
          "duplicated_from.name",
          "duplicated_from.resource_subtype",
          "follower",
          "follower.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_text",
          "is_editable",
          "is_edited",
          "is_pinned",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "new_approval_status",
          "new_date_value",
          "new_dates",
          "new_dates.due_at",
          "new_dates.due_on",
          "new_dates.start_on",
          "new_enum_value",
          "new_enum_value.color",
          "new_enum_value.enabled",
          "new_enum_value.name",
          "new_multi_enum_values",
          "new_multi_enum_values.color",
          "new_multi_enum_values.enabled",
          "new_multi_enum_values.name",
          "new_name",
          "new_number_value",
          "new_people_value",
          "new_people_value.name",
          "new_resource_subtype",
          "new_section",
          "new_section.name",
          "new_text_value",
          "num_hearts",
          "num_likes",
          "offset",
          "old_approval_status",
          "old_date_value",
          "old_dates",
          "old_dates.due_at",
          "old_dates.due_on",
          "old_dates.start_on",
          "old_enum_value",
          "old_enum_value.color",
          "old_enum_value.enabled",
          "old_enum_value.name",
          "old_multi_enum_values",
          "old_multi_enum_values.color",
          "old_multi_enum_values.enabled",
          "old_multi_enum_values.name",
          "old_name",
          "old_number_value",
          "old_people_value",
          "old_people_value.name",
          "old_resource_subtype",
          "old_section",
          "old_section.name",
          "old_text_value",
          "path",
          "previews",
          "previews.fallback",
          "previews.footer",
          "previews.header",
          "previews.header_link",
          "previews.html_text",
          "previews.text",
          "previews.title",
          "previews.title_link",
          "project",
          "project.name",
          "resource_subtype",
          "source",
          "sticker_name",
          "story",
          "story.created_at",
          "story.created_by",
          "story.created_by.name",
          "story.resource_subtype",
          "story.text",
          "tag",
          "tag.name",
          "target",
          "target.created_by",
          "target.name",
          "target.resource_subtype",
          "task",
          "task.created_by",
          "task.name",
          "task.resource_subtype",
          "text",
          "type",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetStoryOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "assignee",
          "assignee.name",
          "created_at",
          "created_by",
          "created_by.name",
          "custom_field",
          "custom_field.date_value",
          "custom_field.date_value.date",
          "custom_field.date_value.date_time",
          "custom_field.display_value",
          "custom_field.enabled",
          "custom_field.enum_options",
          "custom_field.enum_options.color",
          "custom_field.enum_options.enabled",
          "custom_field.enum_options.name",
          "custom_field.enum_value",
          "custom_field.enum_value.color",
          "custom_field.enum_value.enabled",
          "custom_field.enum_value.name",
          "custom_field.id_prefix",
          "custom_field.is_formula_field",
          "custom_field.multi_enum_values",
          "custom_field.multi_enum_values.color",
          "custom_field.multi_enum_values.enabled",
          "custom_field.multi_enum_values.name",
          "custom_field.name",
          "custom_field.number_value",
          "custom_field.representation_type",
          "custom_field.text_value",
          "custom_field.type",
          "dependency",
          "dependency.created_by",
          "dependency.name",
          "dependency.resource_subtype",
          "duplicate_of",
          "duplicate_of.created_by",
          "duplicate_of.name",
          "duplicate_of.resource_subtype",
          "duplicated_from",
          "duplicated_from.created_by",
          "duplicated_from.name",
          "duplicated_from.resource_subtype",
          "follower",
          "follower.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_text",
          "is_editable",
          "is_edited",
          "is_pinned",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "new_approval_status",
          "new_date_value",
          "new_dates",
          "new_dates.due_at",
          "new_dates.due_on",
          "new_dates.start_on",
          "new_enum_value",
          "new_enum_value.color",
          "new_enum_value.enabled",
          "new_enum_value.name",
          "new_multi_enum_values",
          "new_multi_enum_values.color",
          "new_multi_enum_values.enabled",
          "new_multi_enum_values.name",
          "new_name",
          "new_number_value",
          "new_people_value",
          "new_people_value.name",
          "new_resource_subtype",
          "new_section",
          "new_section.name",
          "new_text_value",
          "num_hearts",
          "num_likes",
          "old_approval_status",
          "old_date_value",
          "old_dates",
          "old_dates.due_at",
          "old_dates.due_on",
          "old_dates.start_on",
          "old_enum_value",
          "old_enum_value.color",
          "old_enum_value.enabled",
          "old_enum_value.name",
          "old_multi_enum_values",
          "old_multi_enum_values.color",
          "old_multi_enum_values.enabled",
          "old_multi_enum_values.name",
          "old_name",
          "old_number_value",
          "old_people_value",
          "old_people_value.name",
          "old_resource_subtype",
          "old_section",
          "old_section.name",
          "old_text_value",
          "previews",
          "previews.fallback",
          "previews.footer",
          "previews.header",
          "previews.header_link",
          "previews.html_text",
          "previews.text",
          "previews.title",
          "previews.title_link",
          "project",
          "project.name",
          "resource_subtype",
          "source",
          "sticker_name",
          "story",
          "story.created_at",
          "story.created_by",
          "story.created_by.name",
          "story.resource_subtype",
          "story.text",
          "tag",
          "tag.name",
          "target",
          "target.created_by",
          "target.name",
          "target.resource_subtype",
          "task",
          "task.created_by",
          "task.name",
          "task.resource_subtype",
          "text",
          "type"
        ],
        "type": "enum"
      }
    },
    "GetSubtasksForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "offset",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "path",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTagOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "created_at",
          "followers",
          "followers.name",
          "name",
          "notes",
          "permalink_url",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTagsForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "created_at",
          "followers",
          "followers.name",
          "name",
          "notes",
          "offset",
          "path",
          "permalink_url",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTagsForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "created_at",
          "followers",
          "followers.name",
          "name",
          "notes",
          "offset",
          "path",
          "permalink_url",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTagsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "created_at",
          "followers",
          "followers.name",
          "name",
          "notes",
          "offset",
          "path",
          "permalink_url",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTaskCountsForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "num_completed_milestones",
          "num_completed_tasks",
          "num_incomplete_milestones",
          "num_incomplete_tasks",
          "num_milestones",
          "num_tasks"
        ],
        "type": "enum"
      }
    },
    "GetTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTaskTemplateOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "created_by",
          "name",
          "project",
          "template"
        ],
        "type": "enum"
      }
    },
    "GetTaskTemplatesOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "created_by",
          "name",
          "project",
          "template"
        ],
        "type": "enum"
      }
    },
    "GetTasksForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "offset",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "path",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTasksForSectionOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "offset",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "path",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTasksForTagOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "offset",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "path",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTasksForUserTaskListOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "offset",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "path",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTasksOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "offset",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "path",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "uri",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetTeamMembershipOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "is_admin",
          "is_guest",
          "is_limited_access",
          "team",
          "team.name",
          "user",
          "user.name"
        ],
        "type": "enum"
      }
    },
    "GetTeamMembershipsForTeamOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "is_admin",
          "is_guest",
          "is_limited_access",
          "offset",
          "path",
          "team",
          "team.name",
          "uri",
          "user",
          "user.name"
        ],
        "type": "enum"
      }
    },
    "GetTeamMembershipsForUserOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "is_admin",
          "is_guest",
          "is_limited_access",
          "offset",
          "path",
          "team",
          "team.name",
          "uri",
          "user",
          "user.name"
        ],
        "type": "enum"
      }
    },
    "GetTeamMembershipsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "is_admin",
          "is_guest",
          "is_limited_access",
          "offset",
          "path",
          "team",
          "team.name",
          "uri",
          "user",
          "user.name"
        ],
        "type": "enum"
      }
    },
    "GetTeamOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "description",
          "edit_team_name_or_description_access_level",
          "edit_team_visibility_or_trash_team_access_level",
          "endorsed",
          "guest_invite_management_access_level",
          "html_description",
          "join_request_management_access_level",
          "member_invite_management_access_level",
          "name",
          "organization",
          "organization.name",
          "permalink_url",
          "team_content_management_access_level",
          "team_member_removal_access_level",
          "visibility"
        ],
        "type": "enum"
      }
    },
    "GetTeamsForUserOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "description",
          "edit_team_name_or_description_access_level",
          "edit_team_visibility_or_trash_team_access_level",
          "endorsed",
          "guest_invite_management_access_level",
          "html_description",
          "join_request_management_access_level",
          "member_invite_management_access_level",
          "name",
          "offset",
          "organization",
          "organization.name",
          "path",
          "permalink_url",
          "team_content_management_access_level",
          "team_member_removal_access_level",
          "uri",
          "visibility"
        ],
        "type": "enum"
      }
    },
    "GetTeamsForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "description",
          "edit_team_name_or_description_access_level",
          "edit_team_visibility_or_trash_team_access_level",
          "endorsed",
          "guest_invite_management_access_level",
          "html_description",
          "join_request_management_access_level",
          "member_invite_management_access_level",
          "name",
          "offset",
          "organization",
          "organization.name",
          "path",
          "permalink_url",
          "team_content_management_access_level",
          "team_member_removal_access_level",
          "uri",
          "visibility"
        ],
        "type": "enum"
      }
    },
    "GetTimePeriodOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "display_name",
          "end_on",
          "parent",
          "parent.display_name",
          "parent.end_on",
          "parent.period",
          "parent.start_on",
          "period",
          "start_on"
        ],
        "type": "enum"
      }
    },
    "GetTimePeriodsOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "display_name",
          "end_on",
          "offset",
          "parent",
          "parent.display_name",
          "parent.end_on",
          "parent.period",
          "parent.start_on",
          "path",
          "period",
          "start_on",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetTimeTrackingEntriesForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "attributable_to",
          "attributable_to.name",
          "created_by",
          "created_by.name",
          "duration_minutes",
          "entered_on",
          "offset",
          "path",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetTimeTrackingEntryOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "attributable_to",
          "attributable_to.name",
          "created_at",
          "created_by",
          "created_by.name",
          "duration_minutes",
          "entered_on",
          "task",
          "task.created_by",
          "task.name",
          "task.resource_subtype"
        ],
        "type": "enum"
      }
    },
    "GetUserOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "email",
          "name",
          "photo",
          "photo.image_1024x1024",
          "photo.image_128x128",
          "photo.image_21x21",
          "photo.image_27x27",
          "photo.image_36x36",
          "photo.image_60x60",
          "workspaces",
          "workspaces.name"
        ],
        "type": "enum"
      }
    },
    "GetUserTaskListForUserOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "name",
          "owner",
          "workspace"
        ],
        "type": "enum"
      }
    },
    "GetUserTaskListOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "name",
          "owner",
          "workspace"
        ],
        "type": "enum"
      }
    },
    "GetUsersForTeamOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "email",
          "name",
          "photo",
          "photo.image_1024x1024",
          "photo.image_128x128",
          "photo.image_21x21",
          "photo.image_27x27",
          "photo.image_36x36",
          "photo.image_60x60",
          "workspaces",
          "workspaces.name"
        ],
        "type": "enum"
      }
    },
    "GetUsersForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "email",
          "name",
          "photo",
          "photo.image_1024x1024",
          "photo.image_128x128",
          "photo.image_21x21",
          "photo.image_27x27",
          "photo.image_36x36",
          "photo.image_60x60",
          "workspaces",
          "workspaces.name"
        ],
        "type": "enum"
      }
    },
    "GetUsersOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "email",
          "name",
          "offset",
          "path",
          "photo",
          "photo.image_1024x1024",
          "photo.image_128x128",
          "photo.image_21x21",
          "photo.image_27x27",
          "photo.image_36x36",
          "photo.image_60x60",
          "uri",
          "workspaces",
          "workspaces.name"
        ],
        "type": "enum"
      }
    },
    "GetWebhookOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "active",
          "created_at",
          "delivery_retry_count",
          "failure_deletion_timestamp",
          "filters",
          "filters.action",
          "filters.fields",
          "filters.resource_subtype",
          "last_failure_at",
          "last_failure_content",
          "last_success_at",
          "next_attempt_after",
          "resource",
          "resource.name",
          "target"
        ],
        "type": "enum"
      }
    },
    "GetWebhooksOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "active",
          "created_at",
          "delivery_retry_count",
          "failure_deletion_timestamp",
          "filters",
          "filters.action",
          "filters.fields",
          "filters.resource_subtype",
          "last_failure_at",
          "last_failure_content",
          "last_success_at",
          "next_attempt_after",
          "offset",
          "path",
          "resource",
          "resource.name",
          "target",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GetWorkspaceMembershipOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "is_active",
          "is_admin",
          "is_guest",
          "is_view_only",
          "user",
          "user.name",
          "user_task_list",
          "user_task_list.name",
          "user_task_list.owner",
          "user_task_list.workspace",
          "vacation_dates",
          "vacation_dates.end_on",
          "vacation_dates.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetWorkspaceMembershipsForUserOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "is_active",
          "is_admin",
          "is_guest",
          "is_view_only",
          "offset",
          "path",
          "uri",
          "user",
          "user.name",
          "user_task_list",
          "user_task_list.name",
          "user_task_list.owner",
          "user_task_list.workspace",
          "vacation_dates",
          "vacation_dates.end_on",
          "vacation_dates.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetWorkspaceMembershipsForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "is_active",
          "is_admin",
          "is_guest",
          "is_view_only",
          "offset",
          "path",
          "uri",
          "user",
          "user.name",
          "user_task_list",
          "user_task_list.name",
          "user_task_list.owner",
          "user_task_list.workspace",
          "vacation_dates",
          "vacation_dates.end_on",
          "vacation_dates.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "GetWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "email_domains",
          "is_organization",
          "name"
        ],
        "type": "enum"
      }
    },
    "GetWorkspacesOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "email_domains",
          "is_organization",
          "name",
          "offset",
          "path",
          "uri"
        ],
        "type": "enum"
      }
    },
    "GoalMembershipBaseRoleEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "commenter",
          "editor"
        ],
        "type": "enum"
      }
    },
    "GoalMetricBaseProgressSourceEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "manual",
          "subgoal_progress",
          "project_task_completion",
          "project_milestone_completion",
          "task_completion",
          "external"
        ],
        "type": "enum"
      }
    },
    "GoalMetricBaseResourceSubtypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "number"
        ],
        "type": "enum"
      }
    },
    "GoalMetricBaseUnitEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "currency",
          "percentage"
        ],
        "type": "enum"
      }
    },
    "GoalMetricRequestProgressSourceEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "manual",
          "subgoal_progress",
          "project_task_completion",
          "project_milestone_completion",
          "task_completion",
          "external"
        ],
        "type": "enum"
      }
    },
    "GoalMetricRequestUnitEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "none",
          "currency",
          "percentage"
        ],
        "type": "enum"
      }
    },
    "GoalRelationshipCompactResourceSubtypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "subgoal",
          "supporting_work"
        ],
        "type": "enum"
      }
    },
    "InsertEnumOptionForCustomFieldOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "enabled",
          "name"
        ],
        "type": "enum"
      }
    },
    "InstantiateProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "new_project",
          "new_project.name",
          "new_project_template",
          "new_project_template.name",
          "new_task",
          "new_task.created_by",
          "new_task.name",
          "new_task.resource_subtype",
          "new_task_template",
          "new_task_template.name",
          "resource_subtype",
          "status"
        ],
        "type": "enum"
      }
    },
    "InstantiateTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "new_project",
          "new_project.name",
          "new_project_template",
          "new_project_template.name",
          "new_task",
          "new_task.created_by",
          "new_task.name",
          "new_task.resource_subtype",
          "new_task_template",
          "new_task_template.name",
          "resource_subtype",
          "status"
        ],
        "type": "enum"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "JobResponseStatusEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "not_started",
          "in_progress",
          "succeeded",
          "failed"
        ],
        "type": "enum"
      }
    },
    "MembershipCompactAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "commenter",
          "editor",
          "user",
          "viewer"
        ],
        "type": "enum"
      }
    },
    "MembershipResponseAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "commenter",
          "editor",
          "user",
          "viewer"
        ],
        "type": "enum"
      }
    },
    "OrganizationExportResponseStateEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "pending",
          "started",
          "finished",
          "error"
        ],
        "type": "enum"
      }
    },
    "PortfolioBase1ColorEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "dark-pink",
          "dark-green",
          "dark-blue",
          "dark-red",
          "dark-teal",
          "dark-brown",
          "dark-orange",
          "dark-purple",
          "dark-warm-gray",
          "light-pink",
          "light-green",
          "light-blue",
          "light-red",
          "light-teal",
          "light-brown",
          "light-orange",
          "light-purple",
          "light-warm-gray"
        ],
        "type": "enum"
      }
    },
    "PortfolioResponse1DefaultAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "editor",
          "viewer"
        ],
        "type": "enum"
      }
    },
    "PortfolioResponse1PrivacySettingEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "public_to_domain",
          "members_only"
        ],
        "type": "enum"
      }
    },
    "ProjectBase1ColorEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "dark-pink",
          "dark-green",
          "dark-blue",
          "dark-red",
          "dark-teal",
          "dark-brown",
          "dark-orange",
          "dark-purple",
          "dark-warm-gray",
          "light-pink",
          "light-green",
          "light-blue",
          "light-red",
          "light-teal",
          "light-brown",
          "light-orange",
          "light-purple",
          "light-warm-gray",
          "none",
          ""
        ],
        "type": "enum"
      }
    },
    "ProjectBase1DefaultAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "editor",
          "commenter",
          "viewer"
        ],
        "type": "enum"
      }
    },
    "ProjectBase1DefaultViewEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "list",
          "board",
          "calendar",
          "timeline"
        ],
        "type": "enum"
      }
    },
    "ProjectBase1MinimumAccessLevelForCustomizationEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "editor"
        ],
        "type": "enum"
      }
    },
    "ProjectBase1MinimumAccessLevelForSharingEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "editor"
        ],
        "type": "enum"
      }
    },
    "ProjectBase1PrivacySettingEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "public_to_workspace",
          "private_to_team",
          "private"
        ],
        "type": "enum"
      }
    },
    "ProjectMembershipBaseAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "editor",
          "commenter",
          "viewer"
        ],
        "type": "enum"
      }
    },
    "ProjectMembershipCompactAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "admin",
          "editor",
          "commenter",
          "viewer"
        ],
        "type": "enum"
      }
    },
    "ProjectMembershipNormalResponse1WriteAccessEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "full_write",
          "comment_only"
        ],
        "type": "enum"
      }
    },
    "ProjectResponse1IconEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "list",
          "board",
          "timeline",
          "calendar",
          "rocket",
          "people",
          "graph",
          "star",
          "bug",
          "light_bulb",
          "globe",
          "gear",
          "notebook",
          "computer",
          "check",
          "target",
          "html",
          "megaphone",
          "chat_bubbles",
          "briefcase",
          "page_layout",
          "mountain_flag",
          "puzzle",
          "presentation",
          "line_and_symbols",
          "speed_dial",
          "ribbon",
          "shoe",
          "shopping_basket",
          "map",
          "ticket",
          "coins"
        ],
        "type": "enum"
      }
    },
    "ProjectSaveAsTemplateOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "new_project",
          "new_project.name",
          "new_project_template",
          "new_project_template.name",
          "new_task",
          "new_task.created_by",
          "new_task.name",
          "new_task.resource_subtype",
          "new_task_template",
          "new_task_template.name",
          "resource_subtype",
          "status"
        ],
        "type": "enum"
      }
    },
    "ProjectStatusBase1ColorEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "green",
          "yellow",
          "red",
          "blue",
          "complete"
        ],
        "type": "enum"
      }
    },
    "ProjectStatusRequest1ColorEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "green",
          "yellow",
          "red",
          "blue",
          "complete"
        ],
        "type": "enum"
      }
    },
    "ProjectTemplateBase1ColorEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "dark-pink",
          "dark-green",
          "dark-blue",
          "dark-red",
          "dark-teal",
          "dark-brown",
          "dark-orange",
          "dark-purple",
          "dark-warm-gray",
          "light-pink",
          "light-green",
          "light-blue",
          "light-red",
          "light-teal",
          "light-brown",
          "light-orange",
          "light-purple",
          "light-warm-gray",
          ""
        ],
        "type": "enum"
      }
    },
    "ProjectTemplateInstantiateProjectRequestPrivacySettingEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "public_to_workspace",
          "private_to_team",
          "private"
        ],
        "type": "enum"
      }
    },
    "RemoveFollowerForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "RemoveFollowersForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "owner",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "RemoveFollowersOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "is_workspace_level",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "metric",
          "metric.can_manage",
          "metric.currency_code",
          "metric.current_display_value",
          "metric.current_number_value",
          "metric.initial_number_value",
          "metric.is_custom_weight",
          "metric.precision",
          "metric.progress_source",
          "metric.resource_subtype",
          "metric.target_number_value",
          "metric.unit",
          "name",
          "notes",
          "num_likes",
          "owner",
          "owner.name",
          "start_on",
          "status",
          "team",
          "team.name",
          "time_period",
          "time_period.display_name",
          "time_period.end_on",
          "time_period.period",
          "time_period.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "RemoveMembersForPortfolioOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "created_at",
          "created_by",
          "created_by.name",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "due_on",
          "members",
          "members.name",
          "name",
          "owner",
          "owner.name",
          "permalink_url",
          "privacy_setting",
          "project_templates",
          "project_templates.name",
          "public",
          "start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "RemoveMembersForProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "owner",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "SearchTasksForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "SearchTasksForWorkspaceResourceSubtypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "default_task",
          "milestone"
        ],
        "type": "enum"
      }
    },
    "SearchTasksForWorkspaceSortByEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "due_date",
          "created_at",
          "completed_at",
          "likes",
          "modified_at"
        ],
        "type": "enum"
      }
    },
    "SetParentForTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "StatusUpdateBase1StatusTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "on_track",
          "at_risk",
          "off_track",
          "on_hold",
          "complete",
          "achieved",
          "partial",
          "missed",
          "dropped"
        ],
        "type": "enum"
      }
    },
    "StatusUpdateCompactResourceSubtypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "project_status_update",
          "portfolio_status_update",
          "goal_status_update"
        ],
        "type": "enum"
      }
    },
    "StoryBaseStickerNameEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "green_checkmark",
          "people_dancing",
          "dancing_unicorn",
          "heart",
          "party_popper",
          "people_waving_flags",
          "splashing_narwhal",
          "trophy",
          "yeti_riding_unicorn",
          "celebrating_people",
          "determined_climbers",
          "phoenix_spreading_love"
        ],
        "type": "enum"
      }
    },
    "StoryRequestStickerNameEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "green_checkmark",
          "people_dancing",
          "dancing_unicorn",
          "heart",
          "party_popper",
          "people_waving_flags",
          "splashing_narwhal",
          "trophy",
          "yeti_riding_unicorn",
          "celebrating_people",
          "determined_climbers",
          "phoenix_spreading_love"
        ],
        "type": "enum"
      }
    },
    "StoryResponse1SourceEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "web",
          "email",
          "mobile",
          "api",
          "unknown"
        ],
        "type": "enum"
      }
    },
    "StoryResponse1TypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "comment",
          "system"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TagBase1ColorEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "dark-pink",
          "dark-green",
          "dark-blue",
          "dark-red",
          "dark-teal",
          "dark-brown",
          "dark-orange",
          "dark-purple",
          "dark-warm-gray",
          "light-pink",
          "light-green",
          "light-blue",
          "light-red",
          "light-teal",
          "light-brown",
          "light-orange",
          "light-purple",
          "light-warm-gray",
          ""
        ],
        "type": "enum"
      }
    },
    "TagBaseRequest1ColorEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "dark-pink",
          "dark-green",
          "dark-blue",
          "dark-red",
          "dark-teal",
          "dark-brown",
          "dark-orange",
          "dark-purple",
          "dark-warm-gray",
          "light-pink",
          "light-green",
          "light-blue",
          "light-red",
          "light-teal",
          "light-brown",
          "light-orange",
          "light-purple",
          "light-warm-gray",
          ""
        ],
        "type": "enum"
      }
    },
    "TagUpdateRequest1ColorEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "dark-pink",
          "dark-green",
          "dark-blue",
          "dark-red",
          "dark-teal",
          "dark-brown",
          "dark-orange",
          "dark-purple",
          "dark-warm-gray",
          "light-pink",
          "light-green",
          "light-blue",
          "light-red",
          "light-teal",
          "light-brown",
          "light-orange",
          "light-purple",
          "light-warm-gray",
          ""
        ],
        "type": "enum"
      }
    },
    "TaskBase1ApprovalStatusEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "pending",
          "approved",
          "rejected",
          "changes_requested"
        ],
        "type": "enum"
      }
    },
    "TaskBase1AssigneeStatusEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "today",
          "upcoming",
          "later",
          "new",
          "inbox"
        ],
        "type": "enum"
      }
    },
    "TaskCompactResourceSubtypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "default_task",
          "milestone",
          "approval"
        ],
        "type": "enum"
      }
    },
    "TaskTemplateRecipeCompactTaskResourceSubtypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "default_task",
          "milestone_task",
          "approval_task"
        ],
        "type": "enum"
      }
    },
    "TeamRequest1EditTeamNameOrDescriptionAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamRequest1EditTeamVisibilityOrTrashTeamAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamRequest1GuestInviteManagementAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamRequest1JoinRequestManagementAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamRequest1MemberInviteManagementAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamRequest1TeamContentManagementAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "no_restriction",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamRequest1TeamMemberRemovalAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamRequest1VisibilityEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "secret",
          "request_to_join",
          "public"
        ],
        "type": "enum"
      }
    },
    "TeamResponse1EditTeamNameOrDescriptionAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamResponse1EditTeamVisibilityOrTrashTeamAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamResponse1GuestInviteManagementAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamResponse1JoinRequestManagementAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamResponse1MemberInviteManagementAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamResponse1TeamContentManagementAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "no_restriction",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamResponse1TeamMemberRemovalAccessLevelEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all_team_members",
          "only_team_admins"
        ],
        "type": "enum"
      }
    },
    "TeamResponse1VisibilityEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "secret",
          "request_to_join",
          "public"
        ],
        "type": "enum"
      }
    },
    "TimePeriodCompactPeriodEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "FY",
          "H1",
          "H2",
          "Q1",
          "Q2",
          "Q3",
          "Q4"
        ],
        "type": "enum"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "TypeaheadForWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "name"
        ],
        "type": "enum"
      }
    },
    "TypeaheadForWorkspaceResourceTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "custom_field",
          "goal",
          "project",
          "project_template",
          "portfolio",
          "tag",
          "task",
          "team",
          "user"
        ],
        "type": "enum"
      }
    },
    "TypeaheadForWorkspaceTypeEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "custom_field",
          "portfolio",
          "project",
          "tag",
          "task",
          "user"
        ],
        "type": "enum"
      }
    },
    "URIString": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "UpdateAllocationOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "assignee",
          "assignee.name",
          "created_by",
          "created_by.name",
          "effort",
          "effort.type",
          "effort.value",
          "end_date",
          "parent",
          "parent.name",
          "resource_subtype",
          "start_date"
        ],
        "type": "enum"
      }
    },
    "UpdateCustomFieldOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "asana_created_field",
          "created_by",
          "created_by.name",
          "currency_code",
          "custom_label",
          "custom_label_position",
          "date_value",
          "date_value.date",
          "date_value.date_time",
          "default_access_level",
          "description",
          "display_value",
          "enabled",
          "enum_options",
          "enum_options.color",
          "enum_options.enabled",
          "enum_options.name",
          "enum_value",
          "enum_value.color",
          "enum_value.enabled",
          "enum_value.name",
          "format",
          "has_notifications_enabled",
          "id_prefix",
          "is_formula_field",
          "is_global_to_workspace",
          "is_value_read_only",
          "multi_enum_values",
          "multi_enum_values.color",
          "multi_enum_values.enabled",
          "multi_enum_values.name",
          "name",
          "number_value",
          "people_value",
          "people_value.name",
          "precision",
          "privacy_setting",
          "representation_type",
          "resource_subtype",
          "text_value",
          "type"
        ],
        "type": "enum"
      }
    },
    "UpdateEnumOptionOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "enabled",
          "name"
        ],
        "type": "enum"
      }
    },
    "UpdateGoalMetricOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "is_workspace_level",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "metric",
          "metric.can_manage",
          "metric.currency_code",
          "metric.current_display_value",
          "metric.current_number_value",
          "metric.initial_number_value",
          "metric.is_custom_weight",
          "metric.precision",
          "metric.progress_source",
          "metric.resource_subtype",
          "metric.target_number_value",
          "metric.unit",
          "name",
          "notes",
          "num_likes",
          "owner",
          "owner.name",
          "start_on",
          "status",
          "team",
          "team.name",
          "time_period",
          "time_period.display_name",
          "time_period.end_on",
          "time_period.period",
          "time_period.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "UpdateGoalOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "is_workspace_level",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "metric",
          "metric.can_manage",
          "metric.currency_code",
          "metric.current_display_value",
          "metric.current_number_value",
          "metric.initial_number_value",
          "metric.is_custom_weight",
          "metric.precision",
          "metric.progress_source",
          "metric.resource_subtype",
          "metric.target_number_value",
          "metric.unit",
          "name",
          "notes",
          "num_likes",
          "owner",
          "owner.name",
          "start_on",
          "status",
          "team",
          "team.name",
          "time_period",
          "time_period.display_name",
          "time_period.end_on",
          "time_period.period",
          "time_period.start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "UpdateGoalRelationshipOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "contribution_weight",
          "resource_subtype",
          "supported_goal",
          "supported_goal.name",
          "supported_goal.owner",
          "supported_goal.owner.name",
          "supporting_resource",
          "supporting_resource.name"
        ],
        "type": "enum"
      }
    },
    "UpdatePortfolioOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "created_at",
          "created_by",
          "created_by.name",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "due_on",
          "members",
          "members.name",
          "name",
          "owner",
          "owner.name",
          "permalink_url",
          "privacy_setting",
          "project_templates",
          "project_templates.name",
          "public",
          "start_on",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "UpdateProjectBriefOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "html_text",
          "permalink_url",
          "project",
          "project.name",
          "text",
          "title"
        ],
        "type": "enum"
      }
    },
    "UpdateProjectOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "archived",
          "color",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_from_template",
          "created_from_template.name",
          "current_status",
          "current_status.author",
          "current_status.author.name",
          "current_status.color",
          "current_status.created_at",
          "current_status.created_by",
          "current_status.created_by.name",
          "current_status.html_text",
          "current_status.modified_at",
          "current_status.text",
          "current_status.title",
          "current_status_update",
          "current_status_update.resource_subtype",
          "current_status_update.title",
          "custom_field_settings",
          "custom_field_settings.custom_field",
          "custom_field_settings.custom_field.asana_created_field",
          "custom_field_settings.custom_field.created_by",
          "custom_field_settings.custom_field.created_by.name",
          "custom_field_settings.custom_field.currency_code",
          "custom_field_settings.custom_field.custom_label",
          "custom_field_settings.custom_field.custom_label_position",
          "custom_field_settings.custom_field.date_value",
          "custom_field_settings.custom_field.date_value.date",
          "custom_field_settings.custom_field.date_value.date_time",
          "custom_field_settings.custom_field.default_access_level",
          "custom_field_settings.custom_field.description",
          "custom_field_settings.custom_field.display_value",
          "custom_field_settings.custom_field.enabled",
          "custom_field_settings.custom_field.enum_options",
          "custom_field_settings.custom_field.enum_options.color",
          "custom_field_settings.custom_field.enum_options.enabled",
          "custom_field_settings.custom_field.enum_options.name",
          "custom_field_settings.custom_field.enum_value",
          "custom_field_settings.custom_field.enum_value.color",
          "custom_field_settings.custom_field.enum_value.enabled",
          "custom_field_settings.custom_field.enum_value.name",
          "custom_field_settings.custom_field.format",
          "custom_field_settings.custom_field.has_notifications_enabled",
          "custom_field_settings.custom_field.id_prefix",
          "custom_field_settings.custom_field.is_formula_field",
          "custom_field_settings.custom_field.is_global_to_workspace",
          "custom_field_settings.custom_field.is_value_read_only",
          "custom_field_settings.custom_field.multi_enum_values",
          "custom_field_settings.custom_field.multi_enum_values.color",
          "custom_field_settings.custom_field.multi_enum_values.enabled",
          "custom_field_settings.custom_field.multi_enum_values.name",
          "custom_field_settings.custom_field.name",
          "custom_field_settings.custom_field.number_value",
          "custom_field_settings.custom_field.people_value",
          "custom_field_settings.custom_field.people_value.name",
          "custom_field_settings.custom_field.precision",
          "custom_field_settings.custom_field.privacy_setting",
          "custom_field_settings.custom_field.representation_type",
          "custom_field_settings.custom_field.resource_subtype",
          "custom_field_settings.custom_field.text_value",
          "custom_field_settings.custom_field.type",
          "custom_field_settings.is_important",
          "custom_field_settings.parent",
          "custom_field_settings.parent.name",
          "custom_field_settings.project",
          "custom_field_settings.project.name",
          "custom_fields",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.representation_type",
          "custom_fields.text_value",
          "custom_fields.type",
          "default_access_level",
          "default_view",
          "due_date",
          "due_on",
          "followers",
          "followers.name",
          "html_notes",
          "icon",
          "members",
          "members.name",
          "minimum_access_level_for_customization",
          "minimum_access_level_for_sharing",
          "modified_at",
          "name",
          "notes",
          "owner",
          "permalink_url",
          "privacy_setting",
          "project_brief",
          "public",
          "start_on",
          "team",
          "team.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "UpdateSectionOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "created_at",
          "name",
          "project",
          "project.name",
          "projects",
          "projects.name"
        ],
        "type": "enum"
      }
    },
    "UpdateStoryOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "assignee",
          "assignee.name",
          "created_at",
          "created_by",
          "created_by.name",
          "custom_field",
          "custom_field.date_value",
          "custom_field.date_value.date",
          "custom_field.date_value.date_time",
          "custom_field.display_value",
          "custom_field.enabled",
          "custom_field.enum_options",
          "custom_field.enum_options.color",
          "custom_field.enum_options.enabled",
          "custom_field.enum_options.name",
          "custom_field.enum_value",
          "custom_field.enum_value.color",
          "custom_field.enum_value.enabled",
          "custom_field.enum_value.name",
          "custom_field.id_prefix",
          "custom_field.is_formula_field",
          "custom_field.multi_enum_values",
          "custom_field.multi_enum_values.color",
          "custom_field.multi_enum_values.enabled",
          "custom_field.multi_enum_values.name",
          "custom_field.name",
          "custom_field.number_value",
          "custom_field.representation_type",
          "custom_field.text_value",
          "custom_field.type",
          "dependency",
          "dependency.created_by",
          "dependency.name",
          "dependency.resource_subtype",
          "duplicate_of",
          "duplicate_of.created_by",
          "duplicate_of.name",
          "duplicate_of.resource_subtype",
          "duplicated_from",
          "duplicated_from.created_by",
          "duplicated_from.name",
          "duplicated_from.resource_subtype",
          "follower",
          "follower.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_text",
          "is_editable",
          "is_edited",
          "is_pinned",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "new_approval_status",
          "new_date_value",
          "new_dates",
          "new_dates.due_at",
          "new_dates.due_on",
          "new_dates.start_on",
          "new_enum_value",
          "new_enum_value.color",
          "new_enum_value.enabled",
          "new_enum_value.name",
          "new_multi_enum_values",
          "new_multi_enum_values.color",
          "new_multi_enum_values.enabled",
          "new_multi_enum_values.name",
          "new_name",
          "new_number_value",
          "new_people_value",
          "new_people_value.name",
          "new_resource_subtype",
          "new_section",
          "new_section.name",
          "new_text_value",
          "num_hearts",
          "num_likes",
          "old_approval_status",
          "old_date_value",
          "old_dates",
          "old_dates.due_at",
          "old_dates.due_on",
          "old_dates.start_on",
          "old_enum_value",
          "old_enum_value.color",
          "old_enum_value.enabled",
          "old_enum_value.name",
          "old_multi_enum_values",
          "old_multi_enum_values.color",
          "old_multi_enum_values.enabled",
          "old_multi_enum_values.name",
          "old_name",
          "old_number_value",
          "old_people_value",
          "old_people_value.name",
          "old_resource_subtype",
          "old_section",
          "old_section.name",
          "old_text_value",
          "previews",
          "previews.fallback",
          "previews.footer",
          "previews.header",
          "previews.header_link",
          "previews.html_text",
          "previews.text",
          "previews.title",
          "previews.title_link",
          "project",
          "project.name",
          "resource_subtype",
          "source",
          "sticker_name",
          "story",
          "story.created_at",
          "story.created_by",
          "story.created_by.name",
          "story.resource_subtype",
          "story.text",
          "tag",
          "tag.name",
          "target",
          "target.created_by",
          "target.name",
          "target.resource_subtype",
          "task",
          "task.created_by",
          "task.name",
          "task.resource_subtype",
          "text",
          "type"
        ],
        "type": "enum"
      }
    },
    "UpdateTagOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "color",
          "created_at",
          "followers",
          "followers.name",
          "name",
          "notes",
          "permalink_url",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "UpdateTaskOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "actual_time_minutes",
          "approval_status",
          "assignee",
          "assignee.name",
          "assignee_section",
          "assignee_section.name",
          "assignee_status",
          "completed",
          "completed_at",
          "completed_by",
          "completed_by.name",
          "created_at",
          "created_by",
          "custom_fields",
          "custom_fields.asana_created_field",
          "custom_fields.created_by",
          "custom_fields.created_by.name",
          "custom_fields.currency_code",
          "custom_fields.custom_label",
          "custom_fields.custom_label_position",
          "custom_fields.date_value",
          "custom_fields.date_value.date",
          "custom_fields.date_value.date_time",
          "custom_fields.default_access_level",
          "custom_fields.description",
          "custom_fields.display_value",
          "custom_fields.enabled",
          "custom_fields.enum_options",
          "custom_fields.enum_options.color",
          "custom_fields.enum_options.enabled",
          "custom_fields.enum_options.name",
          "custom_fields.enum_value",
          "custom_fields.enum_value.color",
          "custom_fields.enum_value.enabled",
          "custom_fields.enum_value.name",
          "custom_fields.format",
          "custom_fields.has_notifications_enabled",
          "custom_fields.id_prefix",
          "custom_fields.is_formula_field",
          "custom_fields.is_global_to_workspace",
          "custom_fields.is_value_read_only",
          "custom_fields.multi_enum_values",
          "custom_fields.multi_enum_values.color",
          "custom_fields.multi_enum_values.enabled",
          "custom_fields.multi_enum_values.name",
          "custom_fields.name",
          "custom_fields.number_value",
          "custom_fields.people_value",
          "custom_fields.people_value.name",
          "custom_fields.precision",
          "custom_fields.privacy_setting",
          "custom_fields.representation_type",
          "custom_fields.resource_subtype",
          "custom_fields.text_value",
          "custom_fields.type",
          "custom_type",
          "custom_type.name",
          "custom_type_status_option",
          "custom_type_status_option.name",
          "dependencies",
          "dependents",
          "due_at",
          "due_on",
          "external",
          "external.data",
          "followers",
          "followers.name",
          "hearted",
          "hearts",
          "hearts.user",
          "hearts.user.name",
          "html_notes",
          "is_rendered_as_separator",
          "liked",
          "likes",
          "likes.user",
          "likes.user.name",
          "memberships",
          "memberships.project",
          "memberships.project.name",
          "memberships.section",
          "memberships.section.name",
          "modified_at",
          "name",
          "notes",
          "num_hearts",
          "num_likes",
          "num_subtasks",
          "parent",
          "parent.created_by",
          "parent.name",
          "parent.resource_subtype",
          "permalink_url",
          "projects",
          "projects.name",
          "resource_subtype",
          "start_at",
          "start_on",
          "tags",
          "tags.name",
          "workspace",
          "workspace.name"
        ],
        "type": "enum"
      }
    },
    "UpdateTeamOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "description",
          "edit_team_name_or_description_access_level",
          "edit_team_visibility_or_trash_team_access_level",
          "endorsed",
          "guest_invite_management_access_level",
          "html_description",
          "join_request_management_access_level",
          "member_invite_management_access_level",
          "name",
          "organization",
          "organization.name",
          "permalink_url",
          "team_content_management_access_level",
          "team_member_removal_access_level",
          "visibility"
        ],
        "type": "enum"
      }
    },
    "UpdateTimeTrackingEntryOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "attributable_to",
          "attributable_to.name",
          "created_at",
          "created_by",
          "created_by.name",
          "duration_minutes",
          "entered_on",
          "task",
          "task.created_by",
          "task.name",
          "task.resource_subtype"
        ],
        "type": "enum"
      }
    },
    "UpdateWebhookOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "active",
          "created_at",
          "delivery_retry_count",
          "failure_deletion_timestamp",
          "filters",
          "filters.action",
          "filters.fields",
          "filters.resource_subtype",
          "last_failure_at",
          "last_failure_content",
          "last_success_at",
          "next_attempt_after",
          "resource",
          "resource.name",
          "target"
        ],
        "type": "enum"
      }
    },
    "UpdateWorkspaceOptFieldsEnum": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "email_domains",
          "is_organization",
          "name"
        ],
        "type": "enum"
      }
    }
  }
}
