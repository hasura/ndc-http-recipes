{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api.sendgrid.com",
          "env": "SENDGRID_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "header": "Authorization",
        "scheme": "bearer",
        "value": {
          "env": "SENDGRID_API_KEY"
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "GetIp": {
      "request": {
        "url": "/v3/send_ips/ips/{ip}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "include_region": {
          "description": "Boolean indicating whether or not to return the IP Pool's region information in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "include_region",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ip": {
          "description": "The `ip` path parameter specifies an IP address to make the request against.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ip",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get Details for an IP Address",
      "result_type": {
        "name": "GetIpResultObject",
        "type": "named"
      }
    },
    "GetIpPool": {
      "request": {
        "url": "/v3/send_ips/pools/{poolid}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "include_region": {
          "description": "Boolean indicating whether or not to return the IP Pool's region information in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "include_region",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "poolid": {
          "description": "Specifies the unique ID for an IP Pool.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "poolid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get Details for an IP Pool",
      "result_type": {
        "name": "GetIpPoolResultObject",
        "type": "named"
      }
    },
    "ListIp": {
      "request": {
        "url": "/v3/send_ips/ips",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "after_key": {
          "description": "Specifies which items to be returned by the API. When the `after_key` is specified, the API will return items beginning from the first item after the item specified. This parameter can be used in combination with `limit` to iterate through paginated results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "after_key",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "before_key": {
          "description": "Specifies which items to be returned by the API. When the `before_key` is specified, the API will return items beginning from the first item before the item specified. This parameter can be used in combination with `limit` to iterate through paginated results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "before_key",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "end_added_at": {
          "description": "The `start_added_at` and `end_added_at` parameters are used to set a time window. IP addresses that were added to your account in the specified time window will be returned. The `end_added_at` parameter sets the end of the time window.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "end_added_at",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "include_region": {
          "description": "Boolean indicating whether or not to return the IP Pool's region information in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "include_region",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ip": {
          "description": "Specifies an IP address. The `ip` query parameter can be used to filter results by IP address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "ip",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "is_enabled": {
          "description": "Indicates if the IP address is billed and able to send email. This parameter applies to non-Twilio SendGrid APIs that been added to your Twilio SendGrid account. This parameter's value is `null` for Twilio SendGrid IP addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "is_enabled",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "is_leased": {
          "description": "Indicates whether an IP address is leased from Twilio SendGrid. If `false`, the IP address is not a Twilio SendGrid IP; it is a customer's own IP that has been added to their Twilio SendGrid account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "is_leased",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "is_parent_assigned": {
          "description": "A parent must be assigned to an IP address before the parent can send mail from the IP and before the address can be assigned to an IP pool. Set this parameter value to true to allow the parent to send mail from the IP and make the IP eligible for IP pool assignment using the IP pool endpoints.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "is_parent_assigned",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "limit": {
          "description": "Specifies the number of results to be returned by the API. This parameter can be used in combination with the `before_key` or `after_key` parameters to iterate through paginated results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "pool": {
          "description": "Specifies the unique ID for an IP Pool. When included, only IP addresses belonging to the specified Pool will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "pool",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "region": {
          "description": "Allowed values are `all`, `eu`, and `us`. If you provide a specific region, results will include all pools that have at least one IP in the filtered region. If `all`, pools with at least one IP (regardless of region) will be returned. If the `region` filter is not provided, the query returns all pools, including empty ones.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Region7",
              "type": "named"
            }
          },
          "http": {
            "name": "region",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_added_at": {
          "description": "The `start_added_at` and `end_added_at` parameters are used to set a time window. IP addresses that were added to your account in the specified time window will be returned. The `start_added_at` parameter sets the beginning of the time window.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "start_added_at",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Get a List of all IP Addresses on your Account",
      "result_type": {
        "name": "ListIpResultObject",
        "type": "named"
      }
    },
    "ListIpAssignedToIpPool": {
      "request": {
        "url": "/v3/send_ips/pools/{poolid}/ips",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "after_key": {
          "description": "Specifies which items to be returned by the API. When the `after_key` is specified, the API will return items beginning from the first item after the item specified. This parameter can be used in combination with `limit` to iterate through paginated results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "after_key",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "include_region": {
          "description": "Boolean indicating whether or not to return the IP Pool's region information in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "include_region",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "limit": {
          "description": "Specifies the number of results to be returned by the API. This parameter can be used in combination with the `before_key` or `after_key` parameters to iterate through paginated results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "poolid": {
          "description": "Specifies the unique ID for an IP Pool.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "poolid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get IPs Assigned to an IP Pool",
      "result_type": {
        "name": "ListIpAssignedToIpPoolResultObject",
        "type": "named"
      }
    },
    "ListIpPool": {
      "request": {
        "url": "/v3/send_ips/pools",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "after_key": {
          "description": "Specifies which items to be returned by the API. When the `after_key` is specified, the API will return items beginning from the first item after the item specified. This parameter can be used in combination with `limit` to iterate through paginated results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "after_key",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "include_region": {
          "description": "Boolean indicating whether or not to return the IP Pool's region information in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "include_region",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "ip": {
          "description": "Specifies an IP address. The `ip` query parameter can be used to filter results by IP address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "ip",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "limit": {
          "description": "Specifies the number of results to be returned by the API. This parameter can be used in combination with the `before_key` or `after_key` parameters to iterate through paginated results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "region": {
          "description": "Allowed values are `all`, `eu`, and `us`. If you provide a specific region, results will include all pools that have at least one IP in the filtered region. If `all`, pools with at least one IP (regardless of region) will be returned. If the `region` filter is not provided, the query returns all pools, including empty ones.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Region7",
              "type": "named"
            }
          },
          "http": {
            "name": "region",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "GET all IP Pools that have Associated IPs",
      "result_type": {
        "name": "ListIpPoolResultObject",
        "type": "named"
      }
    },
    "ListSubUserAssignedToIp": {
      "request": {
        "url": "/v3/send_ips/ips/{ip}/subusers",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "after_key": {
          "description": "Specifies which items to be returned by the API. When the `after_key` is specified, the API will return items beginning from the first item after the item specified. This parameter can be used in combination with `limit` to iterate through paginated results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "after_key",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "ip": {
          "description": "The `ip` path parameter specifies an IP address to make the request against.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ip",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "limit": {
          "description": "Specifies the number of results to be returned by the API. This parameter can be used in combination with the `after_key` parameters to iterate through paginated results. The maximum limit is 100.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 100
            }
          }
        }
      },
      "description": "Get a List of Subusers Assigned to an IP",
      "result_type": {
        "name": "ListSubUserAssignedToIpResultObject",
        "type": "named"
      }
    }
  },
  "object_types": {
    "AddIpBodyObjectInput": {
      "fields": {
        "include_region": {
          "description": "Boolean indicating whether or not to return the IP address's region information in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_auto_warmup": {
          "description": "Indicates if the IP address is set to automatically [warmup](https://docs.sendgrid.com/ui/sending-email/warming-up-an-ip-address).",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_parent_assigned": {
          "description": "Indicates if a parent on the account is able to send email from the IP address.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "region": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Region3",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subusers": {
          "description": "An array of Subuser IDs the IP address will be assigned to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "AddIpResultObject": {
      "fields": {
        "ip": {
          "description": "The IP address that was added to your account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_auto_warmup": {
          "description": "Indicates if the IP address is set to automatically [warmup](https://docs.sendgrid.com/ui/sending-email/warming-up-an-ip-address).  This parameter is returned only if the IP address is set to automatically warm up.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_parent_assigned": {
          "description": "Indicates if a parent on the account is able to send email from the IP address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "region": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Region2",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subusers": {
          "description": "An array of Subuser IDs the IP address was assigned to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "AddIpsToIpPoolBodyObjectInput": {
      "fields": {
        "ips": {
          "description": "An array of IP addresses to assign to the specified IP Pool. All assignments must succeed.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "AddIpsToIpPoolResultObject": {
      "fields": {
        "id": {
          "description": "The unique ID of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ips": {
          "description": "An array of IP addresses assigned to the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "The name of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "AddSubUsersToIpBodyObjectInput": {
      "fields": {
        "subusers": {
          "description": "An array of Subuser IDs to be assigned to the specified IP address. All Subuser assignments must succeed.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "AddSubUsersToIpResultObject": {
      "fields": {
        "ip": {
          "description": "The IP address the Subusers were assigned to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subusers": {
          "description": "An array of Subuser IDs that were assigned to the specified IP address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "CreateIpPoolBodyObjectInput": {
      "fields": {
        "ips": {
          "description": "An array of IP addresses to assign to the IP Pool. All assignments must succeed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "The name to assign to the IP Pool. An IP Pool name cannot begin with a space or period.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateIpPoolResultObject": {
      "fields": {
        "id": {
          "description": "The unique ID of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ips": {
          "description": "An array of IP addresses assigned to the IP Pool. All assignments must succeed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "The name assigned to the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "DeleteIpsFromIpPoolBodyObjectInput": {
      "fields": {
        "ips": {
          "description": "An array of IP addresses to remove from the specified IP Pool.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "DeleteSubUsersFromIpBodyObjectInput": {
      "fields": {
        "subusers": {
          "description": "An array of Subuser IDs to be removed from the specified IP address.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "GetIpPoolResultIpCountByRegionObject": {
      "fields": {
        "count": {
          "description": "The number of IP addresses in the pool that are assigned to the region specified in the `region` property for this count.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "region": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Region5",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "GetIpPoolResultObject": {
      "fields": {
        "id": {
          "description": "The unique ID of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ip_count_by_region": {
          "description": "The total number of IP addresses by region. this object is only returned if the `include_region` parameter is included and set to `true` in the API request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetIpPoolResultIpCountByRegionObject",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "ips_preview": {
          "description": "A sample list of IP addresses associated with the IP Pool. The sample is limited to 10 results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "The name of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "total_ip_count": {
          "description": "The total number of IP addresses in the IP Pool. An IP Pool can have a maximum of 100 associated IP addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "GetIpResultObject": {
      "fields": {
        "added_at": {
          "description": "A timestamp indicating when the IP address was added to your account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "ip": {
          "description": "The IP address specified in the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_auto_warmup": {
          "description": "Indicates if the IP address is set to automatically [warmup](https://docs.sendgrid.com/ui/sending-email/warming-up-an-ip-address).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_enabled": {
          "description": "Indicates if the IP address is billed and able to send email. This parameter applies to non-Twilio SendGrid APIs that been added to your Twilio SendGrid account. This parameter's value is `null` for Twilio SendGrid IP addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_leased": {
          "description": "Indicates whether an IP address is leased from Twilio SendGrid. If `false`, the IP address is not a Twilio SendGrid IP; it is a customer's own IP that has been added to their Twilio SendGrid account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_parent_assigned": {
          "description": "Indicates if a parent on the account is able to send email from the IP address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "pools": {
          "description": "An array of IP Pools the IP address is assigned to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetIpResultPoolsObject",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "region": {
          "description": "The region to which the IP address is assigned. This property will only be returned if the `include_region` query parameter is included and set to `true` as part of the API request. Possible values are `us` or `eu`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "updated_at": {
          "description": "A timestamp indicating when the IP was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "GetIpResultPoolsObject": {
      "fields": {
        "id": {
          "description": "The ID of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListIpAssignedToIpPoolResultMetadataNextParamsObject": {
      "description": "A collection of fields that can be used to work the endpoint.",
      "fields": {
        "after_key": {
          "description": "Specifies which items to be returned by the API. When the `after_key` is specified, the API will return items beginning from the first item after the item specified. This parameter can be used in combination with `limit` to iterate through paginated results. The `after_key` cannot be used in combination with the `before_key` parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "include_region": {
          "description": "Indicates whether or not to include the IP address's region. This property will only be returned if the `include_region` query parameter is included and set to `true` as part of the API request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "limit": {
          "description": "The `limit` specified in the request. This parameter will be included only if it was specified in the request. This is not the default limit enforced by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListIpAssignedToIpPoolResultMetadataObject": {
      "fields": {
        "next_params": {
          "description": "A collection of fields that can be used to work the endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ListIpAssignedToIpPoolResultMetadataNextParamsObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ListIpAssignedToIpPoolResultObject": {
      "fields": {
        "_metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ListIpAssignedToIpPoolResultMetadataObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ListIpAssignedToIpPoolResultResultObject",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ListIpAssignedToIpPoolResultResultObject": {
      "fields": {
        "ip": {
          "description": "An IP address assigned to the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "pools": {
          "description": "IP Pools the IP address is assigned to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ListIpAssignedToIpPoolResultResultPoolsObject",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "region": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Region6",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListIpAssignedToIpPoolResultResultPoolsObject": {
      "fields": {
        "id": {
          "description": "The unique ID of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListIpPoolResultMetadataNextParamsObject": {
      "description": "A collection of fields that can be used to work the endpoint.",
      "fields": {
        "after_key": {
          "description": "Specifies which items to be returned by the API. When the `after_key` is specified, the API will return items beginning from the first item after the item specified. This parameter can be used in combination with `limit` to iterate through paginated results. The `after_key` cannot be used in combination with the `before_key` parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "include_region": {
          "description": "Indicates whether or not to include the IP address's region. This property will only be returned if the `include_region` query parameter is included and set to `true` as part of the API request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ip": {
          "description": "The IP address specified in the request. This parameter will be returned only if it was specified in the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "limit": {
          "description": "The `limit` specified in the request. This parameter will be included only if it was specified in the request. This is not the default limit enforced by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Region4",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListIpPoolResultMetadataObject": {
      "fields": {
        "next_params": {
          "description": "A collection of fields that can be used to work the endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ListIpPoolResultMetadataNextParamsObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ListIpPoolResultObject": {
      "fields": {
        "_metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ListIpPoolResultMetadataObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ListIpPoolResultResultObject",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ListIpPoolResultResultObject": {
      "fields": {
        "id": {
          "description": "The unique ID of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ips_preview": {
          "description": "A sample list of IP addresses associated with the IP Pool. The sample is limited to 10 results.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "The name of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "regions": {
          "description": "An array of the unique regions of all the IP addresses returned within the IP pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Items",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "total_ip_count": {
          "description": "The total number of IP addresses in the IP Pool. An IP Pool can have a maximum of 100 associated IP addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "ListIpResultMetadataNextParamsObject": {
      "fields": {
        "after_key": {
          "description": "Specifies which items to be returned by the API. When the `after_key` is specified, the API will return items beginning from the first item after the item specified. This parameter can be used in combination with `limit` to iterate through paginated results. The `after_key` cannot be used in combination with the `before_key` parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "before_key": {
          "description": "Specifies which items to be returned by the API. When the `before_key` is specified, the API will return items beginning from the first item before the item specified. This parameter can be used in combination with `limit` to iterate through paginated results. The `before_key` cannot be used in combination with the `after_key` parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "end_added_at": {
          "description": "The end of the time window specified in the request with the `end_added_at` query parameter. This parameter is returned only when the `end_added_at` parameter is included in the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "include_region": {
          "description": "Indicates whether or not to include the IP address's region. This property will only be returned if the `include_region` query parameter is included and set to `true` as part of the API request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ip": {
          "description": "The IP address specified in the request with the `ip` query parameter. This parameter is returned only when an IP is included in the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_enabled": {
          "description": "Indicates if the IP address is billed and able to send email. This parameter applies to non-Twilio SendGrid APIs that been added to your Twilio SendGrid account. This parameter's value is `null` for Twilio SendGrid IP addresses. This parameter is returned only if the IP address is enabled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_leased": {
          "description": "Indicates whether an IP address is leased from Twilio SendGrid. If `false`, the IP address is not a Twilio SendGrid IP; it is a customer's own IP that has been added to their Twilio SendGrid account. This parameter is returned only if the IP address is leased.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_parent_assigned": {
          "description": "Indicates if a parent on the account is able to send email from the IP address. This parameter is returned only if the IP address is parent assigned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "limit": {
          "description": "The number of items returned in the request. This parameter is returned only when a `limit` is set using the `limit` query parameter in the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "pool": {
          "description": "The IP Pool ID specified in the request with the `pool` query parameter. This parameter is returned only when an IP Pool is included in the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "region": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Region1",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "start_added_at": {
          "description": "The beginning of the time window specified in the request with the `start_added_at` query parameter. This parameter is returned only when the `start_added_at` parameter is included in the request.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListIpResultMetadataObject": {
      "fields": {
        "next_params": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ListIpResultMetadataNextParamsObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ListIpResultObject": {
      "fields": {
        "_metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ListIpResultMetadataObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ListIpResultResultObject",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ListIpResultResultObject": {
      "fields": {
        "added_at": {
          "description": "A timestamp representing when the IP address was added to your account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "ip": {
          "description": "An IP address on your account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_auto_warmup": {
          "description": "Indicates if the IP address is set to automatically [warmup](https://docs.sendgrid.com/ui/sending-email/warming-up-an-ip-address).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_enabled": {
          "description": "Indicates if the IP address is billed and able to send email. This parameter applies to non-Twilio SendGrid APIs that been added to your Twilio SendGrid account. This parameter's value is `null` for Twilio SendGrid IP addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_leased": {
          "description": "Indicates whether an IP address is leased from Twilio SendGrid. If `false`, the IP address is not a Twilio SendGrid IP; it is a customer's own IP that has been added to their Twilio SendGrid account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_parent_assigned": {
          "description": "Indicates if a parent on the account is able to send email from the IP address. This parameter will be returned only if the request was made by the parent account.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "pools": {
          "description": "An array of IP Pools the IP address is assigned to.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ListIpResultResultPoolsObject",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "region": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Region",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "updated_at": {
          "description": "A timestamp indicating when the IP was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "ListIpResultResultPoolsObject": {
      "fields": {
        "id": {
          "description": "The unique ID of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListSubUserAssignedToIpResultMetadataNextParamsObject": {
      "description": "A collection of fields that can be used to work the endpoint.",
      "fields": {
        "after_key": {
          "description": "Specifies which items to be returned by the API. When the `after_key` is specified, the API will return items beginning from the first item after the item specified. This parameter can be used in combination with `limit` to iterate through paginated results. The `after_key` cannot be used in combination with the `before_key` parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "limit": {
          "description": "The `limit` specified in the request. This parameter will be included only if it was specified in the request. This is not the default limit enforced by the API.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListSubUserAssignedToIpResultMetadataObject": {
      "fields": {
        "next_params": {
          "description": "A collection of fields that can be used to work the endpoint.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ListSubUserAssignedToIpResultMetadataNextParamsObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "ListSubUserAssignedToIpResultObject": {
      "fields": {
        "_metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ListSubUserAssignedToIpResultMetadataObject",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "result": {
          "description": "An array of Subuser IDs that have been assigned the specified IP address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "UpdateIpBodyObjectInput": {
      "fields": {
        "is_auto_warmup": {
          "description": "Indicates if the IP address is set to automatically [warmup](https://docs.sendgrid.com/ui/sending-email/warming-up-an-ip-address).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_enabled": {
          "description": "Indicates if the IP address is billed and able to send email. This parameter applies to non-Twilio SendGrid APIs that been added to your Twilio SendGrid account. This parameter's value is `null` for Twilio SendGrid IP addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_parent_assigned": {
          "description": "Indicates if a parent on the account is able to send email from the IP address.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "UpdateIpPoolBodyObjectInput": {
      "fields": {
        "name": {
          "description": "The name to assign to the IP Pool. An IP Pool name cannot begin with a space or period.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateIpPoolResultObject": {
      "fields": {
        "id": {
          "description": "The unique ID of the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name assigned to the IP Pool.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateIpResultObject": {
      "fields": {
        "ip": {
          "description": "The IP address that was updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "is_auto_warmup": {
          "description": "Indicates if the IP address is set to automatically [warmup](https://docs.sendgrid.com/ui/sending-email/warming-up-an-ip-address).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_enabled": {
          "description": "An array of Subuser IDs the IP address was assigned to. This parameter is returned only if the IP address is enabled.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "is_parent_assigned": {
          "description": "Indicates if a parent on the account is able to send email from the IP address. This parameter is returned only if the IP address is parent assigned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    }
  },
  "procedures": {
    "AddIp": {
      "request": {
        "url": "/v3/send_ips/ips",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/send_ips/ips",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddIpBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Add a Twilio SendGrid IP Address",
      "result_type": {
        "name": "AddIpResultObject",
        "type": "named"
      }
    },
    "AddIpsToIpPool": {
      "request": {
        "url": "/v3/send_ips/pools/{poolid}/ips:batchAdd",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/send_ips/pools/{poolid}/ips:batchAdd",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddIpsToIpPoolBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "poolid": {
          "description": "Specifies the unique ID for an IP Pool.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "poolid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add a Batch of IPs to an IP Pool",
      "result_type": {
        "name": "AddIpsToIpPoolResultObject",
        "type": "named"
      }
    },
    "AddSubUsersToIp": {
      "request": {
        "url": "/v3/send_ips/ips/{ip}/subusers:batchAdd",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/send_ips/ips/{ip}/subusers:batchAdd",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AddSubUsersToIpBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "ip": {
          "description": "The `ip` path parameter specifies an IP address to make the request against.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ip",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Assign a Batch of Subusers to an IP",
      "result_type": {
        "name": "AddSubUsersToIpResultObject",
        "type": "named"
      }
    },
    "CreateIpPool": {
      "request": {
        "url": "/v3/send_ips/pools",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/send_ips/pools",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateIpPoolBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create an IP Pool with a Name and IP Assignments",
      "result_type": {
        "name": "CreateIpPoolResultObject",
        "type": "named"
      }
    },
    "DeleteIpPool": {
      "request": {
        "url": "/v3/send_ips/pools/{poolid}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "poolid": {
          "description": "Specifies the unique ID for an IP Pool.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "poolid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete IP Pool",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteIpsFromIpPool": {
      "request": {
        "url": "/v3/send_ips/pools/{poolid}/ips:batchDelete",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/send_ips/pools/{poolid}/ips:batchDelete",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DeleteIpsFromIpPoolBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "poolid": {
          "description": "Specifies the unique ID for an IP Pool.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "poolid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a Batch of IPs from an IP Pool",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSubUsersFromIp": {
      "request": {
        "url": "/v3/send_ips/ips/{ip}/subusers:batchDelete",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/send_ips/ips/{ip}/subusers:batchDelete",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DeleteSubUsersFromIpBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "ip": {
          "description": "The `ip` path parameter specifies an IP address to make the request against.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ip",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a Batch of Subusers from an IP",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "UpdateIp": {
      "request": {
        "url": "/v3/send_ips/ips/{ip}",
        "method": "patch",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PATCH /v3/send_ips/ips/{ip}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateIpBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "ip": {
          "description": "The `ip` path parameter specifies an IP address to make the request against.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "ip",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update Details for an IP Address",
      "result_type": {
        "name": "UpdateIpResultObject",
        "type": "named"
      }
    },
    "UpdateIpPool": {
      "request": {
        "url": "/v3/send_ips/pools/{poolid}",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /v3/send_ips/pools/{poolid}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateIpPoolBodyObjectInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "poolid": {
          "description": "Specifies the unique ID for an IP Pool.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "poolid",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update an IP Pool Name",
      "result_type": {
        "name": "UpdateIpPoolResultObject",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "Items": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "eu",
          "us"
        ],
        "type": "enum"
      }
    },
    "Region": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "eu",
          "us"
        ],
        "type": "enum"
      }
    },
    "Region1": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all",
          "us",
          "eu"
        ],
        "type": "enum"
      }
    },
    "Region2": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "eu",
          "us"
        ],
        "type": "enum"
      }
    },
    "Region3": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "eu",
          "us"
        ],
        "type": "enum"
      }
    },
    "Region4": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all",
          "us",
          "eu"
        ],
        "type": "enum"
      }
    },
    "Region5": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "us",
          "eu"
        ],
        "type": "enum"
      }
    },
    "Region6": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "eu",
          "us"
        ],
        "type": "enum"
      }
    },
    "Region7": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "all",
          "eu",
          "us"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
