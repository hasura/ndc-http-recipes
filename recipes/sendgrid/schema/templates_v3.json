{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api.sendgrid.com",
          "env": "SENDGRID_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "header": "Authorization",
        "scheme": "bearer",
        "value": {
          "env": "SENDGRID_API_KEY"
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "GetTemplate": {
      "request": {
        "url": "/v3/templates/{template_id}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "template_id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a single transactional template.",
      "result_type": {
        "name": "TransactionalTemplate",
        "type": "named"
      }
    },
    "GetTemplateVersion": {
      "request": {
        "url": "/v3/templates/{template_id}/versions/{version_id}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "template_id": {
          "description": "The ID of the original template",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        },
        "version_id": {
          "description": "The ID of the template version",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "version_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        }
      },
      "description": "Retrieve a specific transactional template version.",
      "result_type": {
        "name": "TransactionalTemplateVersionOutput",
        "type": "named"
      }
    },
    "ListTemplate": {
      "request": {
        "url": "/v3/templates",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "generations": {
          "description": "Comma-delimited list specifying which generations of templates to return. Options are `legacy`, `dynamic` or `legacy,dynamic`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Generations",
              "type": "named"
            }
          },
          "http": {
            "name": "generations",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "page_size": {
          "description": "The number of templates to be returned in each page of results",
          "type": {
            "name": "Float64",
            "type": "named"
          },
          "http": {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": [
                "number"
              ],
              "maximum": 200,
              "minimum": 1
            }
          }
        },
        "page_token": {
          "description": "A token corresponding to a specific page of results, as provided by metadata",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "page_token",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve paged transactional templates.",
      "result_type": {
        "name": "ListTemplateResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "CreateTemplateBodyInput": {
      "fields": {
        "generation": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Generation",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name for the new transactional template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "DuplicateTemplateBodyInput": {
      "fields": {
        "name": {
          "description": "The name for the new transactional template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    },
    "ListTemplateResult": {
      "fields": {
        "_metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Metadata",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TransactionalTemplatesTemplateLean",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "Metadata": {
      "fields": {
        "count": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ],
            "minimum": 0
          }
        },
        "next": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "prev": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "self": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "TransactionalTemplate": {
      "fields": {
        "generation": {
          "type": {
            "name": "Generation1",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "The ID of the transactional template.",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid",
            "maxLength": 36,
            "minLength": 36
          }
        },
        "name": {
          "description": "The name for the transactional template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "updated_at": {
          "description": "The date and time that this transactional template version was updated.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^(\\d{4}-\\d{2}-\\d{2}) ((\\d{2}):(\\d{2}):(\\d{2}))$"
          }
        },
        "versions": {
          "description": "The different versions of this transactional template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TransactionalTemplatesVersionOutputLean",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        },
        "warning": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionalTemplateWarning",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "TransactionalTemplateVersionCreateInput": {
      "fields": {
        "active": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "editor": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Editor",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "generate_plain_content": {
          "description": "If true, plain_content is always generated from html_content. If false, plain_content is not altered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "html_content": {
          "description": "The HTML content of the version. Maximum of 1048576 bytes allowed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 1048576
          }
        },
        "name": {
          "description": "Name of the transactional template version.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "plain_content": {
          "description": "Text/plain content of the transactional template version. Maximum of 1048576 bytes allowed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 1048576
          }
        },
        "subject": {
          "description": "Subject of the new transactional template version.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255
          }
        },
        "test_data": {
          "description": "For dynamic templates only, the mock json data that will be used for template preview and test sends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TransactionalTemplateVersionOutput": {
      "fields": {
        "active": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "editor": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Editor1",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "generate_plain_content": {
          "description": "If true, plain_content is always generated from html_content. If false, plain_content is not altered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "html_content": {
          "description": "The HTML content of the Design.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "ID of the transactional template version.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UUID",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid"
          }
        },
        "name": {
          "description": "Name of the transactional template version.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "plain_content": {
          "description": "Plain text content of the Design.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subject": {
          "description": "Subject of the new transactional template version.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255
          }
        },
        "template_id": {
          "description": "ID of the transactional template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "test_data": {
          "description": "For dynamic templates only, the mock json data that will be used for template preview and test sends.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "thumbnail_url": {
          "description": "A Thumbnail preview of the template's html content.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "updated_at": {
          "description": "The date and time that this transactional template version was updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "warnings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TransactionalTemplateWarning",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "TransactionalTemplateWarning": {
      "fields": {
        "message": {
          "description": "Warning message for the user",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "TransactionalTemplatesTemplateLean": {
      "fields": {
        "generation": {
          "type": {
            "name": "Generation1",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "The ID of the transactional template.",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid",
            "maxLength": 36,
            "minLength": 36
          }
        },
        "name": {
          "description": "The name for the transactional template.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "updated_at": {
          "description": "The date and time that this transactional template version was updated.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^(\\d{4}-\\d{2}-\\d{2}) ((\\d{2}):(\\d{2}):(\\d{2}))$"
          }
        },
        "versions": {
          "description": "The different versions of this transactional template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "TransactionalTemplatesVersionOutputLean",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "TransactionalTemplatesVersionOutputLean": {
      "fields": {
        "active": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "editor": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Editor1",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "generate_plain_content": {
          "description": "If true, plain_content is always generated from html_content. If false, plain_content is not altered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "html_content": {
          "description": "The HTML content of the Design.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "ID of the transactional template version.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UUID",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid"
          }
        },
        "name": {
          "description": "Name of the transactional template version.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "plain_content": {
          "description": "Plain text content of the Design.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "subject": {
          "description": "Subject of the new transactional template version.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 255
          }
        },
        "template_id": {
          "description": "ID of the transactional template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "thumbnail_url": {
          "description": "A Thumbnail preview of the template's html content.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "updated_at": {
          "description": "The date and time that this transactional template version was updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "UpdateTemplateBodyInput": {
      "fields": {
        "name": {
          "description": "The name of the transactional template.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        }
      }
    }
  },
  "procedures": {
    "ActivateTemplateVersion": {
      "request": {
        "url": "/v3/templates/{template_id}/versions/{version_id}/activate",
        "method": "post",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "template_id": {
          "description": "The ID of the original template",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        },
        "version_id": {
          "description": "The ID of the template version",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "version_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        }
      },
      "description": "Activate a transactional template version.",
      "result_type": {
        "name": "TransactionalTemplateVersionOutput",
        "type": "named"
      }
    },
    "CreateTemplate": {
      "request": {
        "url": "/v3/templates",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/templates",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateTemplateBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a transactional template.",
      "result_type": {
        "name": "TransactionalTemplate",
        "type": "named"
      }
    },
    "CreateTemplateVersion": {
      "request": {
        "url": "/v3/templates/{template_id}/versions",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/templates/{template_id}/versions",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionalTemplateVersionCreateInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "template_id": {
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        }
      },
      "description": "Create a new transactional template version.",
      "result_type": {
        "name": "TransactionalTemplateVersionOutput",
        "type": "named"
      }
    },
    "DeleteTemplate": {
      "request": {
        "url": "/v3/templates/{template_id}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "template_id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a template.",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteTemplateVersion": {
      "request": {
        "url": "/v3/templates/{template_id}/versions/{version_id}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "template_id": {
          "description": "The ID of the original template",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        },
        "version_id": {
          "description": "The ID of the template version",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "version_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        }
      },
      "description": "Delete a transactional template version.",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DuplicateTemplate": {
      "request": {
        "url": "/v3/templates/{template_id}",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/templates/{template_id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DuplicateTemplateBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "template_id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Duplicate a transactional template.",
      "result_type": {
        "name": "TransactionalTemplate",
        "type": "named"
      }
    },
    "UpdateTemplate": {
      "request": {
        "url": "/v3/templates/{template_id}",
        "method": "patch",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PATCH /v3/templates/{template_id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateTemplateBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "template_id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Edit a transactional template.",
      "result_type": {
        "name": "TransactionalTemplate",
        "type": "named"
      }
    },
    "UpdateTemplateVersion": {
      "request": {
        "url": "/v3/templates/{template_id}/versions/{version_id}",
        "method": "patch",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PATCH /v3/templates/{template_id}/versions/{version_id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TransactionalTemplateVersionCreateInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "template_id": {
          "description": "The ID of the original template",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "template_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        },
        "version_id": {
          "description": "The ID of the template version",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "version_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        }
      },
      "description": "Edit a transactional template version.",
      "result_type": {
        "name": "TransactionalTemplateVersionOutput",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Editor": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "code",
          "design"
        ],
        "type": "enum"
      }
    },
    "Editor1": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "code",
          "design"
        ],
        "type": "enum"
      }
    },
    "Float64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "float64"
      }
    },
    "Generation": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "legacy",
          "dynamic"
        ],
        "type": "enum"
      }
    },
    "Generation1": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "legacy",
          "dynamic"
        ],
        "type": "enum"
      }
    },
    "Generations": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "legacy",
          "dynamic",
          "legacy,dynamic"
        ],
        "type": "enum"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "UUID": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "uuid"
      }
    }
  }
}
