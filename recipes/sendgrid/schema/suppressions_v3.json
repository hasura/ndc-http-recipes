{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api.sendgrid.com",
          "env": "SENDGRID_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "header": "Authorization",
        "scheme": "bearer",
        "value": {
          "env": "SENDGRID_API_KEY"
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "GetAsmGroup": {
      "request": {
        "url": "/v3/asm/groups/{group_id}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "group_id": {
          "description": "The ID of the suppression group you would like to retrieve.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "group_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get information on a single suppression group.",
      "result_type": {
        "name": "GetAsmGroupResult",
        "type": "named"
      }
    },
    "GetAsmSuppression": {
      "request": {
        "url": "/v3/asm/suppressions/{email}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address that you want to search suppression groups for.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve all suppression groups for an email address",
      "result_type": {
        "name": "GetAsmSuppressionResult",
        "type": "named"
      }
    },
    "GetGlobalSuppression": {
      "request": {
        "url": "/v3/asm/suppressions/global/{email}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address of the global suppression you want to retrieve. Or, if you want to check if an email address is on the global suppressions list, enter that email address here.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a Global Suppression",
      "result_type": {
        "name": "GetGlobalSuppressionResult",
        "type": "named"
      }
    },
    "GetInvalidEmail": {
      "request": {
        "url": "/v3/suppression/invalid_emails/{email}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The specific email address of the invalid email entry that you want to retrieve.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a specific invalid email",
      "result_type": {
        "element_type": {
          "name": "InvalidEmail",
          "type": "named"
        },
        "type": "array"
      }
    },
    "GetSpamReport": {
      "request": {
        "url": "/v3/suppression/spam_reports/{email}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address of a specific spam report that you want to retrieve.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a specific spam report",
      "result_type": {
        "element_type": {
          "name": "SpamReportsResponse",
          "type": "named"
        },
        "type": "array"
      }
    },
    "GetSuppressionBlock": {
      "request": {
        "url": "/v3/suppression/blocks/{email}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address of the specific block.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a specific block",
      "result_type": {
        "element_type": {
          "name": "BlocksResponse",
          "type": "named"
        },
        "type": "array"
      }
    },
    "GetSuppressionBounces": {
      "request": {
        "url": "/v3/suppression/bounces/{email}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address of the specific bounce you would like to retrieve",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve a Bounce",
      "result_type": {
        "element_type": {
          "name": "BounceResponse",
          "type": "named"
        },
        "type": "array"
      }
    },
    "GetSuppressionBouncesClassifications": {
      "request": {
        "url": "/v3/suppression/bounces/classifications/{classification}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Accept": {
          "description": "Specifies the content type to be returned by this endpoint. You can choose to receive CSV-formatted data by passing \"text/csv\" in the header.",
          "type": {
            "name": "Accept1",
            "type": "named"
          },
          "http": {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "classification": {
          "description": "The classification you want to filter by. Possible values are: `Content`, `Frequency or Volume Too High`, `Invalid Address`, `Mailbox Unavailable`, `Reputation`, `Technical Failure`, `Unclassified`.",
          "type": {
            "name": "Classification1",
            "type": "named"
          },
          "http": {
            "name": "classification",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "end_date": {
          "description": "The end of the time range, in YYYY-MM-DD format, when a bounce was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_date": {
          "description": "The start of the time range, in YYYY-MM-DD format, when a bounce was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve bounce classification over time by domain stats",
      "result_type": {
        "name": "GetSuppressionBouncesClassificationsResult",
        "type": "named"
      }
    },
    "ListAsmGroup": {
      "request": {
        "url": "/v3/asm/groups",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "The ID of the suppression group(s) you want to retrieve.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "id",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve all suppression groups associated with the user.",
      "result_type": {
        "element_type": {
          "name": "SuppressionGroup",
          "type": "named"
        },
        "type": "array"
      }
    },
    "ListAsmSuppression": {
      "request": {
        "url": "/v3/asm/suppressions",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve all suppressions",
      "result_type": {
        "element_type": {
          "name": "ListAsmSuppressionResult",
          "type": "named"
        },
        "type": "array"
      }
    },
    "ListGlobalSuppression": {
      "request": {
        "url": "/v3/suppression/unsubscribes",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "Specifies which records to return based on the records' associated email addresses. For example, `sales` returns records with email addresses that start with 'sales', such as `salesdepartment@example.com` or `sales@example.com`.  You can also use `%25` as a wildcard. For example, `%25market` returns records containing email addresses with the string 'market' anywhere in the email address, and `%25market%25tree` returns records containing email addresses with the string 'market' followed by the string 'tree'. Any reserved characters should be [percent-encoded](https://en.wikipedia.org/wiki/Percent-encoding#Reserved_characters), e.g., the `@` symbol should be encoded as `%40`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "email",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "end_time": {
          "description": "Refers end of the time range in unix timestamp when an unsubscribe email was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "end_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "limit": {
          "description": "`limit` sets the page size, i.e. maximum number of items from the list to be returned for a single API request. If omitted, the default page size is used. The maximum page size for this endpoint is 500 items per page.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 500,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "The number of items in the list to skip over before starting to retrieve the items for the requested page. The default `offset` of `0` represents the beginning of the list, i.e. the start of the first page. To request the second page of the list, set the `offset` to the page size as determined by `limit`. Use multiples of the page size as your `offset` to request further consecutive pages. E.g. assume your page size is set to `10`. An `offset` of `10` requests the second page, an `offset` of `20` requests the third page and so on, provided there are sufficiently many items in your list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_time": {
          "description": "Refers start of the time range in unix timestamp when an unsubscribe email was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "start_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Retrieve all global suppressions",
      "result_type": {
        "element_type": {
          "name": "ListGlobalSuppressionResult",
          "type": "named"
        },
        "type": "array"
      }
    },
    "ListInvalidEmail": {
      "request": {
        "url": "/v3/suppression/invalid_emails",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "This parameter allows you to filter results by email address. Only invalid addresses matching an address passed in this parameter will be returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "email",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "end_time": {
          "description": "Refers end of the time range in unix timestamp when an invalid email was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "end_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "limit": {
          "description": "`limit` sets the page size, i.e. maximum number of items from the list to be returned for a single API request. If omitted, the default page size is used. The maximum page size for this endpoint is 500 items per page.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 500,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "The number of items in the list to skip over before starting to retrieve the items for the requested page. The default `offset` of `0` represents the beginning of the list, i.e. the start of the first page. To request the second page of the list, set the `offset` to the page size as determined by `limit`. Use multiples of the page size as your `offset` to request further consecutive pages. E.g. assume your page size is set to `10`. An `offset` of `10` requests the second page, an `offset` of `20` requests the third page and so on, provided there are sufficiently many items in your list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_time": {
          "description": "Refers start of the time range in unix timestamp when an invalid email was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "start_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Retrieve all invalid emails",
      "result_type": {
        "element_type": {
          "name": "InvalidEmail",
          "type": "named"
        },
        "type": "array"
      }
    },
    "ListSpamReport": {
      "request": {
        "url": "/v3/suppression/spam_reports",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "Specifies which records to return based on the records' associated email addresses. For example, `sales` returns records with email addresses that start with 'sales', such as `salesdepartment@example.com` or `sales@example.com`.  You can also use `%25` as a wildcard. For example, `%25market` returns records containing email addresses with the string 'market' anywhere in the email address, and `%25market%25tree` returns records containing email addresses with the string 'market' followed by the string 'tree'. Any reserved characters should be [percent-encoded](https://en.wikipedia.org/wiki/Percent-encoding#Reserved_characters), e.g., the `@` symbol should be encoded as `%40`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "email",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "end_time": {
          "description": "The end of the time range when a spam report was created (inclusive). This is a unix timestamp.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "end_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "limit": {
          "description": "`limit` sets the page size, i.e. maximum number of items from the list to be returned for a single API request. If omitted, the default page size is used. The maximum page size for this endpoint is 500 items per page.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 500,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "The number of items in the list to skip over before starting to retrieve the items for the requested page. The default `offset` of `0` represents the beginning of the list, i.e. the start of the first page. To request the second page of the list, set the `offset` to the page size as determined by `limit`. Use multiples of the page size as your `offset` to request further consecutive pages. E.g. assume your page size is set to `10`. An `offset` of `10` requests the second page, an `offset` of `20` requests the third page and so on, provided there are sufficiently many items in your list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_time": {
          "description": "The start of the time range when a spam report was created (inclusive). This is a unix timestamp.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "start_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Retrieve all spam reports",
      "result_type": {
        "element_type": {
          "name": "SpamReportsResponse",
          "type": "named"
        },
        "type": "array"
      }
    },
    "ListSuppressionBlock": {
      "request": {
        "url": "/v3/suppression/blocks",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "Specifies which records to return based on the records' associated email addresses. For example, `sales` returns records with email addresses that start with 'sales', such as `salesdepartment@example.com` or `sales@example.com`.  You can also use `%25` as a wildcard. For example, `%25market` returns records containing email addresses with the string 'market' anywhere in the email address, and `%25market%25tree` returns records containing email addresses with the string 'market' followed by the string 'tree'. Any reserved characters should be [percent-encoded](https://en.wikipedia.org/wiki/Percent-encoding#Reserved_characters), e.g., the `@` symbol should be encoded as `%40`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "email",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "end_time": {
          "description": "The end of the time range when a blocked email was created (inclusive). This is a unix timestamp.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "end_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "limit": {
          "description": "`limit` sets the page size, i.e. maximum number of items from the list to be returned for a single API request. If omitted, the default page size is used. The maximum page size for this endpoint is 500 items per page.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 500,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "The number of items in the list to skip over before starting to retrieve the items for the requested page. The default `offset` of `0` represents the beginning of the list, i.e. the start of the first page. To request the second page of the list, set the `offset` to the page size as determined by `limit`. Use multiples of the page size as your `offset` to request further consecutive pages. E.g. assume your page size is set to `10`. An `offset` of `10` requests the second page, an `offset` of `20` requests the third page and so on, provided there are sufficiently many items in your list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_time": {
          "description": "The start of the time range when a blocked email was created (inclusive). This is a unix timestamp.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "start_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Retrieve all blocks",
      "result_type": {
        "element_type": {
          "name": "BlocksResponse",
          "type": "named"
        },
        "type": "array"
      }
    },
    "ListSuppressionBounces": {
      "request": {
        "url": "/v3/suppression/bounces",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Accept": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "email": {
          "description": "Specifies which records to return based on the records' associated email addresses. For example, `sales` returns records with email addresses that start with 'sales', such as `salesdepartment@example.com` or `sales@example.com`.  You can also use `%25` as a wildcard. For example, `%25market` returns records containing email addresses with the string 'market' anywhere in the email address, and `%25market%25tree` returns records containing email addresses with the string 'market' followed by the string 'tree'. Any reserved characters should be [percent-encoded](https://en.wikipedia.org/wiki/Percent-encoding#Reserved_characters), e.g., the `@` symbol should be encoded as `%40`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "email",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "end_time": {
          "description": "Refers end of the time range in unix timestamp when a bounce was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "end_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "limit": {
          "description": "`limit` sets the page size, i.e. maximum number of items from the list to be returned for a single API request. If omitted, the default page size is used. The maximum page size for this endpoint is 500 items per page.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "maximum": 500,
              "minimum": 1
            }
          }
        },
        "offset": {
          "description": "The number of items in the list to skip over before starting to retrieve the items for the requested page. The default `offset` of `0` represents the beginning of the list, i.e. the start of the first page. To request the second page of the list, set the `offset` to the page size as determined by `limit`. Use multiples of the page size as your `offset` to request further consecutive pages. E.g. assume your page size is set to `10`. An `offset` of `10` requests the second page, an `offset` of `20` requests the third page and so on, provided there are sufficiently many items in your list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ],
              "minimum": 0
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_time": {
          "description": "Refers start of the time range in unix timestamp when a bounce was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "start_time",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Retrieve all bounces",
      "result_type": {
        "element_type": {
          "name": "BounceResponse",
          "type": "named"
        },
        "type": "array"
      }
    },
    "ListSuppressionBouncesClassifications": {
      "request": {
        "url": "/v3/suppression/bounces/classifications",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "Accept": {
          "description": "Specifies the content type to be returned by this endpoint. You can choose to receive CSV-formatted data by passing \"text/csv\" in the header.",
          "type": {
            "name": "Accept",
            "type": "named"
          },
          "http": {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "end_date": {
          "description": "The end of the time range, in YYYY-MM-DD format, when a bounce was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "start_date": {
          "description": "The start of the time range, in YYYY-MM-DD format, when a bounce was created (inclusive).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve bounce classification totals",
      "result_type": {
        "name": "ListSuppressionBouncesClassificationsResult",
        "type": "named"
      }
    },
    "ListSuppressionFromAsmGroup": {
      "request": {
        "url": "/v3/asm/groups/{group_id}/suppressions",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "group_id": {
          "description": "The id of the unsubscribe group that you are adding suppressions to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "group_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Retrieve all suppressions for a suppression group",
      "result_type": {
        "element_type": {
          "name": "String",
          "type": "named"
        },
        "type": "array"
      }
    }
  },
  "object_types": {
    "AddSuppressionToAsmGroupResult": {
      "fields": {
        "recipient_emails": {
          "description": "The email addresses you added to the unsubscribe group",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        }
      }
    },
    "BlocksResponse": {
      "fields": {
        "created": {
          "description": "A Unix timestamp indicating when the email address was added to the blocks list.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "email": {
          "description": "The email address that was added to the block list.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "reason": {
          "description": "An explanation for the reason of the block.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status": {
          "description": "The status of the block.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "BounceResponse": {
      "fields": {
        "created": {
          "description": "The unix timestamp for when the bounce record was created at SendGrid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Float64",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "email": {
          "description": "The email address that was added to the bounce list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "reason": {
          "description": "The reason for the bounce. This typically will be a bounce code, an enhanced code, and a description.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status": {
          "description": "Enhanced SMTP bounce response",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreatAsmGroupResult": {
      "fields": {
        "description": {
          "description": "A brief description of the suppression group.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "The ID of the suppression group.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "is_default": {
          "description": "Indicates if this is the default suppression group.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the suppression group.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateGlobalSuppressionResult": {
      "fields": {
        "recipient_emails": {
          "description": "The email addresses that are globally suppressed",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        }
      }
    },
    "DeleteInvalidEmailsBody": {
      "fields": {
        "delete_all": {
          "description": "Indicates if you want to remove all email address from the invalid emails list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "emails": {
          "description": "The list of specific email addresses that you want to remove.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        }
      }
    },
    "DeleteSpamReportsBody": {
      "fields": {
        "delete_all": {
          "description": "Indicates if you want to delete all email addresses on the spam report list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "emails": {
          "description": "A list of specific email addresses that you want to remove from the spam report list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "DeleteSuppressionBlocksBody": {
      "fields": {
        "delete_all": {
          "description": "Indicates if you want to delete all blocked email addresses.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "emails": {
          "description": "The specific blocked email addresses that you want to delete.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "DeleteSuppressionBouncesBody": {
      "fields": {
        "delete_all": {
          "description": "This parameter allows you to delete **every** email in your bounce list. This should not be used with the emails parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "emails": {
          "description": "Delete multiple emails from your bounce list at the same time. This should not be used with the delete_all parameter.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "GetAsmGroupResult": {
      "fields": {
        "description": {
          "description": "A brief description of your suppression group. Required when creating a group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "id": {
          "description": "The ID of the suppression group.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "is_default": {
          "description": "Indicates if you would like this to be your default suppression group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "last_email_sent_at": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name of your suppression group. Required when creating a group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 30
          }
        },
        "unsubscribes": {
          "description": "The number of unsubscribes, or suppressions, in this group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "GetAsmSuppressionResult": {
      "fields": {
        "suppressions": {
          "description": "The array of suppression groups.",
          "type": {
            "element_type": {
              "name": "GetAsmSuppressionResultSuppressions",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "GetAsmSuppressionResultSuppressions": {
      "fields": {
        "description": {
          "description": "The description of the suppression group.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "The id of the suppression group.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "is_default": {
          "description": "Indicates if the suppression group  is set as the default.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of the suppression group.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "suppressed": {
          "description": "Indicates if the given email address is suppressed for this group.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        }
      }
    },
    "GetGlobalSuppressionResult": {
      "fields": {
        "recipient_email": {
          "description": "The email address that is globally suppressed. This will be an empty object if the email address you included in your call is not globally suppressed.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        }
      }
    },
    "GetSuppressionBouncesClassificationsResult": {
      "fields": {
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetSuppressionBouncesClassificationsResultResult",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "GetSuppressionBouncesClassificationsResultResult": {
      "fields": {
        "date": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "stats": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "GetSuppressionBouncesClassificationsResultResultStats",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "GetSuppressionBouncesClassificationsResultResultStats": {
      "fields": {
        "count": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "domain": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "InvalidEmail": {
      "fields": {
        "created": {
          "description": "A Unix timestamp indicating when the email address was added to the invalid emails list.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "email": {
          "description": "The email address that was marked as invalid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "reason": {
          "description": "The reason that the email address was marked as invalid.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListAsmSuppressionResult": {
      "fields": {
        "created_at": {
          "description": "A UNIX timestamp indicating when the suppression was created.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "email": {
          "description": "The email address that was suppressed.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "group_id": {
          "description": "The id of the suppression group that this email address belongs to.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "group_name": {
          "description": "The name of the suppression group that this email address belongs to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListGlobalSuppressionResult": {
      "fields": {
        "created": {
          "description": "A Unix timestamp indicating when the recipient was added to the global suppression list.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "email": {
          "description": "The email address of the recipient who is globally suppressed.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        }
      }
    },
    "ListSuppressionBouncesClassificationsResult": {
      "fields": {
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ListSuppressionBouncesClassificationsResultResult",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ListSuppressionBouncesClassificationsResultResult": {
      "fields": {
        "date": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "stats": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "ListSuppressionBouncesClassificationsResultResultStats",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "ListSuppressionBouncesClassificationsResultResultStats": {
      "fields": {
        "classification": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Classification",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "count": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "SpamReportsResponse": {
      "fields": {
        "created": {
          "description": "A Unix timestamp that indicates when the recipient marked your message as spam.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "email": {
          "description": "The email address of the recipient that marked your message as spam.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email"
          }
        },
        "ip": {
          "description": "The IP address that the message was sent from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SuppressionGroup": {
      "fields": {
        "description": {
          "description": "A description of the suppression group.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "id": {
          "description": "The id of the suppression group.",
          "type": {
            "name": "Float64",
            "type": "named"
          },
          "http": {
            "type": [
              "number"
            ]
          }
        },
        "is_default": {
          "description": "Indicates if this is the default suppression group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "last_email_sent_at": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "name": {
          "description": "The name of the suppression group. Each group created by a user must have a unique name.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 30
          }
        },
        "unsubscribes": {
          "description": "The unsubscribes associated with this group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "SuppressionGroupRequestBaseProps": {
      "fields": {
        "description": {
          "description": "A brief description of your suppression group. Required when creating a group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "is_default": {
          "description": "Indicates if you would like this to be your default suppression group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of your suppression group. Required when creating a group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 30
          }
        }
      }
    },
    "SuppressionsRequest": {
      "fields": {
        "recipient_emails": {
          "description": "The array of email addresses to add or find.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        }
      }
    },
    "UpdateAsmGroupBody": {
      "fields": {
        "description": {
          "description": "A brief description of your suppression group. Required when creating a group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100
          }
        },
        "is_default": {
          "description": "Indicates if you would like this to be your default suppression group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "The name of your suppression group. Required when creating a group.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 30
          }
        }
      }
    }
  },
  "procedures": {
    "AddSuppressionToAsmGroup": {
      "request": {
        "url": "/v3/asm/groups/{group_id}/suppressions",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/asm/groups/{group_id}/suppressions",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SuppressionsRequest",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "group_id": {
          "description": "The id of the unsubscribe group that you are adding suppressions to.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "group_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add suppressions to a suppression group",
      "result_type": {
        "name": "AddSuppressionToAsmGroupResult",
        "type": "named"
      }
    },
    "CreatAsmGroup": {
      "request": {
        "url": "/v3/asm/groups",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/asm/groups",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SuppressionGroupRequestBaseProps",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a new suppression group",
      "result_type": {
        "name": "CreatAsmGroupResult",
        "type": "named"
      }
    },
    "CreateGlobalSuppression": {
      "request": {
        "url": "/v3/asm/suppressions/global",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/asm/suppressions/global",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SuppressionsRequest",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Add recipient addresses to the global suppression group.",
      "result_type": {
        "name": "CreateGlobalSuppressionResult",
        "type": "named"
      }
    },
    "DeleteAsmGroup": {
      "request": {
        "url": "/v3/asm/groups/{group_id}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "group_id": {
          "description": "The ID of the suppression group you would like to retrieve.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "group_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a Suppression Group",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteGlobalSuppression": {
      "request": {
        "url": "/v3/asm/suppressions/global/{email}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address of the global suppression you want to retrieve. Or, if you want to check if an email address is on the global suppressions list, enter that email address here.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a Global Suppression",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteInvalidEmail": {
      "request": {
        "url": "/v3/suppression/invalid_emails/{email}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The specific email address of the invalid email entry that you want to retrieve.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a specific invalid email",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteInvalidEmails": {
      "request": {
        "url": "/v3/suppression/invalid_emails",
        "method": "delete",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of DELETE /v3/suppression/invalid_emails",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DeleteInvalidEmailsBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete invalid emails",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteSpamReport": {
      "request": {
        "url": "/v3/suppression/spam_reports/{email}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address of a specific spam report that you want to retrieve.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a specific spam report",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteSpamReports": {
      "request": {
        "url": "/v3/suppression/spam_reports",
        "method": "delete",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of DELETE /v3/suppression/spam_reports",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DeleteSpamReportsBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete spam reports",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteSuppressionBlock": {
      "request": {
        "url": "/v3/suppression/blocks/{email}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address of the specific block.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a specific block",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteSuppressionBlocks": {
      "request": {
        "url": "/v3/suppression/blocks",
        "method": "delete",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of DELETE /v3/suppression/blocks",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DeleteSuppressionBlocksBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete blocks",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteSuppressionBounce": {
      "request": {
        "url": "/v3/suppression/bounces/{email}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address you would like to remove from the bounce list.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a bounce",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "DeleteSuppressionBounces": {
      "request": {
        "url": "/v3/suppression/bounces",
        "method": "delete",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of DELETE /v3/suppression/bounces",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DeleteSuppressionBouncesBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete bounces",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "JSON",
          "type": "named"
        }
      }
    },
    "DeleteSuppressionFromAsmGroup": {
      "request": {
        "url": "/v3/asm/groups/{group_id}/suppressions/{email}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "email": {
          "description": "The email address that you want to remove from the suppression group.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "email",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "group_id": {
          "description": "The id of the suppression group that you are removing an email address from.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "group_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a suppression from a suppression group",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "JSON",
          "type": "named"
        }
      }
    },
    "SearchSuppressionFromAsmGroup": {
      "request": {
        "url": "/v3/asm/groups/{group_id}/suppressions/search",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/asm/groups/{group_id}/suppressions/search",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SuppressionsRequest",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "group_id": {
          "description": "The ID of the suppression group that you would like to search.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "group_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Search for suppressions within a group",
      "result_type": {
        "element_type": {
          "name": "String",
          "type": "named"
        },
        "type": "array"
      }
    },
    "UpdateAsmGroup": {
      "request": {
        "url": "/v3/asm/groups/{group_id}",
        "method": "patch",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PATCH /v3/asm/groups/{group_id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UpdateAsmGroupBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "group_id": {
          "description": "The ID of the suppression group you would like to retrieve.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "group_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a suppression group.",
      "result_type": {
        "name": "SuppressionGroup",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Accept": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "application/json",
          "text/csv"
        ],
        "type": "enum"
      }
    },
    "Accept1": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "application/json",
          "text/csv"
        ],
        "type": "enum"
      }
    },
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Classification": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "Content",
          "Frequency or Volume Too High",
          "Invalid Address",
          "Mailbox Unavailable",
          "Reputation",
          "Technical Failure",
          "Unclassified"
        ],
        "type": "enum"
      }
    },
    "Classification1": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "Content",
          "Frequency or Volume Too High",
          "Invalid Address",
          "Mailbox Unavailable",
          "Reputation",
          "Technical Failure",
          "Unclassified"
        ],
        "type": "enum"
      }
    },
    "Float64": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "float64"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
