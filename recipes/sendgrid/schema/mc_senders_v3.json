{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api.sendgrid.com",
          "env": "SENDGRID_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "header": "Authorization",
        "scheme": "bearer",
        "value": {
          "env": "SENDGRID_API_KEY"
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "GetSender": {
      "request": {
        "url": "/v3/marketing/senders/{id}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "The unique identifier of the Sender.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a specific Sender",
      "result_type": {
        "name": "Sender",
        "type": "named"
      }
    },
    "ListSender": {
      "request": {
        "url": "/v3/marketing/senders",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get a list of all Senders",
      "result_type": {
        "name": "ListSenderResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "CreateSenderBody": {
      "fields": {
        "address": {
          "description": "The physical address of the Sender.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_2": {
          "description": "Additional Sender address information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "city": {
          "description": "The city of the Sender.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "country": {
          "description": "The country of the Sender.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "from": {
          "type": {
            "name": "CreateSenderBodyFrom",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "nickname": {
          "description": "A nickname for the Sender. Not used for sending.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reply_to": {
          "type": {
            "name": "CreateSenderBodyReplyTo",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "state": {
          "description": "The state of the Sender.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "zip": {
          "description": "The zipcode of the Sender.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateSenderBodyFrom": {
      "fields": {
        "email": {
          "description": "The email address from which your recipient will receive emails.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the from email field. Typically your name or company name.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "CreateSenderBodyReplyTo": {
      "fields": {
        "email": {
          "description": "The email address to which your recipient will reply.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the reply to email field. Typically your name or company name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListSenderResult": {
      "fields": {
        "results": {
          "description": "An array of Sender objects.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Sender",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "Sender": {
      "fields": {
        "address": {
          "description": "The physical address of the Sender.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_2": {
          "description": "Additional Sender address information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "city": {
          "description": "The city of the Sender.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "country": {
          "description": "The country of the Sender.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_at": {
          "description": "The time the Sender was created.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "from": {
          "type": {
            "name": "SenderFrom",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "id": {
          "description": "The unique identifier of the Sender.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "locked": {
          "description": "A boolean flag that is `true` when the Sender is associated with a campaign in Draft, Scheduled, or In Progress status. You cannot update or delete a locked Sender.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "nickname": {
          "description": "A nickname for the Sender. Not used for sending.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reply_to": {
          "type": {
            "name": "SenderReplyTo",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "state": {
          "description": "The state of the Sender.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "updated_at": {
          "description": "The time the Sender was last updated.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "verified": {
          "description": "A boolean flag indicating whether the Sender is verified or not. Only verified Senders can be used to send email.",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "zip": {
          "description": "The zipcode of the Sender.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderFrom": {
      "fields": {
        "email": {
          "description": "The email address from which your recipient will receive emails.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the from email field. Typically your name or company name.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderReplyTo": {
      "fields": {
        "email": {
          "description": "The email address to which your recipient will reply.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the reply to email field. Typically your name or company name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderRequest": {
      "fields": {
        "address": {
          "description": "The physical address of the Sender.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_2": {
          "description": "Additional Sender address information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "city": {
          "description": "The city of the Sender.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "country": {
          "description": "The country of the Sender.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "from": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SenderRequestFrom",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "nickname": {
          "description": "A nickname for the Sender. Not used for sending.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reply_to": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SenderRequestReplyTo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "state": {
          "description": "The state of the Sender.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "zip": {
          "description": "The zipcode of the Sender.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderRequestFrom": {
      "fields": {
        "email": {
          "description": "The email address from which your recipient will receive emails.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the from email field. Typically your name or company name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderRequestReplyTo": {
      "fields": {
        "email": {
          "description": "The email address to which your recipient will reply.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the reply to email field. Typically your name or company name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    }
  },
  "procedures": {
    "CreateSender": {
      "request": {
        "url": "/v3/marketing/senders",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/marketing/senders",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSenderBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a Sender",
      "result_type": {
        "name": "Sender",
        "type": "named"
      }
    },
    "DeleteSender": {
      "request": {
        "url": "/v3/marketing/senders/{id}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "The unique identifier of the Sender.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete a Sender",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "ResetSenderVerification": {
      "request": {
        "url": "/v3/marketing/senders/{id}/resend_verification",
        "method": "post",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "description": "The unique identifier of the Sender.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Resend a Sender verification",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "UpdateSender": {
      "request": {
        "url": "/v3/marketing/senders/{id}",
        "method": "patch",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PATCH /v3/marketing/senders/{id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SenderRequest",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "id": {
          "description": "The unique identifier of the Sender.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update a Sender",
      "result_type": {
        "name": "Sender",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
