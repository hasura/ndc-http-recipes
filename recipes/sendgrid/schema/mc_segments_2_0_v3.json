{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api.sendgrid.com",
          "env": "SENDGRID_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "header": "Authorization",
        "scheme": "bearer",
        "value": {
          "env": "SENDGRID_API_KEY"
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "GetSegment": {
      "request": {
        "url": "/v3/marketing/segments/2.0/{segment_id}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "contacts_sample": {
          "description": "Defaults to `true`. Set to `false` to exclude the contacts_sample in the response.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "contacts_sample",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "segment_id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "segment_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get Segment by ID",
      "result_type": {
        "name": "Segment2xx",
        "type": "named"
      }
    },
    "ListSegment": {
      "request": {
        "url": "/v3/marketing/segments/2.0",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ids": {
          "description": "A list of segment IDs to retrieve. When this parameter is included, the `no_parent_list_ids` and `parent_list_ids` parameters are ignored and only segments with given IDs are returned.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "no_parent_list_id": {
          "description": "If set to `true`, segments with an empty value of `parent_list_id` will be returned in the filter.  If the value is not present, it defaults to 'false'.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "name": "no_parent_list_id",
            "in": "query",
            "schema": {
              "type": [
                "boolean"
              ]
            }
          }
        },
        "parent_list_ids": {
          "description": "A comma separated list up to 50 in size, to filter segments on.  Only segments that have any of these list ids as the parent list will be retrieved. This is different from the parameter of the same name used when creating a segment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "parent_list_ids",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get List of Segments",
      "result_type": {
        "name": "AllSegments200",
        "type": "named"
      }
    }
  },
  "object_types": {
    "AllSegments200": {
      "fields": {
        "_metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Metadata",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "contacts_count": {
          "description": "Total number of contacts present in the segment",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "created_at": {
          "description": "ISO8601 timestamp of when the object was created",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "ID assigned to the segment when created.",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid",
            "maxLength": 36,
            "minLength": 36
          }
        },
        "name": {
          "description": "Name of the segment.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100,
            "minLength": 1
          }
        },
        "next_sample_update": {
          "description": "ISO8601 timestamp of when the samples will be next updated",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent_list_ids": {
          "description": "The array of list ids to filter contacts on when building this segment. It allows only one such list id for now. We will support more in future",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "query_version": {
          "description": "If not set, segment contains a query for use with Segment v1 APIs. If set to '2', segment contains a SQL query for use in v2.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sample_updated_at": {
          "description": "ISO8601 timestamp of when the samples were last updated",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status": {
          "description": "Segment status indicates whether the segment's contacts will be updated periodically",
          "type": {
            "name": "SegmentStatusResponse",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "updated_at": {
          "description": "ISO8601 timestamp of when the object was last updated",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ContactResponse": {
      "fields": {
        "address_line_1": {
          "description": "First line of address of the contact. This is a reserved field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 0
          }
        },
        "address_line_2": {
          "description": "Second line of address of the contact. This is a reserved field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 0
          }
        },
        "alternate_emails": {
          "description": "Alternate emails of the contact. This is a reserved field.",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "email",
              "maxLength": 254,
              "minLength": 3
            }
          }
        },
        "anonymous_id": {
          "description": "The contact's Anonymous ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 254
          }
        },
        "city": {
          "description": "City associated with the contact. This is a reserved field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "pattern": "^[a-zA-Z-\\s\\/\\-\\)\\(\\`\\.\\\"\\']+$",
            "minLength": 0
          }
        },
        "country": {
          "description": "Country associated with the address of the contact. This is a reserved field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 0
          }
        },
        "custom_fields": {
          "description": "The user may choose to create up to 120 custom fields or none at all. This is not a reserved field.",
          "type": {
            "name": "ContactResponseCustomFieldsObject",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "email": {
          "description": "Email of the contact. This is a reserved field.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "email",
            "maxLength": 254,
            "minLength": 3
          }
        },
        "external_id": {
          "description": "The contact's External ID.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 254
          }
        },
        "first_name": {
          "description": "First name of the contact. This is a reserved field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "id": {
          "description": "ID assigned to a contact when added to the system.",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid",
            "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
            "maxLength": 36
          }
        },
        "last_name": {
          "description": "Last name of the contact. This is a reserved field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 1
          }
        },
        "list_ids": {
          "description": "IDs of all lists the contact is part of",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UUID",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        },
        "phone_number_id": {
          "description": "The contact's Phone Number ID. This must be a valid phone number.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "postal_code": {
          "description": "Zipcode associated with the address of the contact. This is a reserved field.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "segment_ids": {
          "description": "IDs of all segments the contact is part of",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UUID",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        },
        "state_province_region": {
          "description": "State associated with the contact. This is a reserved field.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 0
          }
        }
      }
    },
    "ContactResponseCustomFieldsObject": {
      "description": "The user may choose to create up to 120 custom fields or none at all. This is not a reserved field.",
      "fields": {
        "custom_field_name1": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 0
          }
        },
        "custom_field_name2": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "minLength": 0
          }
        }
      }
    },
    "Metadata": {
      "fields": {
        "count": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ],
            "minimum": 0
          }
        },
        "next": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "prev": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "self": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URIString",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "Segment2xx": {
      "fields": {
        "contacts_count": {
          "description": "Total number of contacts present in the segment",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "contacts_sample": {
          "description": "A subset of all contacts that are in this segment",
          "type": {
            "element_type": {
              "name": "ContactResponse",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        },
        "created_at": {
          "description": "ISO8601 timestamp of when the object was created",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "id": {
          "description": "ID assigned to the segment when created.",
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid",
            "maxLength": 36,
            "minLength": 36
          }
        },
        "last_refreshed_at": {
          "description": "The ISO8601 timestamp when the segment was last refreshed in UTC time.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "max_refreshes": {
          "description": "The maximum number of manual refreshes allowed per day for this segment. Currently, only 2 are allowed.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "name": {
          "description": "Name of the segment.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100,
            "minLength": 1
          }
        },
        "next_sample_update": {
          "description": "ISO8601 timestamp of when the samples will be next updated",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "parent_list_ids": {
          "description": "The array of list ids to filter contacts on when building this segment. It allows only one such list id for now. We will support more in future",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "query_dsl": {
          "description": "SQL query which will filter contacts based on the conditions provided",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "query_version": {
          "description": "If not set, segment contains a Query for use with Segment v1 APIs. If set to '2', segment contains a SQL query for use in v2.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "refreshes_used": {
          "description": "The number of times a segment has been manually refreshed since start of today in the user's timezone.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "sample_updated_at": {
          "description": "ISO8601 timestamp of when the samples were last updated",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "status": {
          "description": "Segment status indicates whether the segment's contacts will be updated periodically",
          "type": {
            "name": "SegmentStatusResponse",
            "type": "named"
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "updated_at": {
          "description": "ISO8601 timestamp of when the object was last updated",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SegmentRefresh202": {
      "fields": {
        "job_id": {
          "description": "The ID of the manual refresh job. Used only for internal purposes.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SegmentRefreshRequestInput": {
      "fields": {
        "user_time_zone": {
          "description": "The user's timezone. The timezone is used to reset the refresh count at midnight in the user's local time. Only [IANA time zone format](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) is accepted.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "SegmentRefreshRequest"
    },
    "SegmentStatusResponse": {
      "description": "Segment status indicates whether the segment's contacts will be updated periodically",
      "fields": {
        "error_message": {
          "description": "Describes any errors that were encountered during query validation",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "query_validation": {
          "description": "Status of query validation. PENDING, VALID, or INVALID",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SegmentUpdateInput": {
      "fields": {
        "name": {
          "description": "Name of the segment.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100,
            "minLength": 1
          }
        },
        "query_dsl": {
          "description": "SQL query which will filter contacts based on the conditions provided",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "SegmentUpdate"
    },
    "SegmentWriteV2Input": {
      "fields": {
        "name": {
          "description": "Name of the segment.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100,
            "minLength": 1
          }
        },
        "parent_list_ids": {
          "description": "The array of list ids to filter contacts on when building this segment. It allows only one such list id for now. We will support more in future",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "query_dsl": {
          "description": "SQL query which will filter contacts based on the conditions provided",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      },
      "alias": "SegmentWriteV2"
    }
  },
  "procedures": {
    "CreateSegment": {
      "request": {
        "url": "/v3/marketing/segments/2.0",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/marketing/segments/2.0",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SegmentWriteV2Input",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "description": "Create Segment",
      "result_type": {
        "name": "Segment2xx",
        "type": "named"
      }
    },
    "DeleteSegment": {
      "request": {
        "url": "/v3/marketing/segments/2.0/{segment_id}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "segment_id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "segment_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete segment",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "JSON",
          "type": "named"
        }
      }
    },
    "RefreshSegment": {
      "request": {
        "url": "/v3/marketing/segments/2.0/refresh/{segment_id}",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/marketing/segments/2.0/refresh/{segment_id}",
          "type": {
            "name": "SegmentRefreshRequestInput",
            "type": "named"
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "segment_id": {
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "name": "segment_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ],
              "format": "uuid",
              "maxLength": 36,
              "minLength": 36
            }
          }
        }
      },
      "description": "Manually refresh a segment",
      "result_type": {
        "name": "SegmentRefresh202",
        "type": "named"
      }
    },
    "UpdateSegment": {
      "request": {
        "url": "/v3/marketing/segments/2.0/{segment_id}",
        "method": "patch",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PATCH /v3/marketing/segments/2.0/{segment_id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SegmentUpdateInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body",
            "schema": {
              "type": [
                "object"
              ]
            }
          }
        },
        "segment_id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "segment_id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update Segment",
      "result_type": {
        "name": "Segment2xx",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "URIString": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "UUID": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "uuid"
      }
    }
  }
}
