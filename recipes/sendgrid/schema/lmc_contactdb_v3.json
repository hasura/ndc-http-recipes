{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api.sendgrid.com",
          "env": "SENDGRID_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "header": "Authorization",
        "scheme": "bearer",
        "value": {
          "env": "SENDGRID_API_KEY"
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "GetSender": {
      "request": {
        "url": "/v3/senders/{sender_id}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sender_id": {
          "description": "The ID of the sender identity that you want to retrieve.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "name": "sender_id",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "View a Sender Identity",
      "result_type": {
        "name": "SenderId",
        "type": "named"
      }
    },
    "ListSender": {
      "request": {
        "url": "/v3/senders",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get all Sender Identities",
      "result_type": {
        "name": "ListSenderResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "CreateSenderBody": {
      "fields": {
        "address": {
          "description": "The physical address of the sender identity.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_2": {
          "description": "Additional sender identity address information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "city": {
          "description": "The city of the sender identity.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "country": {
          "description": "The country of the sender identity.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "from": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "nickname": {
          "description": "A nickname for the sender identity. Not used for sending.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reply_to": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "JSON",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "state": {
          "description": "The state of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "zip": {
          "description": "The zipcode of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "ListSenderResult": {
      "fields": {
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "SenderId",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "SenderId": {
      "fields": {
        "address": {
          "description": "The physical address of the sender identity.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_2": {
          "description": "Additional sender identity address information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "city": {
          "description": "The city of the sender identity.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "country": {
          "description": "The country of the sender identity.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "created_at": {
          "description": "The time the sender identity was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "from": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SenderIdFrom",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "id": {
          "description": "The unique identifier of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "locked": {
          "description": "True when the sender id is associated to a campaign in the Draft, Scheduled, or In Progress status. You cannot update or delete a locked sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "nickname": {
          "description": "A nickname for the sender identity. Not used for sending.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reply_to": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SenderIdReplyTo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "state": {
          "description": "The state of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "updated_at": {
          "description": "The time the sender identity was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "verified": {
          "description": "If the sender identity is verified or not. Only verified sender identities can be used to send email.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "zip": {
          "description": "The zipcode of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderIdFrom": {
      "fields": {
        "email": {
          "description": "The email address from which your recipient will receive emails.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the from email field. Typically your name or company name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderIdReplyTo": {
      "fields": {
        "email": {
          "description": "The email address to which your recipient will reply.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the reply to email field. Typically your name or company name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderIdRequest": {
      "fields": {
        "address": {
          "description": "The physical address of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "address_2": {
          "description": "Additional sender identity address information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "city": {
          "description": "The city of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "country": {
          "description": "The country of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "from": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SenderIdRequestFrom",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "nickname": {
          "description": "A nickname for the sender identity. Not used for sending.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "reply_to": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SenderIdRequestReplyTo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "state": {
          "description": "The state of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "zip": {
          "description": "The zipcode of the sender identity.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderIdRequestFrom": {
      "fields": {
        "email": {
          "description": "The email address from which your recipient will receive emails.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the from email field. Typically your name or company name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SenderIdRequestReplyTo": {
      "fields": {
        "email": {
          "description": "The email address to which your recipient will reply.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "name": {
          "description": "The name appended to the reply to email field. Typically your name or company name.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    }
  },
  "procedures": {
    "CreateSender": {
      "request": {
        "url": "/v3/senders",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/senders",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "CreateSenderBody",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Create a Sender Identity",
      "result_type": {
        "name": "SenderId",
        "type": "named"
      }
    },
    "DeleteSender": {
      "request": {
        "url": "/v3/senders/{sender_id}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sender_id": {
          "description": "The ID of the sender identity that you want to retrieve.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "name": "sender_id",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Delete a Sender Identity",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "ResetSenderVerification": {
      "request": {
        "url": "/v3/senders/{sender_id}/resend_verification",
        "method": "post",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sender_id": {
          "description": "The ID of the sender identity for which you would like to resend a verification email.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "name": "sender_id",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Resend Sender Identity Verification",
      "result_type": {
        "name": "JSON",
        "type": "named"
      }
    },
    "UpdateSender": {
      "request": {
        "url": "/v3/senders/{sender_id}",
        "method": "patch",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PATCH /v3/senders/{sender_id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SenderIdRequest",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "on-behalf-of": {
          "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id `). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: `). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "on-behalf-of",
            "in": "header",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        },
        "sender_id": {
          "description": "The ID of the sender identity that you want to retrieve.",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "name": "sender_id",
            "in": "path",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "description": "Update a Sender Identity",
      "result_type": {
        "name": "SenderId",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "JSON": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "json"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    }
  }
}
