{
  "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
  "settings": {
    "servers": [
      {
        "url": {
          "value": "https://api.sendgrid.com",
          "env": "SENDGRID_SERVER_URL"
        }
      }
    ],
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "header": "Authorization",
        "scheme": "bearer",
        "value": {
          "env": "SENDGRID_API_KEY"
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "version": "1.0.0"
  },
  "functions": {
    "GetSingleSend": {
      "request": {
        "url": "/v3/marketing/singlesends/{id}",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get Single Send by ID",
      "result_type": {
        "name": "SinglesendResponse",
        "type": "named"
      }
    },
    "ListCategory": {
      "request": {
        "url": "/v3/marketing/singlesends/categories",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {},
      "description": "Get All Categories",
      "result_type": {
        "name": "ListCategoryResult",
        "type": "named"
      }
    },
    "ListSingleSend": {
      "request": {
        "url": "/v3/marketing/singlesends",
        "method": "get",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "page_token": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "page_token",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get All Single Sends",
      "result_type": {
        "name": "ListSingleSendResult",
        "type": "named"
      }
    }
  },
  "object_types": {
    "AbTestSummary": {
      "fields": {
        "duration": {
          "description": "How long the A/B Testing will last",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "expiration_date": {
          "description": "Last day to select an A/B Test Winner",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "test_percentage": {
          "description": "What percentage of your recipient will be included in your A/B testing",
          "type": {
            "name": "Int32",
            "type": "named"
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "type": {
          "type": {
            "name": "Type",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "winner_criteria": {
          "type": {
            "name": "WinnerCriteria",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "winner_selected_at": {
          "description": "When the winner was selected",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "winning_template_id": {
          "description": "Winner of the A/B Test",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "DuplicateSingleSendBodyInput": {
      "fields": {
        "name": {
          "description": "The name of the duplicate Single Send. If you choose to leave the name field blank, your duplicate will be assigned the name of the Single Send it was copied from with the text 'Copy of ' prepended to it. The end of the new Single Send name, including 'Copy of ', will be trimmed if the name exceeds the character limit.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100,
            "minLength": 1
          }
        }
      }
    },
    "ListCategoryResult": {
      "fields": {
        "categories": {
          "description": "list of latest one thousand unique categories associated with all Single Sends in ascending order",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        }
      }
    },
    "ListSingleSendResult": {
      "fields": {
        "_metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Metadata",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "SinglesendResponseShort",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "Metadata": {
      "fields": {
        "count": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ],
            "minimum": 0
          }
        },
        "next": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "prev": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "self": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        }
      }
    },
    "ScheduleSingleSendBodyInput": {
      "fields": {
        "send_at": {
          "description": "The ISO 8601 time at which to send the Single Send. This must be in future or the string `now`. SendGrid [Mail Send](https://docs.sendgrid.com/api-reference/mail-send/mail-send) emails can be scheduled up to 72 hours in advance. However, this scheduling constraint does not apply to emails sent via [Marketing Campaigns](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns/).",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      }
    },
    "ScheduleSingleSendResult": {
      "fields": {
        "send_at": {
          "description": "The ISO 8601 time at which to send the Single Send. This must be in future or the string `now`. SendGrid [Mail Send](https://docs.sendgrid.com/api-reference/mail-send/mail-send) emails can be scheduled up to 72 hours in advance. However, this scheduling constraint does not apply to emails sent via [Marketing Campaigns](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Status",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SearchSingleSendResult": {
      "fields": {
        "_metadata": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Metadata",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "SinglesendResponseShort",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    },
    "SinglesendRequestEmailConfig": {
      "fields": {
        "custom_unsubscribe_url": {
          "description": "The URL allowing recipients to unsubscribe  you must provide this or the `suppression_group_id`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "design_id": {
          "description": "A `design_id` can be used in place of `html_content`, `plain_content`, and/or `subject`. You can retrieve a design's ID from the [\"List Designs\" endpoint](https://docs.sendgrid.com/api-reference/designs-api/list-designs) or by pulling it from the design's detail page URL in the Marketing Campaigns App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "editor": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Editor",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "generate_plain_content": {
          "description": "If set to `true`, `plain_content` is always generated from `html_content`. If set to false, `plain_content` is not altered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "html_content": {
          "description": "The HTML content of the Single Send. Do not include this field when using a `design_id`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ip_pool": {
          "description": "The name of the IP Pool from which the Single Send emails are sent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "plain_content": {
          "description": "The plain text content of the Single Send. Do not include this field when using a `design_id`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sender_id": {
          "description": "The ID of the verified Sender. You can retrieve a verified Sender's ID from the [\"Get Verified Senders\" endpoint](https://www.twilio.com/docs/sendgrid/api-reference/sender-verification/get-all-verified-senders) or by pulling it from the Sender's detail page URL in the SendGrid App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "subject": {
          "description": "The subject line of the Single Send. Do not include this field when using a `design_id`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "suppression_group_id": {
          "description": "The ID of the Suppression Group to allow recipients to unsubscribe  you must provide this or the `custom_unsubscribe_url`.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "SinglesendRequestInput": {
      "fields": {
        "categories": {
          "description": "The categories to associate with this Single Send.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "email_config": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SinglesendRequestEmailConfig",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "name": {
          "description": "The name of the Single Send.",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100,
            "minLength": 1
          }
        },
        "send_at": {
          "description": "Set this property to an ISO 8601 formatted date-time when you would like to send the Single Send. Please note that any `send_at` property value set with this endpoint will prepopulate the send date in the SendGrid user interface (UI). However, the Single Send will remain an unscheduled draft until it's updated with the [**Schedule Single Send**](https://docs.sendgrid.com/api-reference/single-sends/schedule-single-send) endpoint or SendGrid application UI. Additionally, the `now` keyword is a valid `send_at` value only when using the Schedule Single Send endpoint. Setting this property to `now` with this endpoint will cause an error.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "send_to": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SinglesendRequestSendTo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        }
      }
    },
    "SinglesendRequestSendTo": {
      "fields": {
        "all": {
          "description": "Set to `true` to send to All Contacts. If set to `false`, at least one `list_ids` or `segment_ids` value must be provided before the Single Send is scheduled to be sent to recipients.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "list_ids": {
          "description": "The recipient List IDs that will receive the Single Send.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UUID",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        },
        "segment_ids": {
          "description": "The recipient Segment IDs that will receive the Single Send.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UUID",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        }
      }
    },
    "SinglesendResponse": {
      "fields": {
        "categories": {
          "description": "The categories associated with this Single Send.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "created_at": {
          "description": "the ISO 8601 time at which the Single Send was created.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "email_config": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SinglesendResponseEmailConfig",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "id": {
          "description": "The unique ID for the Single Send.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "UUID",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid"
          }
        },
        "name": {
          "description": "The name of the Single Send.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100,
            "minLength": 1
          }
        },
        "send_at": {
          "description": "An ISO 8601 formatted date-time when the Single Send is set to be sent. Please note that any `send_at` property value will have no effect while the Single Send `status` is `draft`. You must update the Single Send with the [**Schedule Single Send**](https://docs.sendgrid.com/api-reference/single-sends/schedule-single-send) endpoint or SendGrid application UI to schedule it.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "send_to": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SinglesendResponseSendTo",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Status2",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "updated_at": {
          "description": "the ISO 8601 time at which the Single Send was last updated.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "warnings": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "SinglesendResponseWarnings",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ]
            }
          }
        }
      }
    },
    "SinglesendResponseEmailConfig": {
      "fields": {
        "custom_unsubscribe_url": {
          "description": "The URL allowing recipients to unsubscribe. You must provide a `custom_unsubscribe_url` or a `suppression_group_id` with your Single Send.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "URI",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uri"
          }
        },
        "design_id": {
          "description": "A `design_id` can be used in place of `html_content`, `plain_content`, and/or `subject`. You can retrieve a design's ID from the [**List Designs** endpoint](https://docs.sendgrid.com/api-reference/designs-api/list-designs) or by pulling it from the design's detail page URL in the Marketing Campaigns App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "editor": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Editor1",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "generate_plain_content": {
          "description": "If this property is set to `true`, `plain_content` is always generated from `html_content`. If it's set to false, `plain_content` is not altered.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "html_content": {
          "description": "The HTML content of the Single Send. This property is not used when a `design_id` value is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "ip_pool": {
          "description": "The name of the IP Pool from which the Single Send emails are sent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "plain_content": {
          "description": "The plain text content of the Single Send. This property is not used when a `design_id` value is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "sender_id": {
          "description": "The ID of the verified sender from whom the Single Send will be sent. You can retrieve a verified sender's ID from the [**Get Verified Senders** endpoint](https://www.twilio.com/docs/sendgrid/api-reference/sender-verification/get-all-verified-senders) or by pulling it from the sender's detail page URL in the SendGrid App.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        },
        "subject": {
          "description": "The subject line of the Single Send. This property is not used when a `design_id` value is set.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "suppression_group_id": {
          "description": "The ID of the Suppression Group to allow recipients to unsubscribe. You must provide a `suppression_group_id` or the `custom_unsubscribe_url` with your Single Send.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "integer"
            ]
          }
        }
      }
    },
    "SinglesendResponseSendTo": {
      "fields": {
        "all": {
          "description": "If this property is set to `true`, the Single Send will be sent to all of your contacts. If it's set to `false`, at least one `list_ids` or `segment_ids` value must be provided before the Single Send is scheduled to be sent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Boolean",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "list_ids": {
          "description": "The IDs of each contact list to which the Single Send will be sent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UUID",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        },
        "segment_ids": {
          "description": "The IDs of each segment to which the Single Send will be sent.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "UUID",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "format": "uuid"
            }
          }
        }
      }
    },
    "SinglesendResponseShort": {
      "fields": {
        "abtest": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "AbTestSummary",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "object"
            ]
          }
        },
        "categories": {
          "description": "categories to associate with this Single Send",
          "type": {
            "element_type": {
              "name": "String",
              "type": "named"
            },
            "type": "array"
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "created_at": {
          "description": "the ISO 8601 time at which the Single Send was created",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "id": {
          "type": {
            "name": "UUID",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "uuid"
          }
        },
        "is_abtest": {
          "description": "true if the Single Send's AB Test functionality has been toggled on",
          "type": {
            "name": "Boolean",
            "type": "named"
          },
          "http": {
            "type": [
              "boolean"
            ]
          }
        },
        "name": {
          "description": "name of the Single Send",
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100,
            "minLength": 1
          }
        },
        "send_at": {
          "description": "The ISO 8601 time at which to send the Single Send. This must be in future or the string `now`. SendGrid [Mail Send](https://docs.sendgrid.com/api-reference/mail-send/mail-send) emails can be scheduled up to 72 hours in advance. However, this scheduling constraint does not apply to emails sent via [Marketing Campaigns](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns/).",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "TimestampTZ",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "status": {
          "type": {
            "name": "Status3",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "updated_at": {
          "description": "the ISO 8601 time at which the Single Send was last updated",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        }
      }
    },
    "SinglesendResponseWarnings": {
      "fields": {
        "field": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "message": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        },
        "warning_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SinglesendSchedule": {
      "fields": {
        "send_at": {
          "description": "The ISO 8601 time at which to send the Single Send. This must be in future or the string `now`. SendGrid [Mail Send](https://docs.sendgrid.com/api-reference/mail-send/mail-send) emails can be scheduled up to 72 hours in advance. However, this scheduling constraint does not apply to emails sent via [Marketing Campaigns](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns/).",
          "type": {
            "name": "TimestampTZ",
            "type": "named"
          },
          "http": {
            "type": [
              "string"
            ],
            "format": "date-time"
          }
        },
        "status": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Status1",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ]
          }
        }
      }
    },
    "SinglesendSearchInput": {
      "fields": {
        "categories": {
          "description": "categories to associate with this Single Send, match any single send that has at least one of the categories",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ]
            }
          }
        },
        "name": {
          "description": "leading and trailing wildcard search on name of the Single Send",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "type": [
              "string"
            ],
            "maxLength": 100,
            "minLength": 1
          }
        },
        "status": {
          "description": "current status of the Single Send",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "Items",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "type": [
              "array"
            ]
          }
        }
      }
    }
  },
  "procedures": {
    "CreateSingleSend": {
      "request": {
        "url": "/v3/marketing/singlesends",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/marketing/singlesends",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SinglesendRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        }
      },
      "description": "Create Single Send",
      "result_type": {
        "name": "SinglesendResponse",
        "type": "named"
      }
    },
    "DeleteScheduledSingleSend": {
      "request": {
        "url": "/v3/marketing/singlesends/{id}/schedule",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete Single Send Schedule",
      "result_type": {
        "name": "SinglesendSchedule",
        "type": "named"
      }
    },
    "DeleteSingleSend": {
      "request": {
        "url": "/v3/marketing/singlesends/{id}",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Delete Single Send by ID",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DeleteSingleSends": {
      "request": {
        "url": "/v3/marketing/singlesends",
        "method": "delete",
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "ids": {
          "description": "Single Send IDs to delete",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            }
          },
          "http": {
            "style": "form",
            "explode": false,
            "name": "ids",
            "in": "query",
            "schema": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        }
      },
      "description": "Bulk Delete Single Sends",
      "result_type": {
        "type": "nullable",
        "underlying_type": {
          "name": "Boolean",
          "type": "named"
        }
      }
    },
    "DuplicateSingleSend": {
      "request": {
        "url": "/v3/marketing/singlesends/{id}",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/marketing/singlesends/{id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "DuplicateSingleSendBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Duplicate Single Send",
      "result_type": {
        "name": "SinglesendResponse",
        "type": "named"
      }
    },
    "ScheduleSingleSend": {
      "request": {
        "url": "/v3/marketing/singlesends/{id}/schedule",
        "method": "put",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PUT /v3/marketing/singlesends/{id}/schedule",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "ScheduleSingleSendBodyInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Schedule Single Send",
      "result_type": {
        "name": "ScheduleSingleSendResult",
        "type": "named"
      }
    },
    "SearchSingleSend": {
      "request": {
        "url": "/v3/marketing/singlesends/search",
        "method": "post",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of POST /v3/marketing/singlesends/search",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SinglesendSearchInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "page_size": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "Int32",
              "type": "named"
            }
          },
          "http": {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": [
                "integer"
              ]
            }
          }
        },
        "page_token": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "String",
              "type": "named"
            }
          },
          "http": {
            "name": "page_token",
            "in": "query",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Get Single Sends Search",
      "result_type": {
        "name": "SearchSingleSendResult",
        "type": "named"
      }
    },
    "UpdateSingleSend": {
      "request": {
        "url": "/v3/marketing/singlesends/{id}",
        "method": "patch",
        "requestBody": {
          "contentType": "application/json"
        },
        "response": {
          "contentType": "application/json"
        }
      },
      "arguments": {
        "body": {
          "description": "Request body of PATCH /v3/marketing/singlesends/{id}",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "name": "SinglesendRequestInput",
              "type": "named"
            }
          },
          "http": {
            "in": "body"
          }
        },
        "id": {
          "type": {
            "name": "String",
            "type": "named"
          },
          "http": {
            "name": "id",
            "in": "path",
            "schema": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "description": "Update Single Send",
      "result_type": {
        "name": "SinglesendResponse",
        "type": "named"
      }
    }
  },
  "scalar_types": {
    "Boolean": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "boolean"
      }
    },
    "Editor": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "code",
          "design"
        ],
        "type": "enum"
      }
    },
    "Editor1": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "code",
          "design"
        ],
        "type": "enum"
      }
    },
    "Int32": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "int32"
      }
    },
    "Items": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "draft",
          "scheduled",
          "triggered"
        ],
        "type": "enum"
      }
    },
    "Status": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "scheduled"
        ],
        "type": "enum"
      }
    },
    "Status1": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "draft",
          "scheduled",
          "triggered"
        ],
        "type": "enum"
      }
    },
    "Status2": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "draft",
          "scheduled",
          "triggered"
        ],
        "type": "enum"
      }
    },
    "Status3": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "draft",
          "scheduled",
          "triggered"
        ],
        "type": "enum"
      }
    },
    "String": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "TimestampTZ": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "timestamptz"
      }
    },
    "Type": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "subject",
          "content"
        ],
        "type": "enum"
      }
    },
    "URI": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "string"
      }
    },
    "UUID": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "type": "uuid"
      }
    },
    "WinnerCriteria": {
      "aggregate_functions": {},
      "comparison_operators": {},
      "representation": {
        "one_of": [
          "open",
          "click",
          "manual"
        ],
        "type": "enum"
      }
    }
  }
}
